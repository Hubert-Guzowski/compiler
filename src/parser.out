Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> instructions
Rule 2     program -> <empty>
Rule 3     instructions -> instructions instruction
Rule 4     instructions -> instruction
Rule 5     instruction -> block
Rule 6     instruction -> if
Rule 7     instruction -> for
Rule 8     instruction -> while
Rule 9     instruction -> break ;
Rule 10    instruction -> continue ;
Rule 11    instruction -> return ;
Rule 12    instruction -> print ;
Rule 13    instruction -> statement ;
Rule 14    block -> { instructions }
Rule 15    if -> IF ( condition ) instruction
Rule 16    if -> IF ( condition ) instruction ELSE instruction
Rule 17    for -> FOR variable ASSIGN expression : expression instruction
Rule 18    while -> WHILE ( condition ) instruction
Rule 19    break -> BREAK
Rule 20    continue -> CONTINUE
Rule 21    return -> RETURN
Rule 22    return -> RETURN expression
Rule 23    return -> RETURN condition
Rule 24    print -> PRINT parameters
Rule 25    statement -> assign
Rule 26    statement -> expression
Rule 27    assign -> assignable ASSIGN expression
Rule 28    assign -> assignable ADDASSIGN expression
Rule 29    assign -> assignable MINASSIGN expression
Rule 30    assign -> assignable MULASSIGN expression
Rule 31    assign -> assignable DIVASSIGN expression
Rule 32    assignable -> variable
Rule 33    assignable -> reference
Rule 34    condition -> expression LT expression
Rule 35    condition -> expression GT expression
Rule 36    condition -> expression LTE expression
Rule 37    condition -> expression GTE expression
Rule 38    condition -> expression NE expression
Rule 39    condition -> expression EQ expression
Rule 40    expression -> expression ADD expression
Rule 41    expression -> expression MIN expression
Rule 42    expression -> expression MUL expression
Rule 43    expression -> expression DIV expression
Rule 44    expression -> expression DOTADD expression
Rule 45    expression -> expression DOTMIN expression
Rule 46    expression -> expression DOTMUL expression
Rule 47    expression -> expression DOTDIV expression
Rule 48    expression -> MIN expression
Rule 49    expression -> matrix_obj TRANSPOSE
Rule 50    expression -> variable TRANSPOSE
Rule 51    expression -> STR
Rule 52    expression -> matrix_obj
Rule 53    expression -> vector
Rule 54    expression -> assignable
Rule 55    expression -> number
Rule 56    matrix_obj -> matrix
Rule 57    matrix_obj -> matrix_function
Rule 58    matrix -> [ rows ; ]
Rule 59    rows -> rows ; row
Rule 60    rows -> row
Rule 61    row -> parameters
Rule 62    vector -> [ parameters ]
Rule 63    matrix_function -> EYE ( parameters )
Rule 64    matrix_function -> ZEROS ( parameters )
Rule 65    matrix_function -> ONES ( parameters )
Rule 66    parameters -> parameters , expression
Rule 67    parameters -> expression
Rule 68    reference -> variable [ parameters ]
Rule 69    number -> INT
Rule 70    number -> FLOAT
Rule 71    variable -> ID

Terminals, with rules where they appear

(                    : 15 16 18 63 64 65
)                    : 15 16 18 63 64 65
,                    : 66
:                    : 17
;                    : 9 10 11 12 13 58 59
ADD                  : 40
ADDASSIGN            : 28
ASSIGN               : 17 27
BREAK                : 19
CONTINUE             : 20
DIV                  : 43
DIVASSIGN            : 31
DOTADD               : 44
DOTDIV               : 47
DOTMIN               : 45
DOTMUL               : 46
ELSE                 : 16
EQ                   : 39
EYE                  : 63
FLOAT                : 70
FOR                  : 17
GT                   : 35
GTE                  : 37
ID                   : 71
IF                   : 15 16
INT                  : 69
LT                   : 34
LTE                  : 36
MIN                  : 41 48
MINASSIGN            : 29
MUL                  : 42
MULASSIGN            : 30
NE                   : 38
ONES                 : 65
PRINT                : 24
RETURN               : 21 22 23
STR                  : 51
TRANSPOSE            : 49 50
WHILE                : 18
ZEROS                : 64
[                    : 58 62 68
]                    : 58 62 68
error                : 
{                    : 14
}                    : 14

Nonterminals, with rules where they appear

assign               : 25
assignable           : 27 28 29 30 31 54
block                : 5
break                : 9
condition            : 15 16 18 23
continue             : 10
expression           : 17 17 22 26 27 28 29 30 31 34 34 35 35 36 36 37 37 38 38 39 39 40 40 41 41 42 42 43 43 44 44 45 45 46 46 47 47 48 66 67
for                  : 7
if                   : 6
instruction          : 3 4 15 16 16 17 18
instructions         : 1 3 14
matrix               : 56
matrix_function      : 57
matrix_obj           : 49 52
number               : 55
parameters           : 24 61 62 63 64 65 66 68
print                : 12
program              : 0
reference            : 33
return               : 11
row                  : 59 60
rows                 : 58 59
statement            : 13
variable             : 17 32 50 68
vector               : 53
while                : 8

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . instructions
    (2) program -> .
    (3) instructions -> . instructions instruction
    (4) instructions -> . instruction
    (5) instruction -> . block
    (6) instruction -> . if
    (7) instruction -> . for
    (8) instruction -> . while
    (9) instruction -> . break ;
    (10) instruction -> . continue ;
    (11) instruction -> . return ;
    (12) instruction -> . print ;
    (13) instruction -> . statement ;
    (14) block -> . { instructions }
    (15) if -> . IF ( condition ) instruction
    (16) if -> . IF ( condition ) instruction ELSE instruction
    (17) for -> . FOR variable ASSIGN expression : expression instruction
    (18) while -> . WHILE ( condition ) instruction
    (19) break -> . BREAK
    (20) continue -> . CONTINUE
    (21) return -> . RETURN
    (22) return -> . RETURN expression
    (23) return -> . RETURN condition
    (24) print -> . PRINT parameters
    (25) statement -> . assign
    (26) statement -> . expression
    (27) assign -> . assignable ASSIGN expression
    (28) assign -> . assignable ADDASSIGN expression
    (29) assign -> . assignable MINASSIGN expression
    (30) assign -> . assignable MULASSIGN expression
    (31) assign -> . assignable DIVASSIGN expression
    (40) expression -> . expression ADD expression
    (41) expression -> . expression MIN expression
    (42) expression -> . expression MUL expression
    (43) expression -> . expression DIV expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTMIN expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . MIN expression
    (49) expression -> . matrix_obj TRANSPOSE
    (50) expression -> . variable TRANSPOSE
    (51) expression -> . STR
    (52) expression -> . matrix_obj
    (53) expression -> . vector
    (54) expression -> . assignable
    (55) expression -> . number
    (32) assignable -> . variable
    (33) assignable -> . reference
    (56) matrix_obj -> . matrix
    (57) matrix_obj -> . matrix_function
    (71) variable -> . ID
    (62) vector -> . [ parameters ]
    (69) number -> . INT
    (70) number -> . FLOAT
    (68) reference -> . variable [ parameters ]
    (58) matrix -> . [ rows ; ]
    (63) matrix_function -> . EYE ( parameters )
    (64) matrix_function -> . ZEROS ( parameters )
    (65) matrix_function -> . ONES ( parameters )

    $end            reduce using rule 2 (program -> .)
    {               shift and go to state 13
    IF              shift and go to state 14
    FOR             shift and go to state 15
    WHILE           shift and go to state 18
    BREAK           shift and go to state 19
    CONTINUE        shift and go to state 20
    RETURN          shift and go to state 21
    PRINT           shift and go to state 22
    MIN             shift and go to state 25
    STR             shift and go to state 27
    ID              shift and go to state 33
    [               shift and go to state 34
    INT             shift and go to state 35
    FLOAT           shift and go to state 36
    EYE             shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39

    program                        shift and go to state 1
    instructions                   shift and go to state 2
    instruction                    shift and go to state 3
    block                          shift and go to state 4
    if                             shift and go to state 5
    for                            shift and go to state 6
    while                          shift and go to state 7
    break                          shift and go to state 8
    continue                       shift and go to state 9
    return                         shift and go to state 10
    print                          shift and go to state 11
    statement                      shift and go to state 12
    variable                       shift and go to state 16
    expression                     shift and go to state 17
    assign                         shift and go to state 23
    assignable                     shift and go to state 24
    matrix_obj                     shift and go to state 26
    vector                         shift and go to state 28
    number                         shift and go to state 29
    reference                      shift and go to state 30
    matrix                         shift and go to state 31
    matrix_function                shift and go to state 32

state 1

    (0) S' -> program .



state 2

    (1) program -> instructions .
    (3) instructions -> instructions . instruction
    (5) instruction -> . block
    (6) instruction -> . if
    (7) instruction -> . for
    (8) instruction -> . while
    (9) instruction -> . break ;
    (10) instruction -> . continue ;
    (11) instruction -> . return ;
    (12) instruction -> . print ;
    (13) instruction -> . statement ;
    (14) block -> . { instructions }
    (15) if -> . IF ( condition ) instruction
    (16) if -> . IF ( condition ) instruction ELSE instruction
    (17) for -> . FOR variable ASSIGN expression : expression instruction
    (18) while -> . WHILE ( condition ) instruction
    (19) break -> . BREAK
    (20) continue -> . CONTINUE
    (21) return -> . RETURN
    (22) return -> . RETURN expression
    (23) return -> . RETURN condition
    (24) print -> . PRINT parameters
    (25) statement -> . assign
    (26) statement -> . expression
    (27) assign -> . assignable ASSIGN expression
    (28) assign -> . assignable ADDASSIGN expression
    (29) assign -> . assignable MINASSIGN expression
    (30) assign -> . assignable MULASSIGN expression
    (31) assign -> . assignable DIVASSIGN expression
    (40) expression -> . expression ADD expression
    (41) expression -> . expression MIN expression
    (42) expression -> . expression MUL expression
    (43) expression -> . expression DIV expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTMIN expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . MIN expression
    (49) expression -> . matrix_obj TRANSPOSE
    (50) expression -> . variable TRANSPOSE
    (51) expression -> . STR
    (52) expression -> . matrix_obj
    (53) expression -> . vector
    (54) expression -> . assignable
    (55) expression -> . number
    (32) assignable -> . variable
    (33) assignable -> . reference
    (56) matrix_obj -> . matrix
    (57) matrix_obj -> . matrix_function
    (71) variable -> . ID
    (62) vector -> . [ parameters ]
    (69) number -> . INT
    (70) number -> . FLOAT
    (68) reference -> . variable [ parameters ]
    (58) matrix -> . [ rows ; ]
    (63) matrix_function -> . EYE ( parameters )
    (64) matrix_function -> . ZEROS ( parameters )
    (65) matrix_function -> . ONES ( parameters )

    $end            reduce using rule 1 (program -> instructions .)
    {               shift and go to state 13
    IF              shift and go to state 14
    FOR             shift and go to state 15
    WHILE           shift and go to state 18
    BREAK           shift and go to state 19
    CONTINUE        shift and go to state 20
    RETURN          shift and go to state 21
    PRINT           shift and go to state 22
    MIN             shift and go to state 25
    STR             shift and go to state 27
    ID              shift and go to state 33
    [               shift and go to state 34
    INT             shift and go to state 35
    FLOAT           shift and go to state 36
    EYE             shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39

    instruction                    shift and go to state 40
    block                          shift and go to state 4
    if                             shift and go to state 5
    for                            shift and go to state 6
    while                          shift and go to state 7
    break                          shift and go to state 8
    continue                       shift and go to state 9
    return                         shift and go to state 10
    print                          shift and go to state 11
    statement                      shift and go to state 12
    variable                       shift and go to state 16
    expression                     shift and go to state 17
    assign                         shift and go to state 23
    assignable                     shift and go to state 24
    matrix_obj                     shift and go to state 26
    vector                         shift and go to state 28
    number                         shift and go to state 29
    reference                      shift and go to state 30
    matrix                         shift and go to state 31
    matrix_function                shift and go to state 32

state 3

    (4) instructions -> instruction .

    {               reduce using rule 4 (instructions -> instruction .)
    IF              reduce using rule 4 (instructions -> instruction .)
    FOR             reduce using rule 4 (instructions -> instruction .)
    WHILE           reduce using rule 4 (instructions -> instruction .)
    BREAK           reduce using rule 4 (instructions -> instruction .)
    CONTINUE        reduce using rule 4 (instructions -> instruction .)
    RETURN          reduce using rule 4 (instructions -> instruction .)
    PRINT           reduce using rule 4 (instructions -> instruction .)
    MIN             reduce using rule 4 (instructions -> instruction .)
    STR             reduce using rule 4 (instructions -> instruction .)
    ID              reduce using rule 4 (instructions -> instruction .)
    [               reduce using rule 4 (instructions -> instruction .)
    INT             reduce using rule 4 (instructions -> instruction .)
    FLOAT           reduce using rule 4 (instructions -> instruction .)
    EYE             reduce using rule 4 (instructions -> instruction .)
    ZEROS           reduce using rule 4 (instructions -> instruction .)
    ONES            reduce using rule 4 (instructions -> instruction .)
    $end            reduce using rule 4 (instructions -> instruction .)
    }               reduce using rule 4 (instructions -> instruction .)


state 4

    (5) instruction -> block .

    {               reduce using rule 5 (instruction -> block .)
    IF              reduce using rule 5 (instruction -> block .)
    FOR             reduce using rule 5 (instruction -> block .)
    WHILE           reduce using rule 5 (instruction -> block .)
    BREAK           reduce using rule 5 (instruction -> block .)
    CONTINUE        reduce using rule 5 (instruction -> block .)
    RETURN          reduce using rule 5 (instruction -> block .)
    PRINT           reduce using rule 5 (instruction -> block .)
    MIN             reduce using rule 5 (instruction -> block .)
    STR             reduce using rule 5 (instruction -> block .)
    ID              reduce using rule 5 (instruction -> block .)
    [               reduce using rule 5 (instruction -> block .)
    INT             reduce using rule 5 (instruction -> block .)
    FLOAT           reduce using rule 5 (instruction -> block .)
    EYE             reduce using rule 5 (instruction -> block .)
    ZEROS           reduce using rule 5 (instruction -> block .)
    ONES            reduce using rule 5 (instruction -> block .)
    $end            reduce using rule 5 (instruction -> block .)
    }               reduce using rule 5 (instruction -> block .)
    ELSE            reduce using rule 5 (instruction -> block .)


state 5

    (6) instruction -> if .

    {               reduce using rule 6 (instruction -> if .)
    IF              reduce using rule 6 (instruction -> if .)
    FOR             reduce using rule 6 (instruction -> if .)
    WHILE           reduce using rule 6 (instruction -> if .)
    BREAK           reduce using rule 6 (instruction -> if .)
    CONTINUE        reduce using rule 6 (instruction -> if .)
    RETURN          reduce using rule 6 (instruction -> if .)
    PRINT           reduce using rule 6 (instruction -> if .)
    MIN             reduce using rule 6 (instruction -> if .)
    STR             reduce using rule 6 (instruction -> if .)
    ID              reduce using rule 6 (instruction -> if .)
    [               reduce using rule 6 (instruction -> if .)
    INT             reduce using rule 6 (instruction -> if .)
    FLOAT           reduce using rule 6 (instruction -> if .)
    EYE             reduce using rule 6 (instruction -> if .)
    ZEROS           reduce using rule 6 (instruction -> if .)
    ONES            reduce using rule 6 (instruction -> if .)
    $end            reduce using rule 6 (instruction -> if .)
    }               reduce using rule 6 (instruction -> if .)
    ELSE            reduce using rule 6 (instruction -> if .)


state 6

    (7) instruction -> for .

    {               reduce using rule 7 (instruction -> for .)
    IF              reduce using rule 7 (instruction -> for .)
    FOR             reduce using rule 7 (instruction -> for .)
    WHILE           reduce using rule 7 (instruction -> for .)
    BREAK           reduce using rule 7 (instruction -> for .)
    CONTINUE        reduce using rule 7 (instruction -> for .)
    RETURN          reduce using rule 7 (instruction -> for .)
    PRINT           reduce using rule 7 (instruction -> for .)
    MIN             reduce using rule 7 (instruction -> for .)
    STR             reduce using rule 7 (instruction -> for .)
    ID              reduce using rule 7 (instruction -> for .)
    [               reduce using rule 7 (instruction -> for .)
    INT             reduce using rule 7 (instruction -> for .)
    FLOAT           reduce using rule 7 (instruction -> for .)
    EYE             reduce using rule 7 (instruction -> for .)
    ZEROS           reduce using rule 7 (instruction -> for .)
    ONES            reduce using rule 7 (instruction -> for .)
    $end            reduce using rule 7 (instruction -> for .)
    }               reduce using rule 7 (instruction -> for .)
    ELSE            reduce using rule 7 (instruction -> for .)


state 7

    (8) instruction -> while .

    {               reduce using rule 8 (instruction -> while .)
    IF              reduce using rule 8 (instruction -> while .)
    FOR             reduce using rule 8 (instruction -> while .)
    WHILE           reduce using rule 8 (instruction -> while .)
    BREAK           reduce using rule 8 (instruction -> while .)
    CONTINUE        reduce using rule 8 (instruction -> while .)
    RETURN          reduce using rule 8 (instruction -> while .)
    PRINT           reduce using rule 8 (instruction -> while .)
    MIN             reduce using rule 8 (instruction -> while .)
    STR             reduce using rule 8 (instruction -> while .)
    ID              reduce using rule 8 (instruction -> while .)
    [               reduce using rule 8 (instruction -> while .)
    INT             reduce using rule 8 (instruction -> while .)
    FLOAT           reduce using rule 8 (instruction -> while .)
    EYE             reduce using rule 8 (instruction -> while .)
    ZEROS           reduce using rule 8 (instruction -> while .)
    ONES            reduce using rule 8 (instruction -> while .)
    $end            reduce using rule 8 (instruction -> while .)
    }               reduce using rule 8 (instruction -> while .)
    ELSE            reduce using rule 8 (instruction -> while .)


state 8

    (9) instruction -> break . ;

    ;               shift and go to state 41


state 9

    (10) instruction -> continue . ;

    ;               shift and go to state 42


state 10

    (11) instruction -> return . ;

    ;               shift and go to state 43


state 11

    (12) instruction -> print . ;

    ;               shift and go to state 44


state 12

    (13) instruction -> statement . ;

    ;               shift and go to state 45


state 13

    (14) block -> { . instructions }
    (3) instructions -> . instructions instruction
    (4) instructions -> . instruction
    (5) instruction -> . block
    (6) instruction -> . if
    (7) instruction -> . for
    (8) instruction -> . while
    (9) instruction -> . break ;
    (10) instruction -> . continue ;
    (11) instruction -> . return ;
    (12) instruction -> . print ;
    (13) instruction -> . statement ;
    (14) block -> . { instructions }
    (15) if -> . IF ( condition ) instruction
    (16) if -> . IF ( condition ) instruction ELSE instruction
    (17) for -> . FOR variable ASSIGN expression : expression instruction
    (18) while -> . WHILE ( condition ) instruction
    (19) break -> . BREAK
    (20) continue -> . CONTINUE
    (21) return -> . RETURN
    (22) return -> . RETURN expression
    (23) return -> . RETURN condition
    (24) print -> . PRINT parameters
    (25) statement -> . assign
    (26) statement -> . expression
    (27) assign -> . assignable ASSIGN expression
    (28) assign -> . assignable ADDASSIGN expression
    (29) assign -> . assignable MINASSIGN expression
    (30) assign -> . assignable MULASSIGN expression
    (31) assign -> . assignable DIVASSIGN expression
    (40) expression -> . expression ADD expression
    (41) expression -> . expression MIN expression
    (42) expression -> . expression MUL expression
    (43) expression -> . expression DIV expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTMIN expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . MIN expression
    (49) expression -> . matrix_obj TRANSPOSE
    (50) expression -> . variable TRANSPOSE
    (51) expression -> . STR
    (52) expression -> . matrix_obj
    (53) expression -> . vector
    (54) expression -> . assignable
    (55) expression -> . number
    (32) assignable -> . variable
    (33) assignable -> . reference
    (56) matrix_obj -> . matrix
    (57) matrix_obj -> . matrix_function
    (71) variable -> . ID
    (62) vector -> . [ parameters ]
    (69) number -> . INT
    (70) number -> . FLOAT
    (68) reference -> . variable [ parameters ]
    (58) matrix -> . [ rows ; ]
    (63) matrix_function -> . EYE ( parameters )
    (64) matrix_function -> . ZEROS ( parameters )
    (65) matrix_function -> . ONES ( parameters )

    {               shift and go to state 13
    IF              shift and go to state 14
    FOR             shift and go to state 15
    WHILE           shift and go to state 18
    BREAK           shift and go to state 19
    CONTINUE        shift and go to state 20
    RETURN          shift and go to state 21
    PRINT           shift and go to state 22
    MIN             shift and go to state 25
    STR             shift and go to state 27
    ID              shift and go to state 33
    [               shift and go to state 34
    INT             shift and go to state 35
    FLOAT           shift and go to state 36
    EYE             shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39

    instructions                   shift and go to state 46
    instruction                    shift and go to state 3
    block                          shift and go to state 4
    if                             shift and go to state 5
    for                            shift and go to state 6
    while                          shift and go to state 7
    break                          shift and go to state 8
    continue                       shift and go to state 9
    return                         shift and go to state 10
    print                          shift and go to state 11
    statement                      shift and go to state 12
    variable                       shift and go to state 16
    expression                     shift and go to state 17
    assign                         shift and go to state 23
    assignable                     shift and go to state 24
    matrix_obj                     shift and go to state 26
    vector                         shift and go to state 28
    number                         shift and go to state 29
    reference                      shift and go to state 30
    matrix                         shift and go to state 31
    matrix_function                shift and go to state 32

state 14

    (15) if -> IF . ( condition ) instruction
    (16) if -> IF . ( condition ) instruction ELSE instruction

    (               shift and go to state 47


state 15

    (17) for -> FOR . variable ASSIGN expression : expression instruction
    (71) variable -> . ID

    ID              shift and go to state 33

    variable                       shift and go to state 48

state 16

    (50) expression -> variable . TRANSPOSE
    (32) assignable -> variable .
    (68) reference -> variable . [ parameters ]

  ! shift/reduce conflict for [ resolved as shift
    TRANSPOSE       shift and go to state 49
    ASSIGN          reduce using rule 32 (assignable -> variable .)
    ADDASSIGN       reduce using rule 32 (assignable -> variable .)
    MINASSIGN       reduce using rule 32 (assignable -> variable .)
    MULASSIGN       reduce using rule 32 (assignable -> variable .)
    DIVASSIGN       reduce using rule 32 (assignable -> variable .)
    ADD             reduce using rule 32 (assignable -> variable .)
    MIN             reduce using rule 32 (assignable -> variable .)
    MUL             reduce using rule 32 (assignable -> variable .)
    DIV             reduce using rule 32 (assignable -> variable .)
    DOTADD          reduce using rule 32 (assignable -> variable .)
    DOTMIN          reduce using rule 32 (assignable -> variable .)
    DOTMUL          reduce using rule 32 (assignable -> variable .)
    DOTDIV          reduce using rule 32 (assignable -> variable .)
    ;               reduce using rule 32 (assignable -> variable .)
    LT              reduce using rule 32 (assignable -> variable .)
    GT              reduce using rule 32 (assignable -> variable .)
    LTE             reduce using rule 32 (assignable -> variable .)
    GTE             reduce using rule 32 (assignable -> variable .)
    NE              reduce using rule 32 (assignable -> variable .)
    EQ              reduce using rule 32 (assignable -> variable .)
    ,               reduce using rule 32 (assignable -> variable .)
    ]               reduce using rule 32 (assignable -> variable .)
    )               reduce using rule 32 (assignable -> variable .)
    :               reduce using rule 32 (assignable -> variable .)
    {               reduce using rule 32 (assignable -> variable .)
    IF              reduce using rule 32 (assignable -> variable .)
    FOR             reduce using rule 32 (assignable -> variable .)
    WHILE           reduce using rule 32 (assignable -> variable .)
    BREAK           reduce using rule 32 (assignable -> variable .)
    CONTINUE        reduce using rule 32 (assignable -> variable .)
    RETURN          reduce using rule 32 (assignable -> variable .)
    PRINT           reduce using rule 32 (assignable -> variable .)
    STR             reduce using rule 32 (assignable -> variable .)
    ID              reduce using rule 32 (assignable -> variable .)
    INT             reduce using rule 32 (assignable -> variable .)
    FLOAT           reduce using rule 32 (assignable -> variable .)
    EYE             reduce using rule 32 (assignable -> variable .)
    ZEROS           reduce using rule 32 (assignable -> variable .)
    ONES            reduce using rule 32 (assignable -> variable .)
    [               shift and go to state 50

  ! [               [ reduce using rule 32 (assignable -> variable .) ]


state 17

    (26) statement -> expression .
    (40) expression -> expression . ADD expression
    (41) expression -> expression . MIN expression
    (42) expression -> expression . MUL expression
    (43) expression -> expression . DIV expression
    (44) expression -> expression . DOTADD expression
    (45) expression -> expression . DOTMIN expression
    (46) expression -> expression . DOTMUL expression
    (47) expression -> expression . DOTDIV expression

    ;               reduce using rule 26 (statement -> expression .)
    ADD             shift and go to state 51
    MIN             shift and go to state 52
    MUL             shift and go to state 53
    DIV             shift and go to state 54
    DOTADD          shift and go to state 55
    DOTMIN          shift and go to state 56
    DOTMUL          shift and go to state 57
    DOTDIV          shift and go to state 58


state 18

    (18) while -> WHILE . ( condition ) instruction

    (               shift and go to state 59


state 19

    (19) break -> BREAK .

    ;               reduce using rule 19 (break -> BREAK .)


state 20

    (20) continue -> CONTINUE .

    ;               reduce using rule 20 (continue -> CONTINUE .)


state 21

    (21) return -> RETURN .
    (22) return -> RETURN . expression
    (23) return -> RETURN . condition
    (40) expression -> . expression ADD expression
    (41) expression -> . expression MIN expression
    (42) expression -> . expression MUL expression
    (43) expression -> . expression DIV expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTMIN expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . MIN expression
    (49) expression -> . matrix_obj TRANSPOSE
    (50) expression -> . variable TRANSPOSE
    (51) expression -> . STR
    (52) expression -> . matrix_obj
    (53) expression -> . vector
    (54) expression -> . assignable
    (55) expression -> . number
    (34) condition -> . expression LT expression
    (35) condition -> . expression GT expression
    (36) condition -> . expression LTE expression
    (37) condition -> . expression GTE expression
    (38) condition -> . expression NE expression
    (39) condition -> . expression EQ expression
    (56) matrix_obj -> . matrix
    (57) matrix_obj -> . matrix_function
    (71) variable -> . ID
    (62) vector -> . [ parameters ]
    (32) assignable -> . variable
    (33) assignable -> . reference
    (69) number -> . INT
    (70) number -> . FLOAT
    (58) matrix -> . [ rows ; ]
    (63) matrix_function -> . EYE ( parameters )
    (64) matrix_function -> . ZEROS ( parameters )
    (65) matrix_function -> . ONES ( parameters )
    (68) reference -> . variable [ parameters ]

    ;               reduce using rule 21 (return -> RETURN .)
    MIN             shift and go to state 25
    STR             shift and go to state 27
    ID              shift and go to state 33
    [               shift and go to state 34
    INT             shift and go to state 35
    FLOAT           shift and go to state 36
    EYE             shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39

    expression                     shift and go to state 60
    condition                      shift and go to state 61
    matrix_obj                     shift and go to state 26
    variable                       shift and go to state 16
    vector                         shift and go to state 28
    assignable                     shift and go to state 62
    number                         shift and go to state 29
    matrix                         shift and go to state 31
    matrix_function                shift and go to state 32
    reference                      shift and go to state 30

state 22

    (24) print -> PRINT . parameters
    (66) parameters -> . parameters , expression
    (67) parameters -> . expression
    (40) expression -> . expression ADD expression
    (41) expression -> . expression MIN expression
    (42) expression -> . expression MUL expression
    (43) expression -> . expression DIV expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTMIN expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . MIN expression
    (49) expression -> . matrix_obj TRANSPOSE
    (50) expression -> . variable TRANSPOSE
    (51) expression -> . STR
    (52) expression -> . matrix_obj
    (53) expression -> . vector
    (54) expression -> . assignable
    (55) expression -> . number
    (56) matrix_obj -> . matrix
    (57) matrix_obj -> . matrix_function
    (71) variable -> . ID
    (62) vector -> . [ parameters ]
    (32) assignable -> . variable
    (33) assignable -> . reference
    (69) number -> . INT
    (70) number -> . FLOAT
    (58) matrix -> . [ rows ; ]
    (63) matrix_function -> . EYE ( parameters )
    (64) matrix_function -> . ZEROS ( parameters )
    (65) matrix_function -> . ONES ( parameters )
    (68) reference -> . variable [ parameters ]

    MIN             shift and go to state 25
    STR             shift and go to state 27
    ID              shift and go to state 33
    [               shift and go to state 34
    INT             shift and go to state 35
    FLOAT           shift and go to state 36
    EYE             shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39

    parameters                     shift and go to state 63
    expression                     shift and go to state 64
    matrix_obj                     shift and go to state 26
    variable                       shift and go to state 16
    vector                         shift and go to state 28
    assignable                     shift and go to state 62
    number                         shift and go to state 29
    matrix                         shift and go to state 31
    matrix_function                shift and go to state 32
    reference                      shift and go to state 30

state 23

    (25) statement -> assign .

    ;               reduce using rule 25 (statement -> assign .)


state 24

    (27) assign -> assignable . ASSIGN expression
    (28) assign -> assignable . ADDASSIGN expression
    (29) assign -> assignable . MINASSIGN expression
    (30) assign -> assignable . MULASSIGN expression
    (31) assign -> assignable . DIVASSIGN expression
    (54) expression -> assignable .

    ASSIGN          shift and go to state 65
    ADDASSIGN       shift and go to state 66
    MINASSIGN       shift and go to state 67
    MULASSIGN       shift and go to state 68
    DIVASSIGN       shift and go to state 69
    ADD             reduce using rule 54 (expression -> assignable .)
    MIN             reduce using rule 54 (expression -> assignable .)
    MUL             reduce using rule 54 (expression -> assignable .)
    DIV             reduce using rule 54 (expression -> assignable .)
    DOTADD          reduce using rule 54 (expression -> assignable .)
    DOTMIN          reduce using rule 54 (expression -> assignable .)
    DOTMUL          reduce using rule 54 (expression -> assignable .)
    DOTDIV          reduce using rule 54 (expression -> assignable .)
    ;               reduce using rule 54 (expression -> assignable .)


state 25

    (48) expression -> MIN . expression
    (40) expression -> . expression ADD expression
    (41) expression -> . expression MIN expression
    (42) expression -> . expression MUL expression
    (43) expression -> . expression DIV expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTMIN expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . MIN expression
    (49) expression -> . matrix_obj TRANSPOSE
    (50) expression -> . variable TRANSPOSE
    (51) expression -> . STR
    (52) expression -> . matrix_obj
    (53) expression -> . vector
    (54) expression -> . assignable
    (55) expression -> . number
    (56) matrix_obj -> . matrix
    (57) matrix_obj -> . matrix_function
    (71) variable -> . ID
    (62) vector -> . [ parameters ]
    (32) assignable -> . variable
    (33) assignable -> . reference
    (69) number -> . INT
    (70) number -> . FLOAT
    (58) matrix -> . [ rows ; ]
    (63) matrix_function -> . EYE ( parameters )
    (64) matrix_function -> . ZEROS ( parameters )
    (65) matrix_function -> . ONES ( parameters )
    (68) reference -> . variable [ parameters ]

    MIN             shift and go to state 25
    STR             shift and go to state 27
    ID              shift and go to state 33
    [               shift and go to state 34
    INT             shift and go to state 35
    FLOAT           shift and go to state 36
    EYE             shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39

    expression                     shift and go to state 70
    matrix_obj                     shift and go to state 26
    variable                       shift and go to state 16
    vector                         shift and go to state 28
    assignable                     shift and go to state 62
    number                         shift and go to state 29
    matrix                         shift and go to state 31
    matrix_function                shift and go to state 32
    reference                      shift and go to state 30

state 26

    (49) expression -> matrix_obj . TRANSPOSE
    (52) expression -> matrix_obj .

    TRANSPOSE       shift and go to state 71
    ADD             reduce using rule 52 (expression -> matrix_obj .)
    MIN             reduce using rule 52 (expression -> matrix_obj .)
    MUL             reduce using rule 52 (expression -> matrix_obj .)
    DIV             reduce using rule 52 (expression -> matrix_obj .)
    DOTADD          reduce using rule 52 (expression -> matrix_obj .)
    DOTMIN          reduce using rule 52 (expression -> matrix_obj .)
    DOTMUL          reduce using rule 52 (expression -> matrix_obj .)
    DOTDIV          reduce using rule 52 (expression -> matrix_obj .)
    ;               reduce using rule 52 (expression -> matrix_obj .)
    LT              reduce using rule 52 (expression -> matrix_obj .)
    GT              reduce using rule 52 (expression -> matrix_obj .)
    LTE             reduce using rule 52 (expression -> matrix_obj .)
    GTE             reduce using rule 52 (expression -> matrix_obj .)
    NE              reduce using rule 52 (expression -> matrix_obj .)
    EQ              reduce using rule 52 (expression -> matrix_obj .)
    ,               reduce using rule 52 (expression -> matrix_obj .)
    ]               reduce using rule 52 (expression -> matrix_obj .)
    )               reduce using rule 52 (expression -> matrix_obj .)
    :               reduce using rule 52 (expression -> matrix_obj .)
    {               reduce using rule 52 (expression -> matrix_obj .)
    IF              reduce using rule 52 (expression -> matrix_obj .)
    FOR             reduce using rule 52 (expression -> matrix_obj .)
    WHILE           reduce using rule 52 (expression -> matrix_obj .)
    BREAK           reduce using rule 52 (expression -> matrix_obj .)
    CONTINUE        reduce using rule 52 (expression -> matrix_obj .)
    RETURN          reduce using rule 52 (expression -> matrix_obj .)
    PRINT           reduce using rule 52 (expression -> matrix_obj .)
    STR             reduce using rule 52 (expression -> matrix_obj .)
    ID              reduce using rule 52 (expression -> matrix_obj .)
    [               reduce using rule 52 (expression -> matrix_obj .)
    INT             reduce using rule 52 (expression -> matrix_obj .)
    FLOAT           reduce using rule 52 (expression -> matrix_obj .)
    EYE             reduce using rule 52 (expression -> matrix_obj .)
    ZEROS           reduce using rule 52 (expression -> matrix_obj .)
    ONES            reduce using rule 52 (expression -> matrix_obj .)


state 27

    (51) expression -> STR .

    ADD             reduce using rule 51 (expression -> STR .)
    MIN             reduce using rule 51 (expression -> STR .)
    MUL             reduce using rule 51 (expression -> STR .)
    DIV             reduce using rule 51 (expression -> STR .)
    DOTADD          reduce using rule 51 (expression -> STR .)
    DOTMIN          reduce using rule 51 (expression -> STR .)
    DOTMUL          reduce using rule 51 (expression -> STR .)
    DOTDIV          reduce using rule 51 (expression -> STR .)
    ;               reduce using rule 51 (expression -> STR .)
    LT              reduce using rule 51 (expression -> STR .)
    GT              reduce using rule 51 (expression -> STR .)
    LTE             reduce using rule 51 (expression -> STR .)
    GTE             reduce using rule 51 (expression -> STR .)
    NE              reduce using rule 51 (expression -> STR .)
    EQ              reduce using rule 51 (expression -> STR .)
    ,               reduce using rule 51 (expression -> STR .)
    ]               reduce using rule 51 (expression -> STR .)
    )               reduce using rule 51 (expression -> STR .)
    :               reduce using rule 51 (expression -> STR .)
    {               reduce using rule 51 (expression -> STR .)
    IF              reduce using rule 51 (expression -> STR .)
    FOR             reduce using rule 51 (expression -> STR .)
    WHILE           reduce using rule 51 (expression -> STR .)
    BREAK           reduce using rule 51 (expression -> STR .)
    CONTINUE        reduce using rule 51 (expression -> STR .)
    RETURN          reduce using rule 51 (expression -> STR .)
    PRINT           reduce using rule 51 (expression -> STR .)
    STR             reduce using rule 51 (expression -> STR .)
    ID              reduce using rule 51 (expression -> STR .)
    [               reduce using rule 51 (expression -> STR .)
    INT             reduce using rule 51 (expression -> STR .)
    FLOAT           reduce using rule 51 (expression -> STR .)
    EYE             reduce using rule 51 (expression -> STR .)
    ZEROS           reduce using rule 51 (expression -> STR .)
    ONES            reduce using rule 51 (expression -> STR .)


state 28

    (53) expression -> vector .

    ADD             reduce using rule 53 (expression -> vector .)
    MIN             reduce using rule 53 (expression -> vector .)
    MUL             reduce using rule 53 (expression -> vector .)
    DIV             reduce using rule 53 (expression -> vector .)
    DOTADD          reduce using rule 53 (expression -> vector .)
    DOTMIN          reduce using rule 53 (expression -> vector .)
    DOTMUL          reduce using rule 53 (expression -> vector .)
    DOTDIV          reduce using rule 53 (expression -> vector .)
    ;               reduce using rule 53 (expression -> vector .)
    LT              reduce using rule 53 (expression -> vector .)
    GT              reduce using rule 53 (expression -> vector .)
    LTE             reduce using rule 53 (expression -> vector .)
    GTE             reduce using rule 53 (expression -> vector .)
    NE              reduce using rule 53 (expression -> vector .)
    EQ              reduce using rule 53 (expression -> vector .)
    ,               reduce using rule 53 (expression -> vector .)
    ]               reduce using rule 53 (expression -> vector .)
    )               reduce using rule 53 (expression -> vector .)
    :               reduce using rule 53 (expression -> vector .)
    {               reduce using rule 53 (expression -> vector .)
    IF              reduce using rule 53 (expression -> vector .)
    FOR             reduce using rule 53 (expression -> vector .)
    WHILE           reduce using rule 53 (expression -> vector .)
    BREAK           reduce using rule 53 (expression -> vector .)
    CONTINUE        reduce using rule 53 (expression -> vector .)
    RETURN          reduce using rule 53 (expression -> vector .)
    PRINT           reduce using rule 53 (expression -> vector .)
    STR             reduce using rule 53 (expression -> vector .)
    ID              reduce using rule 53 (expression -> vector .)
    [               reduce using rule 53 (expression -> vector .)
    INT             reduce using rule 53 (expression -> vector .)
    FLOAT           reduce using rule 53 (expression -> vector .)
    EYE             reduce using rule 53 (expression -> vector .)
    ZEROS           reduce using rule 53 (expression -> vector .)
    ONES            reduce using rule 53 (expression -> vector .)


state 29

    (55) expression -> number .

    ADD             reduce using rule 55 (expression -> number .)
    MIN             reduce using rule 55 (expression -> number .)
    MUL             reduce using rule 55 (expression -> number .)
    DIV             reduce using rule 55 (expression -> number .)
    DOTADD          reduce using rule 55 (expression -> number .)
    DOTMIN          reduce using rule 55 (expression -> number .)
    DOTMUL          reduce using rule 55 (expression -> number .)
    DOTDIV          reduce using rule 55 (expression -> number .)
    ;               reduce using rule 55 (expression -> number .)
    LT              reduce using rule 55 (expression -> number .)
    GT              reduce using rule 55 (expression -> number .)
    LTE             reduce using rule 55 (expression -> number .)
    GTE             reduce using rule 55 (expression -> number .)
    NE              reduce using rule 55 (expression -> number .)
    EQ              reduce using rule 55 (expression -> number .)
    ,               reduce using rule 55 (expression -> number .)
    ]               reduce using rule 55 (expression -> number .)
    )               reduce using rule 55 (expression -> number .)
    :               reduce using rule 55 (expression -> number .)
    {               reduce using rule 55 (expression -> number .)
    IF              reduce using rule 55 (expression -> number .)
    FOR             reduce using rule 55 (expression -> number .)
    WHILE           reduce using rule 55 (expression -> number .)
    BREAK           reduce using rule 55 (expression -> number .)
    CONTINUE        reduce using rule 55 (expression -> number .)
    RETURN          reduce using rule 55 (expression -> number .)
    PRINT           reduce using rule 55 (expression -> number .)
    STR             reduce using rule 55 (expression -> number .)
    ID              reduce using rule 55 (expression -> number .)
    [               reduce using rule 55 (expression -> number .)
    INT             reduce using rule 55 (expression -> number .)
    FLOAT           reduce using rule 55 (expression -> number .)
    EYE             reduce using rule 55 (expression -> number .)
    ZEROS           reduce using rule 55 (expression -> number .)
    ONES            reduce using rule 55 (expression -> number .)


state 30

    (33) assignable -> reference .

    ASSIGN          reduce using rule 33 (assignable -> reference .)
    ADDASSIGN       reduce using rule 33 (assignable -> reference .)
    MINASSIGN       reduce using rule 33 (assignable -> reference .)
    MULASSIGN       reduce using rule 33 (assignable -> reference .)
    DIVASSIGN       reduce using rule 33 (assignable -> reference .)
    ADD             reduce using rule 33 (assignable -> reference .)
    MIN             reduce using rule 33 (assignable -> reference .)
    MUL             reduce using rule 33 (assignable -> reference .)
    DIV             reduce using rule 33 (assignable -> reference .)
    DOTADD          reduce using rule 33 (assignable -> reference .)
    DOTMIN          reduce using rule 33 (assignable -> reference .)
    DOTMUL          reduce using rule 33 (assignable -> reference .)
    DOTDIV          reduce using rule 33 (assignable -> reference .)
    ;               reduce using rule 33 (assignable -> reference .)
    LT              reduce using rule 33 (assignable -> reference .)
    GT              reduce using rule 33 (assignable -> reference .)
    LTE             reduce using rule 33 (assignable -> reference .)
    GTE             reduce using rule 33 (assignable -> reference .)
    NE              reduce using rule 33 (assignable -> reference .)
    EQ              reduce using rule 33 (assignable -> reference .)
    ,               reduce using rule 33 (assignable -> reference .)
    ]               reduce using rule 33 (assignable -> reference .)
    )               reduce using rule 33 (assignable -> reference .)
    :               reduce using rule 33 (assignable -> reference .)
    {               reduce using rule 33 (assignable -> reference .)
    IF              reduce using rule 33 (assignable -> reference .)
    FOR             reduce using rule 33 (assignable -> reference .)
    WHILE           reduce using rule 33 (assignable -> reference .)
    BREAK           reduce using rule 33 (assignable -> reference .)
    CONTINUE        reduce using rule 33 (assignable -> reference .)
    RETURN          reduce using rule 33 (assignable -> reference .)
    PRINT           reduce using rule 33 (assignable -> reference .)
    STR             reduce using rule 33 (assignable -> reference .)
    ID              reduce using rule 33 (assignable -> reference .)
    [               reduce using rule 33 (assignable -> reference .)
    INT             reduce using rule 33 (assignable -> reference .)
    FLOAT           reduce using rule 33 (assignable -> reference .)
    EYE             reduce using rule 33 (assignable -> reference .)
    ZEROS           reduce using rule 33 (assignable -> reference .)
    ONES            reduce using rule 33 (assignable -> reference .)


state 31

    (56) matrix_obj -> matrix .

    TRANSPOSE       reduce using rule 56 (matrix_obj -> matrix .)
    ADD             reduce using rule 56 (matrix_obj -> matrix .)
    MIN             reduce using rule 56 (matrix_obj -> matrix .)
    MUL             reduce using rule 56 (matrix_obj -> matrix .)
    DIV             reduce using rule 56 (matrix_obj -> matrix .)
    DOTADD          reduce using rule 56 (matrix_obj -> matrix .)
    DOTMIN          reduce using rule 56 (matrix_obj -> matrix .)
    DOTMUL          reduce using rule 56 (matrix_obj -> matrix .)
    DOTDIV          reduce using rule 56 (matrix_obj -> matrix .)
    ;               reduce using rule 56 (matrix_obj -> matrix .)
    LT              reduce using rule 56 (matrix_obj -> matrix .)
    GT              reduce using rule 56 (matrix_obj -> matrix .)
    LTE             reduce using rule 56 (matrix_obj -> matrix .)
    GTE             reduce using rule 56 (matrix_obj -> matrix .)
    NE              reduce using rule 56 (matrix_obj -> matrix .)
    EQ              reduce using rule 56 (matrix_obj -> matrix .)
    ,               reduce using rule 56 (matrix_obj -> matrix .)
    ]               reduce using rule 56 (matrix_obj -> matrix .)
    )               reduce using rule 56 (matrix_obj -> matrix .)
    :               reduce using rule 56 (matrix_obj -> matrix .)
    {               reduce using rule 56 (matrix_obj -> matrix .)
    IF              reduce using rule 56 (matrix_obj -> matrix .)
    FOR             reduce using rule 56 (matrix_obj -> matrix .)
    WHILE           reduce using rule 56 (matrix_obj -> matrix .)
    BREAK           reduce using rule 56 (matrix_obj -> matrix .)
    CONTINUE        reduce using rule 56 (matrix_obj -> matrix .)
    RETURN          reduce using rule 56 (matrix_obj -> matrix .)
    PRINT           reduce using rule 56 (matrix_obj -> matrix .)
    STR             reduce using rule 56 (matrix_obj -> matrix .)
    ID              reduce using rule 56 (matrix_obj -> matrix .)
    [               reduce using rule 56 (matrix_obj -> matrix .)
    INT             reduce using rule 56 (matrix_obj -> matrix .)
    FLOAT           reduce using rule 56 (matrix_obj -> matrix .)
    EYE             reduce using rule 56 (matrix_obj -> matrix .)
    ZEROS           reduce using rule 56 (matrix_obj -> matrix .)
    ONES            reduce using rule 56 (matrix_obj -> matrix .)


state 32

    (57) matrix_obj -> matrix_function .

    TRANSPOSE       reduce using rule 57 (matrix_obj -> matrix_function .)
    ADD             reduce using rule 57 (matrix_obj -> matrix_function .)
    MIN             reduce using rule 57 (matrix_obj -> matrix_function .)
    MUL             reduce using rule 57 (matrix_obj -> matrix_function .)
    DIV             reduce using rule 57 (matrix_obj -> matrix_function .)
    DOTADD          reduce using rule 57 (matrix_obj -> matrix_function .)
    DOTMIN          reduce using rule 57 (matrix_obj -> matrix_function .)
    DOTMUL          reduce using rule 57 (matrix_obj -> matrix_function .)
    DOTDIV          reduce using rule 57 (matrix_obj -> matrix_function .)
    ;               reduce using rule 57 (matrix_obj -> matrix_function .)
    LT              reduce using rule 57 (matrix_obj -> matrix_function .)
    GT              reduce using rule 57 (matrix_obj -> matrix_function .)
    LTE             reduce using rule 57 (matrix_obj -> matrix_function .)
    GTE             reduce using rule 57 (matrix_obj -> matrix_function .)
    NE              reduce using rule 57 (matrix_obj -> matrix_function .)
    EQ              reduce using rule 57 (matrix_obj -> matrix_function .)
    ,               reduce using rule 57 (matrix_obj -> matrix_function .)
    ]               reduce using rule 57 (matrix_obj -> matrix_function .)
    )               reduce using rule 57 (matrix_obj -> matrix_function .)
    :               reduce using rule 57 (matrix_obj -> matrix_function .)
    {               reduce using rule 57 (matrix_obj -> matrix_function .)
    IF              reduce using rule 57 (matrix_obj -> matrix_function .)
    FOR             reduce using rule 57 (matrix_obj -> matrix_function .)
    WHILE           reduce using rule 57 (matrix_obj -> matrix_function .)
    BREAK           reduce using rule 57 (matrix_obj -> matrix_function .)
    CONTINUE        reduce using rule 57 (matrix_obj -> matrix_function .)
    RETURN          reduce using rule 57 (matrix_obj -> matrix_function .)
    PRINT           reduce using rule 57 (matrix_obj -> matrix_function .)
    STR             reduce using rule 57 (matrix_obj -> matrix_function .)
    ID              reduce using rule 57 (matrix_obj -> matrix_function .)
    [               reduce using rule 57 (matrix_obj -> matrix_function .)
    INT             reduce using rule 57 (matrix_obj -> matrix_function .)
    FLOAT           reduce using rule 57 (matrix_obj -> matrix_function .)
    EYE             reduce using rule 57 (matrix_obj -> matrix_function .)
    ZEROS           reduce using rule 57 (matrix_obj -> matrix_function .)
    ONES            reduce using rule 57 (matrix_obj -> matrix_function .)


state 33

    (71) variable -> ID .

    TRANSPOSE       reduce using rule 71 (variable -> ID .)
    [               reduce using rule 71 (variable -> ID .)
    ASSIGN          reduce using rule 71 (variable -> ID .)
    ADDASSIGN       reduce using rule 71 (variable -> ID .)
    MINASSIGN       reduce using rule 71 (variable -> ID .)
    MULASSIGN       reduce using rule 71 (variable -> ID .)
    DIVASSIGN       reduce using rule 71 (variable -> ID .)
    ADD             reduce using rule 71 (variable -> ID .)
    MIN             reduce using rule 71 (variable -> ID .)
    MUL             reduce using rule 71 (variable -> ID .)
    DIV             reduce using rule 71 (variable -> ID .)
    DOTADD          reduce using rule 71 (variable -> ID .)
    DOTMIN          reduce using rule 71 (variable -> ID .)
    DOTMUL          reduce using rule 71 (variable -> ID .)
    DOTDIV          reduce using rule 71 (variable -> ID .)
    ;               reduce using rule 71 (variable -> ID .)
    LT              reduce using rule 71 (variable -> ID .)
    GT              reduce using rule 71 (variable -> ID .)
    LTE             reduce using rule 71 (variable -> ID .)
    GTE             reduce using rule 71 (variable -> ID .)
    NE              reduce using rule 71 (variable -> ID .)
    EQ              reduce using rule 71 (variable -> ID .)
    ,               reduce using rule 71 (variable -> ID .)
    ]               reduce using rule 71 (variable -> ID .)
    )               reduce using rule 71 (variable -> ID .)
    :               reduce using rule 71 (variable -> ID .)
    {               reduce using rule 71 (variable -> ID .)
    IF              reduce using rule 71 (variable -> ID .)
    FOR             reduce using rule 71 (variable -> ID .)
    WHILE           reduce using rule 71 (variable -> ID .)
    BREAK           reduce using rule 71 (variable -> ID .)
    CONTINUE        reduce using rule 71 (variable -> ID .)
    RETURN          reduce using rule 71 (variable -> ID .)
    PRINT           reduce using rule 71 (variable -> ID .)
    STR             reduce using rule 71 (variable -> ID .)
    ID              reduce using rule 71 (variable -> ID .)
    INT             reduce using rule 71 (variable -> ID .)
    FLOAT           reduce using rule 71 (variable -> ID .)
    EYE             reduce using rule 71 (variable -> ID .)
    ZEROS           reduce using rule 71 (variable -> ID .)
    ONES            reduce using rule 71 (variable -> ID .)


state 34

    (62) vector -> [ . parameters ]
    (58) matrix -> [ . rows ; ]
    (66) parameters -> . parameters , expression
    (67) parameters -> . expression
    (59) rows -> . rows ; row
    (60) rows -> . row
    (40) expression -> . expression ADD expression
    (41) expression -> . expression MIN expression
    (42) expression -> . expression MUL expression
    (43) expression -> . expression DIV expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTMIN expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . MIN expression
    (49) expression -> . matrix_obj TRANSPOSE
    (50) expression -> . variable TRANSPOSE
    (51) expression -> . STR
    (52) expression -> . matrix_obj
    (53) expression -> . vector
    (54) expression -> . assignable
    (55) expression -> . number
    (61) row -> . parameters
    (56) matrix_obj -> . matrix
    (57) matrix_obj -> . matrix_function
    (71) variable -> . ID
    (62) vector -> . [ parameters ]
    (32) assignable -> . variable
    (33) assignable -> . reference
    (69) number -> . INT
    (70) number -> . FLOAT
    (58) matrix -> . [ rows ; ]
    (63) matrix_function -> . EYE ( parameters )
    (64) matrix_function -> . ZEROS ( parameters )
    (65) matrix_function -> . ONES ( parameters )
    (68) reference -> . variable [ parameters ]

    MIN             shift and go to state 25
    STR             shift and go to state 27
    ID              shift and go to state 33
    [               shift and go to state 34
    INT             shift and go to state 35
    FLOAT           shift and go to state 36
    EYE             shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39

    parameters                     shift and go to state 72
    rows                           shift and go to state 73
    expression                     shift and go to state 64
    row                            shift and go to state 74
    matrix_obj                     shift and go to state 26
    variable                       shift and go to state 16
    vector                         shift and go to state 28
    assignable                     shift and go to state 62
    number                         shift and go to state 29
    matrix                         shift and go to state 31
    matrix_function                shift and go to state 32
    reference                      shift and go to state 30

state 35

    (69) number -> INT .

    ADD             reduce using rule 69 (number -> INT .)
    MIN             reduce using rule 69 (number -> INT .)
    MUL             reduce using rule 69 (number -> INT .)
    DIV             reduce using rule 69 (number -> INT .)
    DOTADD          reduce using rule 69 (number -> INT .)
    DOTMIN          reduce using rule 69 (number -> INT .)
    DOTMUL          reduce using rule 69 (number -> INT .)
    DOTDIV          reduce using rule 69 (number -> INT .)
    ;               reduce using rule 69 (number -> INT .)
    LT              reduce using rule 69 (number -> INT .)
    GT              reduce using rule 69 (number -> INT .)
    LTE             reduce using rule 69 (number -> INT .)
    GTE             reduce using rule 69 (number -> INT .)
    NE              reduce using rule 69 (number -> INT .)
    EQ              reduce using rule 69 (number -> INT .)
    ,               reduce using rule 69 (number -> INT .)
    ]               reduce using rule 69 (number -> INT .)
    )               reduce using rule 69 (number -> INT .)
    :               reduce using rule 69 (number -> INT .)
    {               reduce using rule 69 (number -> INT .)
    IF              reduce using rule 69 (number -> INT .)
    FOR             reduce using rule 69 (number -> INT .)
    WHILE           reduce using rule 69 (number -> INT .)
    BREAK           reduce using rule 69 (number -> INT .)
    CONTINUE        reduce using rule 69 (number -> INT .)
    RETURN          reduce using rule 69 (number -> INT .)
    PRINT           reduce using rule 69 (number -> INT .)
    STR             reduce using rule 69 (number -> INT .)
    ID              reduce using rule 69 (number -> INT .)
    [               reduce using rule 69 (number -> INT .)
    INT             reduce using rule 69 (number -> INT .)
    FLOAT           reduce using rule 69 (number -> INT .)
    EYE             reduce using rule 69 (number -> INT .)
    ZEROS           reduce using rule 69 (number -> INT .)
    ONES            reduce using rule 69 (number -> INT .)


state 36

    (70) number -> FLOAT .

    ADD             reduce using rule 70 (number -> FLOAT .)
    MIN             reduce using rule 70 (number -> FLOAT .)
    MUL             reduce using rule 70 (number -> FLOAT .)
    DIV             reduce using rule 70 (number -> FLOAT .)
    DOTADD          reduce using rule 70 (number -> FLOAT .)
    DOTMIN          reduce using rule 70 (number -> FLOAT .)
    DOTMUL          reduce using rule 70 (number -> FLOAT .)
    DOTDIV          reduce using rule 70 (number -> FLOAT .)
    ;               reduce using rule 70 (number -> FLOAT .)
    LT              reduce using rule 70 (number -> FLOAT .)
    GT              reduce using rule 70 (number -> FLOAT .)
    LTE             reduce using rule 70 (number -> FLOAT .)
    GTE             reduce using rule 70 (number -> FLOAT .)
    NE              reduce using rule 70 (number -> FLOAT .)
    EQ              reduce using rule 70 (number -> FLOAT .)
    ,               reduce using rule 70 (number -> FLOAT .)
    ]               reduce using rule 70 (number -> FLOAT .)
    )               reduce using rule 70 (number -> FLOAT .)
    :               reduce using rule 70 (number -> FLOAT .)
    {               reduce using rule 70 (number -> FLOAT .)
    IF              reduce using rule 70 (number -> FLOAT .)
    FOR             reduce using rule 70 (number -> FLOAT .)
    WHILE           reduce using rule 70 (number -> FLOAT .)
    BREAK           reduce using rule 70 (number -> FLOAT .)
    CONTINUE        reduce using rule 70 (number -> FLOAT .)
    RETURN          reduce using rule 70 (number -> FLOAT .)
    PRINT           reduce using rule 70 (number -> FLOAT .)
    STR             reduce using rule 70 (number -> FLOAT .)
    ID              reduce using rule 70 (number -> FLOAT .)
    [               reduce using rule 70 (number -> FLOAT .)
    INT             reduce using rule 70 (number -> FLOAT .)
    FLOAT           reduce using rule 70 (number -> FLOAT .)
    EYE             reduce using rule 70 (number -> FLOAT .)
    ZEROS           reduce using rule 70 (number -> FLOAT .)
    ONES            reduce using rule 70 (number -> FLOAT .)


state 37

    (63) matrix_function -> EYE . ( parameters )

    (               shift and go to state 75


state 38

    (64) matrix_function -> ZEROS . ( parameters )

    (               shift and go to state 76


state 39

    (65) matrix_function -> ONES . ( parameters )

    (               shift and go to state 77


state 40

    (3) instructions -> instructions instruction .

    {               reduce using rule 3 (instructions -> instructions instruction .)
    IF              reduce using rule 3 (instructions -> instructions instruction .)
    FOR             reduce using rule 3 (instructions -> instructions instruction .)
    WHILE           reduce using rule 3 (instructions -> instructions instruction .)
    BREAK           reduce using rule 3 (instructions -> instructions instruction .)
    CONTINUE        reduce using rule 3 (instructions -> instructions instruction .)
    RETURN          reduce using rule 3 (instructions -> instructions instruction .)
    PRINT           reduce using rule 3 (instructions -> instructions instruction .)
    MIN             reduce using rule 3 (instructions -> instructions instruction .)
    STR             reduce using rule 3 (instructions -> instructions instruction .)
    ID              reduce using rule 3 (instructions -> instructions instruction .)
    [               reduce using rule 3 (instructions -> instructions instruction .)
    INT             reduce using rule 3 (instructions -> instructions instruction .)
    FLOAT           reduce using rule 3 (instructions -> instructions instruction .)
    EYE             reduce using rule 3 (instructions -> instructions instruction .)
    ZEROS           reduce using rule 3 (instructions -> instructions instruction .)
    ONES            reduce using rule 3 (instructions -> instructions instruction .)
    $end            reduce using rule 3 (instructions -> instructions instruction .)
    }               reduce using rule 3 (instructions -> instructions instruction .)


state 41

    (9) instruction -> break ; .

    {               reduce using rule 9 (instruction -> break ; .)
    IF              reduce using rule 9 (instruction -> break ; .)
    FOR             reduce using rule 9 (instruction -> break ; .)
    WHILE           reduce using rule 9 (instruction -> break ; .)
    BREAK           reduce using rule 9 (instruction -> break ; .)
    CONTINUE        reduce using rule 9 (instruction -> break ; .)
    RETURN          reduce using rule 9 (instruction -> break ; .)
    PRINT           reduce using rule 9 (instruction -> break ; .)
    MIN             reduce using rule 9 (instruction -> break ; .)
    STR             reduce using rule 9 (instruction -> break ; .)
    ID              reduce using rule 9 (instruction -> break ; .)
    [               reduce using rule 9 (instruction -> break ; .)
    INT             reduce using rule 9 (instruction -> break ; .)
    FLOAT           reduce using rule 9 (instruction -> break ; .)
    EYE             reduce using rule 9 (instruction -> break ; .)
    ZEROS           reduce using rule 9 (instruction -> break ; .)
    ONES            reduce using rule 9 (instruction -> break ; .)
    $end            reduce using rule 9 (instruction -> break ; .)
    }               reduce using rule 9 (instruction -> break ; .)
    ELSE            reduce using rule 9 (instruction -> break ; .)


state 42

    (10) instruction -> continue ; .

    {               reduce using rule 10 (instruction -> continue ; .)
    IF              reduce using rule 10 (instruction -> continue ; .)
    FOR             reduce using rule 10 (instruction -> continue ; .)
    WHILE           reduce using rule 10 (instruction -> continue ; .)
    BREAK           reduce using rule 10 (instruction -> continue ; .)
    CONTINUE        reduce using rule 10 (instruction -> continue ; .)
    RETURN          reduce using rule 10 (instruction -> continue ; .)
    PRINT           reduce using rule 10 (instruction -> continue ; .)
    MIN             reduce using rule 10 (instruction -> continue ; .)
    STR             reduce using rule 10 (instruction -> continue ; .)
    ID              reduce using rule 10 (instruction -> continue ; .)
    [               reduce using rule 10 (instruction -> continue ; .)
    INT             reduce using rule 10 (instruction -> continue ; .)
    FLOAT           reduce using rule 10 (instruction -> continue ; .)
    EYE             reduce using rule 10 (instruction -> continue ; .)
    ZEROS           reduce using rule 10 (instruction -> continue ; .)
    ONES            reduce using rule 10 (instruction -> continue ; .)
    $end            reduce using rule 10 (instruction -> continue ; .)
    }               reduce using rule 10 (instruction -> continue ; .)
    ELSE            reduce using rule 10 (instruction -> continue ; .)


state 43

    (11) instruction -> return ; .

    {               reduce using rule 11 (instruction -> return ; .)
    IF              reduce using rule 11 (instruction -> return ; .)
    FOR             reduce using rule 11 (instruction -> return ; .)
    WHILE           reduce using rule 11 (instruction -> return ; .)
    BREAK           reduce using rule 11 (instruction -> return ; .)
    CONTINUE        reduce using rule 11 (instruction -> return ; .)
    RETURN          reduce using rule 11 (instruction -> return ; .)
    PRINT           reduce using rule 11 (instruction -> return ; .)
    MIN             reduce using rule 11 (instruction -> return ; .)
    STR             reduce using rule 11 (instruction -> return ; .)
    ID              reduce using rule 11 (instruction -> return ; .)
    [               reduce using rule 11 (instruction -> return ; .)
    INT             reduce using rule 11 (instruction -> return ; .)
    FLOAT           reduce using rule 11 (instruction -> return ; .)
    EYE             reduce using rule 11 (instruction -> return ; .)
    ZEROS           reduce using rule 11 (instruction -> return ; .)
    ONES            reduce using rule 11 (instruction -> return ; .)
    $end            reduce using rule 11 (instruction -> return ; .)
    }               reduce using rule 11 (instruction -> return ; .)
    ELSE            reduce using rule 11 (instruction -> return ; .)


state 44

    (12) instruction -> print ; .

    {               reduce using rule 12 (instruction -> print ; .)
    IF              reduce using rule 12 (instruction -> print ; .)
    FOR             reduce using rule 12 (instruction -> print ; .)
    WHILE           reduce using rule 12 (instruction -> print ; .)
    BREAK           reduce using rule 12 (instruction -> print ; .)
    CONTINUE        reduce using rule 12 (instruction -> print ; .)
    RETURN          reduce using rule 12 (instruction -> print ; .)
    PRINT           reduce using rule 12 (instruction -> print ; .)
    MIN             reduce using rule 12 (instruction -> print ; .)
    STR             reduce using rule 12 (instruction -> print ; .)
    ID              reduce using rule 12 (instruction -> print ; .)
    [               reduce using rule 12 (instruction -> print ; .)
    INT             reduce using rule 12 (instruction -> print ; .)
    FLOAT           reduce using rule 12 (instruction -> print ; .)
    EYE             reduce using rule 12 (instruction -> print ; .)
    ZEROS           reduce using rule 12 (instruction -> print ; .)
    ONES            reduce using rule 12 (instruction -> print ; .)
    $end            reduce using rule 12 (instruction -> print ; .)
    }               reduce using rule 12 (instruction -> print ; .)
    ELSE            reduce using rule 12 (instruction -> print ; .)


state 45

    (13) instruction -> statement ; .

    {               reduce using rule 13 (instruction -> statement ; .)
    IF              reduce using rule 13 (instruction -> statement ; .)
    FOR             reduce using rule 13 (instruction -> statement ; .)
    WHILE           reduce using rule 13 (instruction -> statement ; .)
    BREAK           reduce using rule 13 (instruction -> statement ; .)
    CONTINUE        reduce using rule 13 (instruction -> statement ; .)
    RETURN          reduce using rule 13 (instruction -> statement ; .)
    PRINT           reduce using rule 13 (instruction -> statement ; .)
    MIN             reduce using rule 13 (instruction -> statement ; .)
    STR             reduce using rule 13 (instruction -> statement ; .)
    ID              reduce using rule 13 (instruction -> statement ; .)
    [               reduce using rule 13 (instruction -> statement ; .)
    INT             reduce using rule 13 (instruction -> statement ; .)
    FLOAT           reduce using rule 13 (instruction -> statement ; .)
    EYE             reduce using rule 13 (instruction -> statement ; .)
    ZEROS           reduce using rule 13 (instruction -> statement ; .)
    ONES            reduce using rule 13 (instruction -> statement ; .)
    $end            reduce using rule 13 (instruction -> statement ; .)
    }               reduce using rule 13 (instruction -> statement ; .)
    ELSE            reduce using rule 13 (instruction -> statement ; .)


state 46

    (14) block -> { instructions . }
    (3) instructions -> instructions . instruction
    (5) instruction -> . block
    (6) instruction -> . if
    (7) instruction -> . for
    (8) instruction -> . while
    (9) instruction -> . break ;
    (10) instruction -> . continue ;
    (11) instruction -> . return ;
    (12) instruction -> . print ;
    (13) instruction -> . statement ;
    (14) block -> . { instructions }
    (15) if -> . IF ( condition ) instruction
    (16) if -> . IF ( condition ) instruction ELSE instruction
    (17) for -> . FOR variable ASSIGN expression : expression instruction
    (18) while -> . WHILE ( condition ) instruction
    (19) break -> . BREAK
    (20) continue -> . CONTINUE
    (21) return -> . RETURN
    (22) return -> . RETURN expression
    (23) return -> . RETURN condition
    (24) print -> . PRINT parameters
    (25) statement -> . assign
    (26) statement -> . expression
    (27) assign -> . assignable ASSIGN expression
    (28) assign -> . assignable ADDASSIGN expression
    (29) assign -> . assignable MINASSIGN expression
    (30) assign -> . assignable MULASSIGN expression
    (31) assign -> . assignable DIVASSIGN expression
    (40) expression -> . expression ADD expression
    (41) expression -> . expression MIN expression
    (42) expression -> . expression MUL expression
    (43) expression -> . expression DIV expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTMIN expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . MIN expression
    (49) expression -> . matrix_obj TRANSPOSE
    (50) expression -> . variable TRANSPOSE
    (51) expression -> . STR
    (52) expression -> . matrix_obj
    (53) expression -> . vector
    (54) expression -> . assignable
    (55) expression -> . number
    (32) assignable -> . variable
    (33) assignable -> . reference
    (56) matrix_obj -> . matrix
    (57) matrix_obj -> . matrix_function
    (71) variable -> . ID
    (62) vector -> . [ parameters ]
    (69) number -> . INT
    (70) number -> . FLOAT
    (68) reference -> . variable [ parameters ]
    (58) matrix -> . [ rows ; ]
    (63) matrix_function -> . EYE ( parameters )
    (64) matrix_function -> . ZEROS ( parameters )
    (65) matrix_function -> . ONES ( parameters )

    }               shift and go to state 78
    {               shift and go to state 13
    IF              shift and go to state 14
    FOR             shift and go to state 15
    WHILE           shift and go to state 18
    BREAK           shift and go to state 19
    CONTINUE        shift and go to state 20
    RETURN          shift and go to state 21
    PRINT           shift and go to state 22
    MIN             shift and go to state 25
    STR             shift and go to state 27
    ID              shift and go to state 33
    [               shift and go to state 34
    INT             shift and go to state 35
    FLOAT           shift and go to state 36
    EYE             shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39

    instruction                    shift and go to state 40
    block                          shift and go to state 4
    if                             shift and go to state 5
    for                            shift and go to state 6
    while                          shift and go to state 7
    break                          shift and go to state 8
    continue                       shift and go to state 9
    return                         shift and go to state 10
    print                          shift and go to state 11
    statement                      shift and go to state 12
    variable                       shift and go to state 16
    expression                     shift and go to state 17
    assign                         shift and go to state 23
    assignable                     shift and go to state 24
    matrix_obj                     shift and go to state 26
    vector                         shift and go to state 28
    number                         shift and go to state 29
    reference                      shift and go to state 30
    matrix                         shift and go to state 31
    matrix_function                shift and go to state 32

state 47

    (15) if -> IF ( . condition ) instruction
    (16) if -> IF ( . condition ) instruction ELSE instruction
    (34) condition -> . expression LT expression
    (35) condition -> . expression GT expression
    (36) condition -> . expression LTE expression
    (37) condition -> . expression GTE expression
    (38) condition -> . expression NE expression
    (39) condition -> . expression EQ expression
    (40) expression -> . expression ADD expression
    (41) expression -> . expression MIN expression
    (42) expression -> . expression MUL expression
    (43) expression -> . expression DIV expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTMIN expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . MIN expression
    (49) expression -> . matrix_obj TRANSPOSE
    (50) expression -> . variable TRANSPOSE
    (51) expression -> . STR
    (52) expression -> . matrix_obj
    (53) expression -> . vector
    (54) expression -> . assignable
    (55) expression -> . number
    (56) matrix_obj -> . matrix
    (57) matrix_obj -> . matrix_function
    (71) variable -> . ID
    (62) vector -> . [ parameters ]
    (32) assignable -> . variable
    (33) assignable -> . reference
    (69) number -> . INT
    (70) number -> . FLOAT
    (58) matrix -> . [ rows ; ]
    (63) matrix_function -> . EYE ( parameters )
    (64) matrix_function -> . ZEROS ( parameters )
    (65) matrix_function -> . ONES ( parameters )
    (68) reference -> . variable [ parameters ]

    MIN             shift and go to state 25
    STR             shift and go to state 27
    ID              shift and go to state 33
    [               shift and go to state 34
    INT             shift and go to state 35
    FLOAT           shift and go to state 36
    EYE             shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39

    condition                      shift and go to state 79
    expression                     shift and go to state 80
    matrix_obj                     shift and go to state 26
    variable                       shift and go to state 16
    vector                         shift and go to state 28
    assignable                     shift and go to state 62
    number                         shift and go to state 29
    matrix                         shift and go to state 31
    matrix_function                shift and go to state 32
    reference                      shift and go to state 30

state 48

    (17) for -> FOR variable . ASSIGN expression : expression instruction

    ASSIGN          shift and go to state 81


state 49

    (50) expression -> variable TRANSPOSE .

    ADD             reduce using rule 50 (expression -> variable TRANSPOSE .)
    MIN             reduce using rule 50 (expression -> variable TRANSPOSE .)
    MUL             reduce using rule 50 (expression -> variable TRANSPOSE .)
    DIV             reduce using rule 50 (expression -> variable TRANSPOSE .)
    DOTADD          reduce using rule 50 (expression -> variable TRANSPOSE .)
    DOTMIN          reduce using rule 50 (expression -> variable TRANSPOSE .)
    DOTMUL          reduce using rule 50 (expression -> variable TRANSPOSE .)
    DOTDIV          reduce using rule 50 (expression -> variable TRANSPOSE .)
    ;               reduce using rule 50 (expression -> variable TRANSPOSE .)
    LT              reduce using rule 50 (expression -> variable TRANSPOSE .)
    GT              reduce using rule 50 (expression -> variable TRANSPOSE .)
    LTE             reduce using rule 50 (expression -> variable TRANSPOSE .)
    GTE             reduce using rule 50 (expression -> variable TRANSPOSE .)
    NE              reduce using rule 50 (expression -> variable TRANSPOSE .)
    EQ              reduce using rule 50 (expression -> variable TRANSPOSE .)
    ,               reduce using rule 50 (expression -> variable TRANSPOSE .)
    ]               reduce using rule 50 (expression -> variable TRANSPOSE .)
    )               reduce using rule 50 (expression -> variable TRANSPOSE .)
    :               reduce using rule 50 (expression -> variable TRANSPOSE .)
    {               reduce using rule 50 (expression -> variable TRANSPOSE .)
    IF              reduce using rule 50 (expression -> variable TRANSPOSE .)
    FOR             reduce using rule 50 (expression -> variable TRANSPOSE .)
    WHILE           reduce using rule 50 (expression -> variable TRANSPOSE .)
    BREAK           reduce using rule 50 (expression -> variable TRANSPOSE .)
    CONTINUE        reduce using rule 50 (expression -> variable TRANSPOSE .)
    RETURN          reduce using rule 50 (expression -> variable TRANSPOSE .)
    PRINT           reduce using rule 50 (expression -> variable TRANSPOSE .)
    STR             reduce using rule 50 (expression -> variable TRANSPOSE .)
    ID              reduce using rule 50 (expression -> variable TRANSPOSE .)
    [               reduce using rule 50 (expression -> variable TRANSPOSE .)
    INT             reduce using rule 50 (expression -> variable TRANSPOSE .)
    FLOAT           reduce using rule 50 (expression -> variable TRANSPOSE .)
    EYE             reduce using rule 50 (expression -> variable TRANSPOSE .)
    ZEROS           reduce using rule 50 (expression -> variable TRANSPOSE .)
    ONES            reduce using rule 50 (expression -> variable TRANSPOSE .)


state 50

    (68) reference -> variable [ . parameters ]
    (66) parameters -> . parameters , expression
    (67) parameters -> . expression
    (40) expression -> . expression ADD expression
    (41) expression -> . expression MIN expression
    (42) expression -> . expression MUL expression
    (43) expression -> . expression DIV expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTMIN expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . MIN expression
    (49) expression -> . matrix_obj TRANSPOSE
    (50) expression -> . variable TRANSPOSE
    (51) expression -> . STR
    (52) expression -> . matrix_obj
    (53) expression -> . vector
    (54) expression -> . assignable
    (55) expression -> . number
    (56) matrix_obj -> . matrix
    (57) matrix_obj -> . matrix_function
    (71) variable -> . ID
    (62) vector -> . [ parameters ]
    (32) assignable -> . variable
    (33) assignable -> . reference
    (69) number -> . INT
    (70) number -> . FLOAT
    (58) matrix -> . [ rows ; ]
    (63) matrix_function -> . EYE ( parameters )
    (64) matrix_function -> . ZEROS ( parameters )
    (65) matrix_function -> . ONES ( parameters )
    (68) reference -> . variable [ parameters ]

    MIN             shift and go to state 25
    STR             shift and go to state 27
    ID              shift and go to state 33
    [               shift and go to state 34
    INT             shift and go to state 35
    FLOAT           shift and go to state 36
    EYE             shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39

    variable                       shift and go to state 16
    parameters                     shift and go to state 82
    expression                     shift and go to state 64
    matrix_obj                     shift and go to state 26
    vector                         shift and go to state 28
    assignable                     shift and go to state 62
    number                         shift and go to state 29
    matrix                         shift and go to state 31
    matrix_function                shift and go to state 32
    reference                      shift and go to state 30

state 51

    (40) expression -> expression ADD . expression
    (40) expression -> . expression ADD expression
    (41) expression -> . expression MIN expression
    (42) expression -> . expression MUL expression
    (43) expression -> . expression DIV expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTMIN expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . MIN expression
    (49) expression -> . matrix_obj TRANSPOSE
    (50) expression -> . variable TRANSPOSE
    (51) expression -> . STR
    (52) expression -> . matrix_obj
    (53) expression -> . vector
    (54) expression -> . assignable
    (55) expression -> . number
    (56) matrix_obj -> . matrix
    (57) matrix_obj -> . matrix_function
    (71) variable -> . ID
    (62) vector -> . [ parameters ]
    (32) assignable -> . variable
    (33) assignable -> . reference
    (69) number -> . INT
    (70) number -> . FLOAT
    (58) matrix -> . [ rows ; ]
    (63) matrix_function -> . EYE ( parameters )
    (64) matrix_function -> . ZEROS ( parameters )
    (65) matrix_function -> . ONES ( parameters )
    (68) reference -> . variable [ parameters ]

    MIN             shift and go to state 25
    STR             shift and go to state 27
    ID              shift and go to state 33
    [               shift and go to state 34
    INT             shift and go to state 35
    FLOAT           shift and go to state 36
    EYE             shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39

    expression                     shift and go to state 83
    matrix_obj                     shift and go to state 26
    variable                       shift and go to state 16
    vector                         shift and go to state 28
    assignable                     shift and go to state 62
    number                         shift and go to state 29
    matrix                         shift and go to state 31
    matrix_function                shift and go to state 32
    reference                      shift and go to state 30

state 52

    (41) expression -> expression MIN . expression
    (40) expression -> . expression ADD expression
    (41) expression -> . expression MIN expression
    (42) expression -> . expression MUL expression
    (43) expression -> . expression DIV expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTMIN expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . MIN expression
    (49) expression -> . matrix_obj TRANSPOSE
    (50) expression -> . variable TRANSPOSE
    (51) expression -> . STR
    (52) expression -> . matrix_obj
    (53) expression -> . vector
    (54) expression -> . assignable
    (55) expression -> . number
    (56) matrix_obj -> . matrix
    (57) matrix_obj -> . matrix_function
    (71) variable -> . ID
    (62) vector -> . [ parameters ]
    (32) assignable -> . variable
    (33) assignable -> . reference
    (69) number -> . INT
    (70) number -> . FLOAT
    (58) matrix -> . [ rows ; ]
    (63) matrix_function -> . EYE ( parameters )
    (64) matrix_function -> . ZEROS ( parameters )
    (65) matrix_function -> . ONES ( parameters )
    (68) reference -> . variable [ parameters ]

    MIN             shift and go to state 25
    STR             shift and go to state 27
    ID              shift and go to state 33
    [               shift and go to state 34
    INT             shift and go to state 35
    FLOAT           shift and go to state 36
    EYE             shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39

    expression                     shift and go to state 84
    matrix_obj                     shift and go to state 26
    variable                       shift and go to state 16
    vector                         shift and go to state 28
    assignable                     shift and go to state 62
    number                         shift and go to state 29
    matrix                         shift and go to state 31
    matrix_function                shift and go to state 32
    reference                      shift and go to state 30

state 53

    (42) expression -> expression MUL . expression
    (40) expression -> . expression ADD expression
    (41) expression -> . expression MIN expression
    (42) expression -> . expression MUL expression
    (43) expression -> . expression DIV expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTMIN expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . MIN expression
    (49) expression -> . matrix_obj TRANSPOSE
    (50) expression -> . variable TRANSPOSE
    (51) expression -> . STR
    (52) expression -> . matrix_obj
    (53) expression -> . vector
    (54) expression -> . assignable
    (55) expression -> . number
    (56) matrix_obj -> . matrix
    (57) matrix_obj -> . matrix_function
    (71) variable -> . ID
    (62) vector -> . [ parameters ]
    (32) assignable -> . variable
    (33) assignable -> . reference
    (69) number -> . INT
    (70) number -> . FLOAT
    (58) matrix -> . [ rows ; ]
    (63) matrix_function -> . EYE ( parameters )
    (64) matrix_function -> . ZEROS ( parameters )
    (65) matrix_function -> . ONES ( parameters )
    (68) reference -> . variable [ parameters ]

    MIN             shift and go to state 25
    STR             shift and go to state 27
    ID              shift and go to state 33
    [               shift and go to state 34
    INT             shift and go to state 35
    FLOAT           shift and go to state 36
    EYE             shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39

    expression                     shift and go to state 85
    matrix_obj                     shift and go to state 26
    variable                       shift and go to state 16
    vector                         shift and go to state 28
    assignable                     shift and go to state 62
    number                         shift and go to state 29
    matrix                         shift and go to state 31
    matrix_function                shift and go to state 32
    reference                      shift and go to state 30

state 54

    (43) expression -> expression DIV . expression
    (40) expression -> . expression ADD expression
    (41) expression -> . expression MIN expression
    (42) expression -> . expression MUL expression
    (43) expression -> . expression DIV expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTMIN expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . MIN expression
    (49) expression -> . matrix_obj TRANSPOSE
    (50) expression -> . variable TRANSPOSE
    (51) expression -> . STR
    (52) expression -> . matrix_obj
    (53) expression -> . vector
    (54) expression -> . assignable
    (55) expression -> . number
    (56) matrix_obj -> . matrix
    (57) matrix_obj -> . matrix_function
    (71) variable -> . ID
    (62) vector -> . [ parameters ]
    (32) assignable -> . variable
    (33) assignable -> . reference
    (69) number -> . INT
    (70) number -> . FLOAT
    (58) matrix -> . [ rows ; ]
    (63) matrix_function -> . EYE ( parameters )
    (64) matrix_function -> . ZEROS ( parameters )
    (65) matrix_function -> . ONES ( parameters )
    (68) reference -> . variable [ parameters ]

    MIN             shift and go to state 25
    STR             shift and go to state 27
    ID              shift and go to state 33
    [               shift and go to state 34
    INT             shift and go to state 35
    FLOAT           shift and go to state 36
    EYE             shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39

    expression                     shift and go to state 86
    matrix_obj                     shift and go to state 26
    variable                       shift and go to state 16
    vector                         shift and go to state 28
    assignable                     shift and go to state 62
    number                         shift and go to state 29
    matrix                         shift and go to state 31
    matrix_function                shift and go to state 32
    reference                      shift and go to state 30

state 55

    (44) expression -> expression DOTADD . expression
    (40) expression -> . expression ADD expression
    (41) expression -> . expression MIN expression
    (42) expression -> . expression MUL expression
    (43) expression -> . expression DIV expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTMIN expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . MIN expression
    (49) expression -> . matrix_obj TRANSPOSE
    (50) expression -> . variable TRANSPOSE
    (51) expression -> . STR
    (52) expression -> . matrix_obj
    (53) expression -> . vector
    (54) expression -> . assignable
    (55) expression -> . number
    (56) matrix_obj -> . matrix
    (57) matrix_obj -> . matrix_function
    (71) variable -> . ID
    (62) vector -> . [ parameters ]
    (32) assignable -> . variable
    (33) assignable -> . reference
    (69) number -> . INT
    (70) number -> . FLOAT
    (58) matrix -> . [ rows ; ]
    (63) matrix_function -> . EYE ( parameters )
    (64) matrix_function -> . ZEROS ( parameters )
    (65) matrix_function -> . ONES ( parameters )
    (68) reference -> . variable [ parameters ]

    MIN             shift and go to state 25
    STR             shift and go to state 27
    ID              shift and go to state 33
    [               shift and go to state 34
    INT             shift and go to state 35
    FLOAT           shift and go to state 36
    EYE             shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39

    expression                     shift and go to state 87
    matrix_obj                     shift and go to state 26
    variable                       shift and go to state 16
    vector                         shift and go to state 28
    assignable                     shift and go to state 62
    number                         shift and go to state 29
    matrix                         shift and go to state 31
    matrix_function                shift and go to state 32
    reference                      shift and go to state 30

state 56

    (45) expression -> expression DOTMIN . expression
    (40) expression -> . expression ADD expression
    (41) expression -> . expression MIN expression
    (42) expression -> . expression MUL expression
    (43) expression -> . expression DIV expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTMIN expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . MIN expression
    (49) expression -> . matrix_obj TRANSPOSE
    (50) expression -> . variable TRANSPOSE
    (51) expression -> . STR
    (52) expression -> . matrix_obj
    (53) expression -> . vector
    (54) expression -> . assignable
    (55) expression -> . number
    (56) matrix_obj -> . matrix
    (57) matrix_obj -> . matrix_function
    (71) variable -> . ID
    (62) vector -> . [ parameters ]
    (32) assignable -> . variable
    (33) assignable -> . reference
    (69) number -> . INT
    (70) number -> . FLOAT
    (58) matrix -> . [ rows ; ]
    (63) matrix_function -> . EYE ( parameters )
    (64) matrix_function -> . ZEROS ( parameters )
    (65) matrix_function -> . ONES ( parameters )
    (68) reference -> . variable [ parameters ]

    MIN             shift and go to state 25
    STR             shift and go to state 27
    ID              shift and go to state 33
    [               shift and go to state 34
    INT             shift and go to state 35
    FLOAT           shift and go to state 36
    EYE             shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39

    expression                     shift and go to state 88
    matrix_obj                     shift and go to state 26
    variable                       shift and go to state 16
    vector                         shift and go to state 28
    assignable                     shift and go to state 62
    number                         shift and go to state 29
    matrix                         shift and go to state 31
    matrix_function                shift and go to state 32
    reference                      shift and go to state 30

state 57

    (46) expression -> expression DOTMUL . expression
    (40) expression -> . expression ADD expression
    (41) expression -> . expression MIN expression
    (42) expression -> . expression MUL expression
    (43) expression -> . expression DIV expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTMIN expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . MIN expression
    (49) expression -> . matrix_obj TRANSPOSE
    (50) expression -> . variable TRANSPOSE
    (51) expression -> . STR
    (52) expression -> . matrix_obj
    (53) expression -> . vector
    (54) expression -> . assignable
    (55) expression -> . number
    (56) matrix_obj -> . matrix
    (57) matrix_obj -> . matrix_function
    (71) variable -> . ID
    (62) vector -> . [ parameters ]
    (32) assignable -> . variable
    (33) assignable -> . reference
    (69) number -> . INT
    (70) number -> . FLOAT
    (58) matrix -> . [ rows ; ]
    (63) matrix_function -> . EYE ( parameters )
    (64) matrix_function -> . ZEROS ( parameters )
    (65) matrix_function -> . ONES ( parameters )
    (68) reference -> . variable [ parameters ]

    MIN             shift and go to state 25
    STR             shift and go to state 27
    ID              shift and go to state 33
    [               shift and go to state 34
    INT             shift and go to state 35
    FLOAT           shift and go to state 36
    EYE             shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39

    expression                     shift and go to state 89
    matrix_obj                     shift and go to state 26
    variable                       shift and go to state 16
    vector                         shift and go to state 28
    assignable                     shift and go to state 62
    number                         shift and go to state 29
    matrix                         shift and go to state 31
    matrix_function                shift and go to state 32
    reference                      shift and go to state 30

state 58

    (47) expression -> expression DOTDIV . expression
    (40) expression -> . expression ADD expression
    (41) expression -> . expression MIN expression
    (42) expression -> . expression MUL expression
    (43) expression -> . expression DIV expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTMIN expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . MIN expression
    (49) expression -> . matrix_obj TRANSPOSE
    (50) expression -> . variable TRANSPOSE
    (51) expression -> . STR
    (52) expression -> . matrix_obj
    (53) expression -> . vector
    (54) expression -> . assignable
    (55) expression -> . number
    (56) matrix_obj -> . matrix
    (57) matrix_obj -> . matrix_function
    (71) variable -> . ID
    (62) vector -> . [ parameters ]
    (32) assignable -> . variable
    (33) assignable -> . reference
    (69) number -> . INT
    (70) number -> . FLOAT
    (58) matrix -> . [ rows ; ]
    (63) matrix_function -> . EYE ( parameters )
    (64) matrix_function -> . ZEROS ( parameters )
    (65) matrix_function -> . ONES ( parameters )
    (68) reference -> . variable [ parameters ]

    MIN             shift and go to state 25
    STR             shift and go to state 27
    ID              shift and go to state 33
    [               shift and go to state 34
    INT             shift and go to state 35
    FLOAT           shift and go to state 36
    EYE             shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39

    expression                     shift and go to state 90
    matrix_obj                     shift and go to state 26
    variable                       shift and go to state 16
    vector                         shift and go to state 28
    assignable                     shift and go to state 62
    number                         shift and go to state 29
    matrix                         shift and go to state 31
    matrix_function                shift and go to state 32
    reference                      shift and go to state 30

state 59

    (18) while -> WHILE ( . condition ) instruction
    (34) condition -> . expression LT expression
    (35) condition -> . expression GT expression
    (36) condition -> . expression LTE expression
    (37) condition -> . expression GTE expression
    (38) condition -> . expression NE expression
    (39) condition -> . expression EQ expression
    (40) expression -> . expression ADD expression
    (41) expression -> . expression MIN expression
    (42) expression -> . expression MUL expression
    (43) expression -> . expression DIV expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTMIN expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . MIN expression
    (49) expression -> . matrix_obj TRANSPOSE
    (50) expression -> . variable TRANSPOSE
    (51) expression -> . STR
    (52) expression -> . matrix_obj
    (53) expression -> . vector
    (54) expression -> . assignable
    (55) expression -> . number
    (56) matrix_obj -> . matrix
    (57) matrix_obj -> . matrix_function
    (71) variable -> . ID
    (62) vector -> . [ parameters ]
    (32) assignable -> . variable
    (33) assignable -> . reference
    (69) number -> . INT
    (70) number -> . FLOAT
    (58) matrix -> . [ rows ; ]
    (63) matrix_function -> . EYE ( parameters )
    (64) matrix_function -> . ZEROS ( parameters )
    (65) matrix_function -> . ONES ( parameters )
    (68) reference -> . variable [ parameters ]

    MIN             shift and go to state 25
    STR             shift and go to state 27
    ID              shift and go to state 33
    [               shift and go to state 34
    INT             shift and go to state 35
    FLOAT           shift and go to state 36
    EYE             shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39

    condition                      shift and go to state 91
    expression                     shift and go to state 80
    matrix_obj                     shift and go to state 26
    variable                       shift and go to state 16
    vector                         shift and go to state 28
    assignable                     shift and go to state 62
    number                         shift and go to state 29
    matrix                         shift and go to state 31
    matrix_function                shift and go to state 32
    reference                      shift and go to state 30

state 60

    (22) return -> RETURN expression .
    (40) expression -> expression . ADD expression
    (41) expression -> expression . MIN expression
    (42) expression -> expression . MUL expression
    (43) expression -> expression . DIV expression
    (44) expression -> expression . DOTADD expression
    (45) expression -> expression . DOTMIN expression
    (46) expression -> expression . DOTMUL expression
    (47) expression -> expression . DOTDIV expression
    (34) condition -> expression . LT expression
    (35) condition -> expression . GT expression
    (36) condition -> expression . LTE expression
    (37) condition -> expression . GTE expression
    (38) condition -> expression . NE expression
    (39) condition -> expression . EQ expression

    ;               reduce using rule 22 (return -> RETURN expression .)
    ADD             shift and go to state 51
    MIN             shift and go to state 52
    MUL             shift and go to state 53
    DIV             shift and go to state 54
    DOTADD          shift and go to state 55
    DOTMIN          shift and go to state 56
    DOTMUL          shift and go to state 57
    DOTDIV          shift and go to state 58
    LT              shift and go to state 92
    GT              shift and go to state 93
    LTE             shift and go to state 94
    GTE             shift and go to state 95
    NE              shift and go to state 96
    EQ              shift and go to state 97


state 61

    (23) return -> RETURN condition .

    ;               reduce using rule 23 (return -> RETURN condition .)


state 62

    (54) expression -> assignable .

    ADD             reduce using rule 54 (expression -> assignable .)
    MIN             reduce using rule 54 (expression -> assignable .)
    MUL             reduce using rule 54 (expression -> assignable .)
    DIV             reduce using rule 54 (expression -> assignable .)
    DOTADD          reduce using rule 54 (expression -> assignable .)
    DOTMIN          reduce using rule 54 (expression -> assignable .)
    DOTMUL          reduce using rule 54 (expression -> assignable .)
    DOTDIV          reduce using rule 54 (expression -> assignable .)
    LT              reduce using rule 54 (expression -> assignable .)
    GT              reduce using rule 54 (expression -> assignable .)
    LTE             reduce using rule 54 (expression -> assignable .)
    GTE             reduce using rule 54 (expression -> assignable .)
    NE              reduce using rule 54 (expression -> assignable .)
    EQ              reduce using rule 54 (expression -> assignable .)
    ;               reduce using rule 54 (expression -> assignable .)
    ,               reduce using rule 54 (expression -> assignable .)
    ]               reduce using rule 54 (expression -> assignable .)
    )               reduce using rule 54 (expression -> assignable .)
    :               reduce using rule 54 (expression -> assignable .)
    {               reduce using rule 54 (expression -> assignable .)
    IF              reduce using rule 54 (expression -> assignable .)
    FOR             reduce using rule 54 (expression -> assignable .)
    WHILE           reduce using rule 54 (expression -> assignable .)
    BREAK           reduce using rule 54 (expression -> assignable .)
    CONTINUE        reduce using rule 54 (expression -> assignable .)
    RETURN          reduce using rule 54 (expression -> assignable .)
    PRINT           reduce using rule 54 (expression -> assignable .)
    STR             reduce using rule 54 (expression -> assignable .)
    ID              reduce using rule 54 (expression -> assignable .)
    [               reduce using rule 54 (expression -> assignable .)
    INT             reduce using rule 54 (expression -> assignable .)
    FLOAT           reduce using rule 54 (expression -> assignable .)
    EYE             reduce using rule 54 (expression -> assignable .)
    ZEROS           reduce using rule 54 (expression -> assignable .)
    ONES            reduce using rule 54 (expression -> assignable .)


state 63

    (24) print -> PRINT parameters .
    (66) parameters -> parameters . , expression

    ;               reduce using rule 24 (print -> PRINT parameters .)
    ,               shift and go to state 98


state 64

    (67) parameters -> expression .
    (40) expression -> expression . ADD expression
    (41) expression -> expression . MIN expression
    (42) expression -> expression . MUL expression
    (43) expression -> expression . DIV expression
    (44) expression -> expression . DOTADD expression
    (45) expression -> expression . DOTMIN expression
    (46) expression -> expression . DOTMUL expression
    (47) expression -> expression . DOTDIV expression

    ,               reduce using rule 67 (parameters -> expression .)
    ;               reduce using rule 67 (parameters -> expression .)
    ]               reduce using rule 67 (parameters -> expression .)
    )               reduce using rule 67 (parameters -> expression .)
    ADD             shift and go to state 51
    MIN             shift and go to state 52
    MUL             shift and go to state 53
    DIV             shift and go to state 54
    DOTADD          shift and go to state 55
    DOTMIN          shift and go to state 56
    DOTMUL          shift and go to state 57
    DOTDIV          shift and go to state 58


state 65

    (27) assign -> assignable ASSIGN . expression
    (40) expression -> . expression ADD expression
    (41) expression -> . expression MIN expression
    (42) expression -> . expression MUL expression
    (43) expression -> . expression DIV expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTMIN expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . MIN expression
    (49) expression -> . matrix_obj TRANSPOSE
    (50) expression -> . variable TRANSPOSE
    (51) expression -> . STR
    (52) expression -> . matrix_obj
    (53) expression -> . vector
    (54) expression -> . assignable
    (55) expression -> . number
    (56) matrix_obj -> . matrix
    (57) matrix_obj -> . matrix_function
    (71) variable -> . ID
    (62) vector -> . [ parameters ]
    (32) assignable -> . variable
    (33) assignable -> . reference
    (69) number -> . INT
    (70) number -> . FLOAT
    (58) matrix -> . [ rows ; ]
    (63) matrix_function -> . EYE ( parameters )
    (64) matrix_function -> . ZEROS ( parameters )
    (65) matrix_function -> . ONES ( parameters )
    (68) reference -> . variable [ parameters ]

    MIN             shift and go to state 25
    STR             shift and go to state 27
    ID              shift and go to state 33
    [               shift and go to state 34
    INT             shift and go to state 35
    FLOAT           shift and go to state 36
    EYE             shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39

    assignable                     shift and go to state 62
    expression                     shift and go to state 99
    matrix_obj                     shift and go to state 26
    variable                       shift and go to state 16
    vector                         shift and go to state 28
    number                         shift and go to state 29
    matrix                         shift and go to state 31
    matrix_function                shift and go to state 32
    reference                      shift and go to state 30

state 66

    (28) assign -> assignable ADDASSIGN . expression
    (40) expression -> . expression ADD expression
    (41) expression -> . expression MIN expression
    (42) expression -> . expression MUL expression
    (43) expression -> . expression DIV expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTMIN expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . MIN expression
    (49) expression -> . matrix_obj TRANSPOSE
    (50) expression -> . variable TRANSPOSE
    (51) expression -> . STR
    (52) expression -> . matrix_obj
    (53) expression -> . vector
    (54) expression -> . assignable
    (55) expression -> . number
    (56) matrix_obj -> . matrix
    (57) matrix_obj -> . matrix_function
    (71) variable -> . ID
    (62) vector -> . [ parameters ]
    (32) assignable -> . variable
    (33) assignable -> . reference
    (69) number -> . INT
    (70) number -> . FLOAT
    (58) matrix -> . [ rows ; ]
    (63) matrix_function -> . EYE ( parameters )
    (64) matrix_function -> . ZEROS ( parameters )
    (65) matrix_function -> . ONES ( parameters )
    (68) reference -> . variable [ parameters ]

    MIN             shift and go to state 25
    STR             shift and go to state 27
    ID              shift and go to state 33
    [               shift and go to state 34
    INT             shift and go to state 35
    FLOAT           shift and go to state 36
    EYE             shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39

    assignable                     shift and go to state 62
    expression                     shift and go to state 100
    matrix_obj                     shift and go to state 26
    variable                       shift and go to state 16
    vector                         shift and go to state 28
    number                         shift and go to state 29
    matrix                         shift and go to state 31
    matrix_function                shift and go to state 32
    reference                      shift and go to state 30

state 67

    (29) assign -> assignable MINASSIGN . expression
    (40) expression -> . expression ADD expression
    (41) expression -> . expression MIN expression
    (42) expression -> . expression MUL expression
    (43) expression -> . expression DIV expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTMIN expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . MIN expression
    (49) expression -> . matrix_obj TRANSPOSE
    (50) expression -> . variable TRANSPOSE
    (51) expression -> . STR
    (52) expression -> . matrix_obj
    (53) expression -> . vector
    (54) expression -> . assignable
    (55) expression -> . number
    (56) matrix_obj -> . matrix
    (57) matrix_obj -> . matrix_function
    (71) variable -> . ID
    (62) vector -> . [ parameters ]
    (32) assignable -> . variable
    (33) assignable -> . reference
    (69) number -> . INT
    (70) number -> . FLOAT
    (58) matrix -> . [ rows ; ]
    (63) matrix_function -> . EYE ( parameters )
    (64) matrix_function -> . ZEROS ( parameters )
    (65) matrix_function -> . ONES ( parameters )
    (68) reference -> . variable [ parameters ]

    MIN             shift and go to state 25
    STR             shift and go to state 27
    ID              shift and go to state 33
    [               shift and go to state 34
    INT             shift and go to state 35
    FLOAT           shift and go to state 36
    EYE             shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39

    assignable                     shift and go to state 62
    expression                     shift and go to state 101
    matrix_obj                     shift and go to state 26
    variable                       shift and go to state 16
    vector                         shift and go to state 28
    number                         shift and go to state 29
    matrix                         shift and go to state 31
    matrix_function                shift and go to state 32
    reference                      shift and go to state 30

state 68

    (30) assign -> assignable MULASSIGN . expression
    (40) expression -> . expression ADD expression
    (41) expression -> . expression MIN expression
    (42) expression -> . expression MUL expression
    (43) expression -> . expression DIV expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTMIN expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . MIN expression
    (49) expression -> . matrix_obj TRANSPOSE
    (50) expression -> . variable TRANSPOSE
    (51) expression -> . STR
    (52) expression -> . matrix_obj
    (53) expression -> . vector
    (54) expression -> . assignable
    (55) expression -> . number
    (56) matrix_obj -> . matrix
    (57) matrix_obj -> . matrix_function
    (71) variable -> . ID
    (62) vector -> . [ parameters ]
    (32) assignable -> . variable
    (33) assignable -> . reference
    (69) number -> . INT
    (70) number -> . FLOAT
    (58) matrix -> . [ rows ; ]
    (63) matrix_function -> . EYE ( parameters )
    (64) matrix_function -> . ZEROS ( parameters )
    (65) matrix_function -> . ONES ( parameters )
    (68) reference -> . variable [ parameters ]

    MIN             shift and go to state 25
    STR             shift and go to state 27
    ID              shift and go to state 33
    [               shift and go to state 34
    INT             shift and go to state 35
    FLOAT           shift and go to state 36
    EYE             shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39

    assignable                     shift and go to state 62
    expression                     shift and go to state 102
    matrix_obj                     shift and go to state 26
    variable                       shift and go to state 16
    vector                         shift and go to state 28
    number                         shift and go to state 29
    matrix                         shift and go to state 31
    matrix_function                shift and go to state 32
    reference                      shift and go to state 30

state 69

    (31) assign -> assignable DIVASSIGN . expression
    (40) expression -> . expression ADD expression
    (41) expression -> . expression MIN expression
    (42) expression -> . expression MUL expression
    (43) expression -> . expression DIV expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTMIN expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . MIN expression
    (49) expression -> . matrix_obj TRANSPOSE
    (50) expression -> . variable TRANSPOSE
    (51) expression -> . STR
    (52) expression -> . matrix_obj
    (53) expression -> . vector
    (54) expression -> . assignable
    (55) expression -> . number
    (56) matrix_obj -> . matrix
    (57) matrix_obj -> . matrix_function
    (71) variable -> . ID
    (62) vector -> . [ parameters ]
    (32) assignable -> . variable
    (33) assignable -> . reference
    (69) number -> . INT
    (70) number -> . FLOAT
    (58) matrix -> . [ rows ; ]
    (63) matrix_function -> . EYE ( parameters )
    (64) matrix_function -> . ZEROS ( parameters )
    (65) matrix_function -> . ONES ( parameters )
    (68) reference -> . variable [ parameters ]

    MIN             shift and go to state 25
    STR             shift and go to state 27
    ID              shift and go to state 33
    [               shift and go to state 34
    INT             shift and go to state 35
    FLOAT           shift and go to state 36
    EYE             shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39

    assignable                     shift and go to state 62
    expression                     shift and go to state 103
    matrix_obj                     shift and go to state 26
    variable                       shift and go to state 16
    vector                         shift and go to state 28
    number                         shift and go to state 29
    matrix                         shift and go to state 31
    matrix_function                shift and go to state 32
    reference                      shift and go to state 30

state 70

    (48) expression -> MIN expression .
    (40) expression -> expression . ADD expression
    (41) expression -> expression . MIN expression
    (42) expression -> expression . MUL expression
    (43) expression -> expression . DIV expression
    (44) expression -> expression . DOTADD expression
    (45) expression -> expression . DOTMIN expression
    (46) expression -> expression . DOTMUL expression
    (47) expression -> expression . DOTDIV expression

    ADD             reduce using rule 48 (expression -> MIN expression .)
    MIN             reduce using rule 48 (expression -> MIN expression .)
    MUL             reduce using rule 48 (expression -> MIN expression .)
    DIV             reduce using rule 48 (expression -> MIN expression .)
    DOTADD          reduce using rule 48 (expression -> MIN expression .)
    DOTMIN          reduce using rule 48 (expression -> MIN expression .)
    DOTMUL          reduce using rule 48 (expression -> MIN expression .)
    DOTDIV          reduce using rule 48 (expression -> MIN expression .)
    ;               reduce using rule 48 (expression -> MIN expression .)
    LT              reduce using rule 48 (expression -> MIN expression .)
    GT              reduce using rule 48 (expression -> MIN expression .)
    LTE             reduce using rule 48 (expression -> MIN expression .)
    GTE             reduce using rule 48 (expression -> MIN expression .)
    NE              reduce using rule 48 (expression -> MIN expression .)
    EQ              reduce using rule 48 (expression -> MIN expression .)
    ,               reduce using rule 48 (expression -> MIN expression .)
    ]               reduce using rule 48 (expression -> MIN expression .)
    )               reduce using rule 48 (expression -> MIN expression .)
    :               reduce using rule 48 (expression -> MIN expression .)
    {               reduce using rule 48 (expression -> MIN expression .)
    IF              reduce using rule 48 (expression -> MIN expression .)
    FOR             reduce using rule 48 (expression -> MIN expression .)
    WHILE           reduce using rule 48 (expression -> MIN expression .)
    BREAK           reduce using rule 48 (expression -> MIN expression .)
    CONTINUE        reduce using rule 48 (expression -> MIN expression .)
    RETURN          reduce using rule 48 (expression -> MIN expression .)
    PRINT           reduce using rule 48 (expression -> MIN expression .)
    STR             reduce using rule 48 (expression -> MIN expression .)
    ID              reduce using rule 48 (expression -> MIN expression .)
    [               reduce using rule 48 (expression -> MIN expression .)
    INT             reduce using rule 48 (expression -> MIN expression .)
    FLOAT           reduce using rule 48 (expression -> MIN expression .)
    EYE             reduce using rule 48 (expression -> MIN expression .)
    ZEROS           reduce using rule 48 (expression -> MIN expression .)
    ONES            reduce using rule 48 (expression -> MIN expression .)

  ! ADD             [ shift and go to state 51 ]
  ! MIN             [ shift and go to state 52 ]
  ! MUL             [ shift and go to state 53 ]
  ! DIV             [ shift and go to state 54 ]
  ! DOTADD          [ shift and go to state 55 ]
  ! DOTMIN          [ shift and go to state 56 ]
  ! DOTMUL          [ shift and go to state 57 ]
  ! DOTDIV          [ shift and go to state 58 ]


state 71

    (49) expression -> matrix_obj TRANSPOSE .

    ADD             reduce using rule 49 (expression -> matrix_obj TRANSPOSE .)
    MIN             reduce using rule 49 (expression -> matrix_obj TRANSPOSE .)
    MUL             reduce using rule 49 (expression -> matrix_obj TRANSPOSE .)
    DIV             reduce using rule 49 (expression -> matrix_obj TRANSPOSE .)
    DOTADD          reduce using rule 49 (expression -> matrix_obj TRANSPOSE .)
    DOTMIN          reduce using rule 49 (expression -> matrix_obj TRANSPOSE .)
    DOTMUL          reduce using rule 49 (expression -> matrix_obj TRANSPOSE .)
    DOTDIV          reduce using rule 49 (expression -> matrix_obj TRANSPOSE .)
    ;               reduce using rule 49 (expression -> matrix_obj TRANSPOSE .)
    LT              reduce using rule 49 (expression -> matrix_obj TRANSPOSE .)
    GT              reduce using rule 49 (expression -> matrix_obj TRANSPOSE .)
    LTE             reduce using rule 49 (expression -> matrix_obj TRANSPOSE .)
    GTE             reduce using rule 49 (expression -> matrix_obj TRANSPOSE .)
    NE              reduce using rule 49 (expression -> matrix_obj TRANSPOSE .)
    EQ              reduce using rule 49 (expression -> matrix_obj TRANSPOSE .)
    ,               reduce using rule 49 (expression -> matrix_obj TRANSPOSE .)
    ]               reduce using rule 49 (expression -> matrix_obj TRANSPOSE .)
    )               reduce using rule 49 (expression -> matrix_obj TRANSPOSE .)
    :               reduce using rule 49 (expression -> matrix_obj TRANSPOSE .)
    {               reduce using rule 49 (expression -> matrix_obj TRANSPOSE .)
    IF              reduce using rule 49 (expression -> matrix_obj TRANSPOSE .)
    FOR             reduce using rule 49 (expression -> matrix_obj TRANSPOSE .)
    WHILE           reduce using rule 49 (expression -> matrix_obj TRANSPOSE .)
    BREAK           reduce using rule 49 (expression -> matrix_obj TRANSPOSE .)
    CONTINUE        reduce using rule 49 (expression -> matrix_obj TRANSPOSE .)
    RETURN          reduce using rule 49 (expression -> matrix_obj TRANSPOSE .)
    PRINT           reduce using rule 49 (expression -> matrix_obj TRANSPOSE .)
    STR             reduce using rule 49 (expression -> matrix_obj TRANSPOSE .)
    ID              reduce using rule 49 (expression -> matrix_obj TRANSPOSE .)
    [               reduce using rule 49 (expression -> matrix_obj TRANSPOSE .)
    INT             reduce using rule 49 (expression -> matrix_obj TRANSPOSE .)
    FLOAT           reduce using rule 49 (expression -> matrix_obj TRANSPOSE .)
    EYE             reduce using rule 49 (expression -> matrix_obj TRANSPOSE .)
    ZEROS           reduce using rule 49 (expression -> matrix_obj TRANSPOSE .)
    ONES            reduce using rule 49 (expression -> matrix_obj TRANSPOSE .)


state 72

    (62) vector -> [ parameters . ]
    (66) parameters -> parameters . , expression
    (61) row -> parameters .

    ]               shift and go to state 104
    ,               shift and go to state 98
    ;               reduce using rule 61 (row -> parameters .)


state 73

    (58) matrix -> [ rows . ; ]
    (59) rows -> rows . ; row

    ;               shift and go to state 105


state 74

    (60) rows -> row .

    ;               reduce using rule 60 (rows -> row .)


state 75

    (63) matrix_function -> EYE ( . parameters )
    (66) parameters -> . parameters , expression
    (67) parameters -> . expression
    (40) expression -> . expression ADD expression
    (41) expression -> . expression MIN expression
    (42) expression -> . expression MUL expression
    (43) expression -> . expression DIV expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTMIN expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . MIN expression
    (49) expression -> . matrix_obj TRANSPOSE
    (50) expression -> . variable TRANSPOSE
    (51) expression -> . STR
    (52) expression -> . matrix_obj
    (53) expression -> . vector
    (54) expression -> . assignable
    (55) expression -> . number
    (56) matrix_obj -> . matrix
    (57) matrix_obj -> . matrix_function
    (71) variable -> . ID
    (62) vector -> . [ parameters ]
    (32) assignable -> . variable
    (33) assignable -> . reference
    (69) number -> . INT
    (70) number -> . FLOAT
    (58) matrix -> . [ rows ; ]
    (63) matrix_function -> . EYE ( parameters )
    (64) matrix_function -> . ZEROS ( parameters )
    (65) matrix_function -> . ONES ( parameters )
    (68) reference -> . variable [ parameters ]

    MIN             shift and go to state 25
    STR             shift and go to state 27
    ID              shift and go to state 33
    [               shift and go to state 34
    INT             shift and go to state 35
    FLOAT           shift and go to state 36
    EYE             shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39

    parameters                     shift and go to state 106
    expression                     shift and go to state 64
    matrix_obj                     shift and go to state 26
    variable                       shift and go to state 16
    vector                         shift and go to state 28
    assignable                     shift and go to state 62
    number                         shift and go to state 29
    matrix                         shift and go to state 31
    matrix_function                shift and go to state 32
    reference                      shift and go to state 30

state 76

    (64) matrix_function -> ZEROS ( . parameters )
    (66) parameters -> . parameters , expression
    (67) parameters -> . expression
    (40) expression -> . expression ADD expression
    (41) expression -> . expression MIN expression
    (42) expression -> . expression MUL expression
    (43) expression -> . expression DIV expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTMIN expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . MIN expression
    (49) expression -> . matrix_obj TRANSPOSE
    (50) expression -> . variable TRANSPOSE
    (51) expression -> . STR
    (52) expression -> . matrix_obj
    (53) expression -> . vector
    (54) expression -> . assignable
    (55) expression -> . number
    (56) matrix_obj -> . matrix
    (57) matrix_obj -> . matrix_function
    (71) variable -> . ID
    (62) vector -> . [ parameters ]
    (32) assignable -> . variable
    (33) assignable -> . reference
    (69) number -> . INT
    (70) number -> . FLOAT
    (58) matrix -> . [ rows ; ]
    (63) matrix_function -> . EYE ( parameters )
    (64) matrix_function -> . ZEROS ( parameters )
    (65) matrix_function -> . ONES ( parameters )
    (68) reference -> . variable [ parameters ]

    MIN             shift and go to state 25
    STR             shift and go to state 27
    ID              shift and go to state 33
    [               shift and go to state 34
    INT             shift and go to state 35
    FLOAT           shift and go to state 36
    EYE             shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39

    parameters                     shift and go to state 107
    expression                     shift and go to state 64
    matrix_obj                     shift and go to state 26
    variable                       shift and go to state 16
    vector                         shift and go to state 28
    assignable                     shift and go to state 62
    number                         shift and go to state 29
    matrix                         shift and go to state 31
    matrix_function                shift and go to state 32
    reference                      shift and go to state 30

state 77

    (65) matrix_function -> ONES ( . parameters )
    (66) parameters -> . parameters , expression
    (67) parameters -> . expression
    (40) expression -> . expression ADD expression
    (41) expression -> . expression MIN expression
    (42) expression -> . expression MUL expression
    (43) expression -> . expression DIV expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTMIN expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . MIN expression
    (49) expression -> . matrix_obj TRANSPOSE
    (50) expression -> . variable TRANSPOSE
    (51) expression -> . STR
    (52) expression -> . matrix_obj
    (53) expression -> . vector
    (54) expression -> . assignable
    (55) expression -> . number
    (56) matrix_obj -> . matrix
    (57) matrix_obj -> . matrix_function
    (71) variable -> . ID
    (62) vector -> . [ parameters ]
    (32) assignable -> . variable
    (33) assignable -> . reference
    (69) number -> . INT
    (70) number -> . FLOAT
    (58) matrix -> . [ rows ; ]
    (63) matrix_function -> . EYE ( parameters )
    (64) matrix_function -> . ZEROS ( parameters )
    (65) matrix_function -> . ONES ( parameters )
    (68) reference -> . variable [ parameters ]

    MIN             shift and go to state 25
    STR             shift and go to state 27
    ID              shift and go to state 33
    [               shift and go to state 34
    INT             shift and go to state 35
    FLOAT           shift and go to state 36
    EYE             shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39

    parameters                     shift and go to state 108
    expression                     shift and go to state 64
    matrix_obj                     shift and go to state 26
    variable                       shift and go to state 16
    vector                         shift and go to state 28
    assignable                     shift and go to state 62
    number                         shift and go to state 29
    matrix                         shift and go to state 31
    matrix_function                shift and go to state 32
    reference                      shift and go to state 30

state 78

    (14) block -> { instructions } .

    {               reduce using rule 14 (block -> { instructions } .)
    IF              reduce using rule 14 (block -> { instructions } .)
    FOR             reduce using rule 14 (block -> { instructions } .)
    WHILE           reduce using rule 14 (block -> { instructions } .)
    BREAK           reduce using rule 14 (block -> { instructions } .)
    CONTINUE        reduce using rule 14 (block -> { instructions } .)
    RETURN          reduce using rule 14 (block -> { instructions } .)
    PRINT           reduce using rule 14 (block -> { instructions } .)
    MIN             reduce using rule 14 (block -> { instructions } .)
    STR             reduce using rule 14 (block -> { instructions } .)
    ID              reduce using rule 14 (block -> { instructions } .)
    [               reduce using rule 14 (block -> { instructions } .)
    INT             reduce using rule 14 (block -> { instructions } .)
    FLOAT           reduce using rule 14 (block -> { instructions } .)
    EYE             reduce using rule 14 (block -> { instructions } .)
    ZEROS           reduce using rule 14 (block -> { instructions } .)
    ONES            reduce using rule 14 (block -> { instructions } .)
    $end            reduce using rule 14 (block -> { instructions } .)
    }               reduce using rule 14 (block -> { instructions } .)
    ELSE            reduce using rule 14 (block -> { instructions } .)


state 79

    (15) if -> IF ( condition . ) instruction
    (16) if -> IF ( condition . ) instruction ELSE instruction

    )               shift and go to state 109


state 80

    (34) condition -> expression . LT expression
    (35) condition -> expression . GT expression
    (36) condition -> expression . LTE expression
    (37) condition -> expression . GTE expression
    (38) condition -> expression . NE expression
    (39) condition -> expression . EQ expression
    (40) expression -> expression . ADD expression
    (41) expression -> expression . MIN expression
    (42) expression -> expression . MUL expression
    (43) expression -> expression . DIV expression
    (44) expression -> expression . DOTADD expression
    (45) expression -> expression . DOTMIN expression
    (46) expression -> expression . DOTMUL expression
    (47) expression -> expression . DOTDIV expression

    LT              shift and go to state 92
    GT              shift and go to state 93
    LTE             shift and go to state 94
    GTE             shift and go to state 95
    NE              shift and go to state 96
    EQ              shift and go to state 97
    ADD             shift and go to state 51
    MIN             shift and go to state 52
    MUL             shift and go to state 53
    DIV             shift and go to state 54
    DOTADD          shift and go to state 55
    DOTMIN          shift and go to state 56
    DOTMUL          shift and go to state 57
    DOTDIV          shift and go to state 58


state 81

    (17) for -> FOR variable ASSIGN . expression : expression instruction
    (40) expression -> . expression ADD expression
    (41) expression -> . expression MIN expression
    (42) expression -> . expression MUL expression
    (43) expression -> . expression DIV expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTMIN expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . MIN expression
    (49) expression -> . matrix_obj TRANSPOSE
    (50) expression -> . variable TRANSPOSE
    (51) expression -> . STR
    (52) expression -> . matrix_obj
    (53) expression -> . vector
    (54) expression -> . assignable
    (55) expression -> . number
    (56) matrix_obj -> . matrix
    (57) matrix_obj -> . matrix_function
    (71) variable -> . ID
    (62) vector -> . [ parameters ]
    (32) assignable -> . variable
    (33) assignable -> . reference
    (69) number -> . INT
    (70) number -> . FLOAT
    (58) matrix -> . [ rows ; ]
    (63) matrix_function -> . EYE ( parameters )
    (64) matrix_function -> . ZEROS ( parameters )
    (65) matrix_function -> . ONES ( parameters )
    (68) reference -> . variable [ parameters ]

    MIN             shift and go to state 25
    STR             shift and go to state 27
    ID              shift and go to state 33
    [               shift and go to state 34
    INT             shift and go to state 35
    FLOAT           shift and go to state 36
    EYE             shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39

    variable                       shift and go to state 16
    expression                     shift and go to state 110
    matrix_obj                     shift and go to state 26
    vector                         shift and go to state 28
    assignable                     shift and go to state 62
    number                         shift and go to state 29
    matrix                         shift and go to state 31
    matrix_function                shift and go to state 32
    reference                      shift and go to state 30

state 82

    (68) reference -> variable [ parameters . ]
    (66) parameters -> parameters . , expression

    ]               shift and go to state 111
    ,               shift and go to state 98


state 83

    (40) expression -> expression ADD expression .
    (40) expression -> expression . ADD expression
    (41) expression -> expression . MIN expression
    (42) expression -> expression . MUL expression
    (43) expression -> expression . DIV expression
    (44) expression -> expression . DOTADD expression
    (45) expression -> expression . DOTMIN expression
    (46) expression -> expression . DOTMUL expression
    (47) expression -> expression . DOTDIV expression

    ADD             reduce using rule 40 (expression -> expression ADD expression .)
    MIN             reduce using rule 40 (expression -> expression ADD expression .)
    DOTADD          reduce using rule 40 (expression -> expression ADD expression .)
    DOTMIN          reduce using rule 40 (expression -> expression ADD expression .)
    ;               reduce using rule 40 (expression -> expression ADD expression .)
    LT              reduce using rule 40 (expression -> expression ADD expression .)
    GT              reduce using rule 40 (expression -> expression ADD expression .)
    LTE             reduce using rule 40 (expression -> expression ADD expression .)
    GTE             reduce using rule 40 (expression -> expression ADD expression .)
    NE              reduce using rule 40 (expression -> expression ADD expression .)
    EQ              reduce using rule 40 (expression -> expression ADD expression .)
    ,               reduce using rule 40 (expression -> expression ADD expression .)
    ]               reduce using rule 40 (expression -> expression ADD expression .)
    )               reduce using rule 40 (expression -> expression ADD expression .)
    :               reduce using rule 40 (expression -> expression ADD expression .)
    {               reduce using rule 40 (expression -> expression ADD expression .)
    IF              reduce using rule 40 (expression -> expression ADD expression .)
    FOR             reduce using rule 40 (expression -> expression ADD expression .)
    WHILE           reduce using rule 40 (expression -> expression ADD expression .)
    BREAK           reduce using rule 40 (expression -> expression ADD expression .)
    CONTINUE        reduce using rule 40 (expression -> expression ADD expression .)
    RETURN          reduce using rule 40 (expression -> expression ADD expression .)
    PRINT           reduce using rule 40 (expression -> expression ADD expression .)
    STR             reduce using rule 40 (expression -> expression ADD expression .)
    ID              reduce using rule 40 (expression -> expression ADD expression .)
    [               reduce using rule 40 (expression -> expression ADD expression .)
    INT             reduce using rule 40 (expression -> expression ADD expression .)
    FLOAT           reduce using rule 40 (expression -> expression ADD expression .)
    EYE             reduce using rule 40 (expression -> expression ADD expression .)
    ZEROS           reduce using rule 40 (expression -> expression ADD expression .)
    ONES            reduce using rule 40 (expression -> expression ADD expression .)
    MUL             shift and go to state 53
    DIV             shift and go to state 54
    DOTMUL          shift and go to state 57
    DOTDIV          shift and go to state 58

  ! MUL             [ reduce using rule 40 (expression -> expression ADD expression .) ]
  ! DIV             [ reduce using rule 40 (expression -> expression ADD expression .) ]
  ! DOTMUL          [ reduce using rule 40 (expression -> expression ADD expression .) ]
  ! DOTDIV          [ reduce using rule 40 (expression -> expression ADD expression .) ]
  ! ADD             [ shift and go to state 51 ]
  ! MIN             [ shift and go to state 52 ]
  ! DOTADD          [ shift and go to state 55 ]
  ! DOTMIN          [ shift and go to state 56 ]


state 84

    (41) expression -> expression MIN expression .
    (40) expression -> expression . ADD expression
    (41) expression -> expression . MIN expression
    (42) expression -> expression . MUL expression
    (43) expression -> expression . DIV expression
    (44) expression -> expression . DOTADD expression
    (45) expression -> expression . DOTMIN expression
    (46) expression -> expression . DOTMUL expression
    (47) expression -> expression . DOTDIV expression

    ADD             reduce using rule 41 (expression -> expression MIN expression .)
    MIN             reduce using rule 41 (expression -> expression MIN expression .)
    DOTADD          reduce using rule 41 (expression -> expression MIN expression .)
    DOTMIN          reduce using rule 41 (expression -> expression MIN expression .)
    ;               reduce using rule 41 (expression -> expression MIN expression .)
    LT              reduce using rule 41 (expression -> expression MIN expression .)
    GT              reduce using rule 41 (expression -> expression MIN expression .)
    LTE             reduce using rule 41 (expression -> expression MIN expression .)
    GTE             reduce using rule 41 (expression -> expression MIN expression .)
    NE              reduce using rule 41 (expression -> expression MIN expression .)
    EQ              reduce using rule 41 (expression -> expression MIN expression .)
    ,               reduce using rule 41 (expression -> expression MIN expression .)
    ]               reduce using rule 41 (expression -> expression MIN expression .)
    )               reduce using rule 41 (expression -> expression MIN expression .)
    :               reduce using rule 41 (expression -> expression MIN expression .)
    {               reduce using rule 41 (expression -> expression MIN expression .)
    IF              reduce using rule 41 (expression -> expression MIN expression .)
    FOR             reduce using rule 41 (expression -> expression MIN expression .)
    WHILE           reduce using rule 41 (expression -> expression MIN expression .)
    BREAK           reduce using rule 41 (expression -> expression MIN expression .)
    CONTINUE        reduce using rule 41 (expression -> expression MIN expression .)
    RETURN          reduce using rule 41 (expression -> expression MIN expression .)
    PRINT           reduce using rule 41 (expression -> expression MIN expression .)
    STR             reduce using rule 41 (expression -> expression MIN expression .)
    ID              reduce using rule 41 (expression -> expression MIN expression .)
    [               reduce using rule 41 (expression -> expression MIN expression .)
    INT             reduce using rule 41 (expression -> expression MIN expression .)
    FLOAT           reduce using rule 41 (expression -> expression MIN expression .)
    EYE             reduce using rule 41 (expression -> expression MIN expression .)
    ZEROS           reduce using rule 41 (expression -> expression MIN expression .)
    ONES            reduce using rule 41 (expression -> expression MIN expression .)
    MUL             shift and go to state 53
    DIV             shift and go to state 54
    DOTMUL          shift and go to state 57
    DOTDIV          shift and go to state 58

  ! MUL             [ reduce using rule 41 (expression -> expression MIN expression .) ]
  ! DIV             [ reduce using rule 41 (expression -> expression MIN expression .) ]
  ! DOTMUL          [ reduce using rule 41 (expression -> expression MIN expression .) ]
  ! DOTDIV          [ reduce using rule 41 (expression -> expression MIN expression .) ]
  ! ADD             [ shift and go to state 51 ]
  ! MIN             [ shift and go to state 52 ]
  ! DOTADD          [ shift and go to state 55 ]
  ! DOTMIN          [ shift and go to state 56 ]


state 85

    (42) expression -> expression MUL expression .
    (40) expression -> expression . ADD expression
    (41) expression -> expression . MIN expression
    (42) expression -> expression . MUL expression
    (43) expression -> expression . DIV expression
    (44) expression -> expression . DOTADD expression
    (45) expression -> expression . DOTMIN expression
    (46) expression -> expression . DOTMUL expression
    (47) expression -> expression . DOTDIV expression

    ADD             reduce using rule 42 (expression -> expression MUL expression .)
    MIN             reduce using rule 42 (expression -> expression MUL expression .)
    MUL             reduce using rule 42 (expression -> expression MUL expression .)
    DIV             reduce using rule 42 (expression -> expression MUL expression .)
    DOTADD          reduce using rule 42 (expression -> expression MUL expression .)
    DOTMIN          reduce using rule 42 (expression -> expression MUL expression .)
    DOTMUL          reduce using rule 42 (expression -> expression MUL expression .)
    DOTDIV          reduce using rule 42 (expression -> expression MUL expression .)
    ;               reduce using rule 42 (expression -> expression MUL expression .)
    LT              reduce using rule 42 (expression -> expression MUL expression .)
    GT              reduce using rule 42 (expression -> expression MUL expression .)
    LTE             reduce using rule 42 (expression -> expression MUL expression .)
    GTE             reduce using rule 42 (expression -> expression MUL expression .)
    NE              reduce using rule 42 (expression -> expression MUL expression .)
    EQ              reduce using rule 42 (expression -> expression MUL expression .)
    ,               reduce using rule 42 (expression -> expression MUL expression .)
    ]               reduce using rule 42 (expression -> expression MUL expression .)
    )               reduce using rule 42 (expression -> expression MUL expression .)
    :               reduce using rule 42 (expression -> expression MUL expression .)
    {               reduce using rule 42 (expression -> expression MUL expression .)
    IF              reduce using rule 42 (expression -> expression MUL expression .)
    FOR             reduce using rule 42 (expression -> expression MUL expression .)
    WHILE           reduce using rule 42 (expression -> expression MUL expression .)
    BREAK           reduce using rule 42 (expression -> expression MUL expression .)
    CONTINUE        reduce using rule 42 (expression -> expression MUL expression .)
    RETURN          reduce using rule 42 (expression -> expression MUL expression .)
    PRINT           reduce using rule 42 (expression -> expression MUL expression .)
    STR             reduce using rule 42 (expression -> expression MUL expression .)
    ID              reduce using rule 42 (expression -> expression MUL expression .)
    [               reduce using rule 42 (expression -> expression MUL expression .)
    INT             reduce using rule 42 (expression -> expression MUL expression .)
    FLOAT           reduce using rule 42 (expression -> expression MUL expression .)
    EYE             reduce using rule 42 (expression -> expression MUL expression .)
    ZEROS           reduce using rule 42 (expression -> expression MUL expression .)
    ONES            reduce using rule 42 (expression -> expression MUL expression .)

  ! ADD             [ shift and go to state 51 ]
  ! MIN             [ shift and go to state 52 ]
  ! MUL             [ shift and go to state 53 ]
  ! DIV             [ shift and go to state 54 ]
  ! DOTADD          [ shift and go to state 55 ]
  ! DOTMIN          [ shift and go to state 56 ]
  ! DOTMUL          [ shift and go to state 57 ]
  ! DOTDIV          [ shift and go to state 58 ]


state 86

    (43) expression -> expression DIV expression .
    (40) expression -> expression . ADD expression
    (41) expression -> expression . MIN expression
    (42) expression -> expression . MUL expression
    (43) expression -> expression . DIV expression
    (44) expression -> expression . DOTADD expression
    (45) expression -> expression . DOTMIN expression
    (46) expression -> expression . DOTMUL expression
    (47) expression -> expression . DOTDIV expression

    ADD             reduce using rule 43 (expression -> expression DIV expression .)
    MIN             reduce using rule 43 (expression -> expression DIV expression .)
    MUL             reduce using rule 43 (expression -> expression DIV expression .)
    DIV             reduce using rule 43 (expression -> expression DIV expression .)
    DOTADD          reduce using rule 43 (expression -> expression DIV expression .)
    DOTMIN          reduce using rule 43 (expression -> expression DIV expression .)
    DOTMUL          reduce using rule 43 (expression -> expression DIV expression .)
    DOTDIV          reduce using rule 43 (expression -> expression DIV expression .)
    ;               reduce using rule 43 (expression -> expression DIV expression .)
    LT              reduce using rule 43 (expression -> expression DIV expression .)
    GT              reduce using rule 43 (expression -> expression DIV expression .)
    LTE             reduce using rule 43 (expression -> expression DIV expression .)
    GTE             reduce using rule 43 (expression -> expression DIV expression .)
    NE              reduce using rule 43 (expression -> expression DIV expression .)
    EQ              reduce using rule 43 (expression -> expression DIV expression .)
    ,               reduce using rule 43 (expression -> expression DIV expression .)
    ]               reduce using rule 43 (expression -> expression DIV expression .)
    )               reduce using rule 43 (expression -> expression DIV expression .)
    :               reduce using rule 43 (expression -> expression DIV expression .)
    {               reduce using rule 43 (expression -> expression DIV expression .)
    IF              reduce using rule 43 (expression -> expression DIV expression .)
    FOR             reduce using rule 43 (expression -> expression DIV expression .)
    WHILE           reduce using rule 43 (expression -> expression DIV expression .)
    BREAK           reduce using rule 43 (expression -> expression DIV expression .)
    CONTINUE        reduce using rule 43 (expression -> expression DIV expression .)
    RETURN          reduce using rule 43 (expression -> expression DIV expression .)
    PRINT           reduce using rule 43 (expression -> expression DIV expression .)
    STR             reduce using rule 43 (expression -> expression DIV expression .)
    ID              reduce using rule 43 (expression -> expression DIV expression .)
    [               reduce using rule 43 (expression -> expression DIV expression .)
    INT             reduce using rule 43 (expression -> expression DIV expression .)
    FLOAT           reduce using rule 43 (expression -> expression DIV expression .)
    EYE             reduce using rule 43 (expression -> expression DIV expression .)
    ZEROS           reduce using rule 43 (expression -> expression DIV expression .)
    ONES            reduce using rule 43 (expression -> expression DIV expression .)

  ! ADD             [ shift and go to state 51 ]
  ! MIN             [ shift and go to state 52 ]
  ! MUL             [ shift and go to state 53 ]
  ! DIV             [ shift and go to state 54 ]
  ! DOTADD          [ shift and go to state 55 ]
  ! DOTMIN          [ shift and go to state 56 ]
  ! DOTMUL          [ shift and go to state 57 ]
  ! DOTDIV          [ shift and go to state 58 ]


state 87

    (44) expression -> expression DOTADD expression .
    (40) expression -> expression . ADD expression
    (41) expression -> expression . MIN expression
    (42) expression -> expression . MUL expression
    (43) expression -> expression . DIV expression
    (44) expression -> expression . DOTADD expression
    (45) expression -> expression . DOTMIN expression
    (46) expression -> expression . DOTMUL expression
    (47) expression -> expression . DOTDIV expression

    ADD             reduce using rule 44 (expression -> expression DOTADD expression .)
    MIN             reduce using rule 44 (expression -> expression DOTADD expression .)
    DOTADD          reduce using rule 44 (expression -> expression DOTADD expression .)
    DOTMIN          reduce using rule 44 (expression -> expression DOTADD expression .)
    ;               reduce using rule 44 (expression -> expression DOTADD expression .)
    LT              reduce using rule 44 (expression -> expression DOTADD expression .)
    GT              reduce using rule 44 (expression -> expression DOTADD expression .)
    LTE             reduce using rule 44 (expression -> expression DOTADD expression .)
    GTE             reduce using rule 44 (expression -> expression DOTADD expression .)
    NE              reduce using rule 44 (expression -> expression DOTADD expression .)
    EQ              reduce using rule 44 (expression -> expression DOTADD expression .)
    ,               reduce using rule 44 (expression -> expression DOTADD expression .)
    ]               reduce using rule 44 (expression -> expression DOTADD expression .)
    )               reduce using rule 44 (expression -> expression DOTADD expression .)
    :               reduce using rule 44 (expression -> expression DOTADD expression .)
    {               reduce using rule 44 (expression -> expression DOTADD expression .)
    IF              reduce using rule 44 (expression -> expression DOTADD expression .)
    FOR             reduce using rule 44 (expression -> expression DOTADD expression .)
    WHILE           reduce using rule 44 (expression -> expression DOTADD expression .)
    BREAK           reduce using rule 44 (expression -> expression DOTADD expression .)
    CONTINUE        reduce using rule 44 (expression -> expression DOTADD expression .)
    RETURN          reduce using rule 44 (expression -> expression DOTADD expression .)
    PRINT           reduce using rule 44 (expression -> expression DOTADD expression .)
    STR             reduce using rule 44 (expression -> expression DOTADD expression .)
    ID              reduce using rule 44 (expression -> expression DOTADD expression .)
    [               reduce using rule 44 (expression -> expression DOTADD expression .)
    INT             reduce using rule 44 (expression -> expression DOTADD expression .)
    FLOAT           reduce using rule 44 (expression -> expression DOTADD expression .)
    EYE             reduce using rule 44 (expression -> expression DOTADD expression .)
    ZEROS           reduce using rule 44 (expression -> expression DOTADD expression .)
    ONES            reduce using rule 44 (expression -> expression DOTADD expression .)
    MUL             shift and go to state 53
    DIV             shift and go to state 54
    DOTMUL          shift and go to state 57
    DOTDIV          shift and go to state 58

  ! MUL             [ reduce using rule 44 (expression -> expression DOTADD expression .) ]
  ! DIV             [ reduce using rule 44 (expression -> expression DOTADD expression .) ]
  ! DOTMUL          [ reduce using rule 44 (expression -> expression DOTADD expression .) ]
  ! DOTDIV          [ reduce using rule 44 (expression -> expression DOTADD expression .) ]
  ! ADD             [ shift and go to state 51 ]
  ! MIN             [ shift and go to state 52 ]
  ! DOTADD          [ shift and go to state 55 ]
  ! DOTMIN          [ shift and go to state 56 ]


state 88

    (45) expression -> expression DOTMIN expression .
    (40) expression -> expression . ADD expression
    (41) expression -> expression . MIN expression
    (42) expression -> expression . MUL expression
    (43) expression -> expression . DIV expression
    (44) expression -> expression . DOTADD expression
    (45) expression -> expression . DOTMIN expression
    (46) expression -> expression . DOTMUL expression
    (47) expression -> expression . DOTDIV expression

    ADD             reduce using rule 45 (expression -> expression DOTMIN expression .)
    MIN             reduce using rule 45 (expression -> expression DOTMIN expression .)
    DOTADD          reduce using rule 45 (expression -> expression DOTMIN expression .)
    DOTMIN          reduce using rule 45 (expression -> expression DOTMIN expression .)
    ;               reduce using rule 45 (expression -> expression DOTMIN expression .)
    LT              reduce using rule 45 (expression -> expression DOTMIN expression .)
    GT              reduce using rule 45 (expression -> expression DOTMIN expression .)
    LTE             reduce using rule 45 (expression -> expression DOTMIN expression .)
    GTE             reduce using rule 45 (expression -> expression DOTMIN expression .)
    NE              reduce using rule 45 (expression -> expression DOTMIN expression .)
    EQ              reduce using rule 45 (expression -> expression DOTMIN expression .)
    ,               reduce using rule 45 (expression -> expression DOTMIN expression .)
    ]               reduce using rule 45 (expression -> expression DOTMIN expression .)
    )               reduce using rule 45 (expression -> expression DOTMIN expression .)
    :               reduce using rule 45 (expression -> expression DOTMIN expression .)
    {               reduce using rule 45 (expression -> expression DOTMIN expression .)
    IF              reduce using rule 45 (expression -> expression DOTMIN expression .)
    FOR             reduce using rule 45 (expression -> expression DOTMIN expression .)
    WHILE           reduce using rule 45 (expression -> expression DOTMIN expression .)
    BREAK           reduce using rule 45 (expression -> expression DOTMIN expression .)
    CONTINUE        reduce using rule 45 (expression -> expression DOTMIN expression .)
    RETURN          reduce using rule 45 (expression -> expression DOTMIN expression .)
    PRINT           reduce using rule 45 (expression -> expression DOTMIN expression .)
    STR             reduce using rule 45 (expression -> expression DOTMIN expression .)
    ID              reduce using rule 45 (expression -> expression DOTMIN expression .)
    [               reduce using rule 45 (expression -> expression DOTMIN expression .)
    INT             reduce using rule 45 (expression -> expression DOTMIN expression .)
    FLOAT           reduce using rule 45 (expression -> expression DOTMIN expression .)
    EYE             reduce using rule 45 (expression -> expression DOTMIN expression .)
    ZEROS           reduce using rule 45 (expression -> expression DOTMIN expression .)
    ONES            reduce using rule 45 (expression -> expression DOTMIN expression .)
    MUL             shift and go to state 53
    DIV             shift and go to state 54
    DOTMUL          shift and go to state 57
    DOTDIV          shift and go to state 58

  ! MUL             [ reduce using rule 45 (expression -> expression DOTMIN expression .) ]
  ! DIV             [ reduce using rule 45 (expression -> expression DOTMIN expression .) ]
  ! DOTMUL          [ reduce using rule 45 (expression -> expression DOTMIN expression .) ]
  ! DOTDIV          [ reduce using rule 45 (expression -> expression DOTMIN expression .) ]
  ! ADD             [ shift and go to state 51 ]
  ! MIN             [ shift and go to state 52 ]
  ! DOTADD          [ shift and go to state 55 ]
  ! DOTMIN          [ shift and go to state 56 ]


state 89

    (46) expression -> expression DOTMUL expression .
    (40) expression -> expression . ADD expression
    (41) expression -> expression . MIN expression
    (42) expression -> expression . MUL expression
    (43) expression -> expression . DIV expression
    (44) expression -> expression . DOTADD expression
    (45) expression -> expression . DOTMIN expression
    (46) expression -> expression . DOTMUL expression
    (47) expression -> expression . DOTDIV expression

    ADD             reduce using rule 46 (expression -> expression DOTMUL expression .)
    MIN             reduce using rule 46 (expression -> expression DOTMUL expression .)
    MUL             reduce using rule 46 (expression -> expression DOTMUL expression .)
    DIV             reduce using rule 46 (expression -> expression DOTMUL expression .)
    DOTADD          reduce using rule 46 (expression -> expression DOTMUL expression .)
    DOTMIN          reduce using rule 46 (expression -> expression DOTMUL expression .)
    DOTMUL          reduce using rule 46 (expression -> expression DOTMUL expression .)
    DOTDIV          reduce using rule 46 (expression -> expression DOTMUL expression .)
    ;               reduce using rule 46 (expression -> expression DOTMUL expression .)
    LT              reduce using rule 46 (expression -> expression DOTMUL expression .)
    GT              reduce using rule 46 (expression -> expression DOTMUL expression .)
    LTE             reduce using rule 46 (expression -> expression DOTMUL expression .)
    GTE             reduce using rule 46 (expression -> expression DOTMUL expression .)
    NE              reduce using rule 46 (expression -> expression DOTMUL expression .)
    EQ              reduce using rule 46 (expression -> expression DOTMUL expression .)
    ,               reduce using rule 46 (expression -> expression DOTMUL expression .)
    ]               reduce using rule 46 (expression -> expression DOTMUL expression .)
    )               reduce using rule 46 (expression -> expression DOTMUL expression .)
    :               reduce using rule 46 (expression -> expression DOTMUL expression .)
    {               reduce using rule 46 (expression -> expression DOTMUL expression .)
    IF              reduce using rule 46 (expression -> expression DOTMUL expression .)
    FOR             reduce using rule 46 (expression -> expression DOTMUL expression .)
    WHILE           reduce using rule 46 (expression -> expression DOTMUL expression .)
    BREAK           reduce using rule 46 (expression -> expression DOTMUL expression .)
    CONTINUE        reduce using rule 46 (expression -> expression DOTMUL expression .)
    RETURN          reduce using rule 46 (expression -> expression DOTMUL expression .)
    PRINT           reduce using rule 46 (expression -> expression DOTMUL expression .)
    STR             reduce using rule 46 (expression -> expression DOTMUL expression .)
    ID              reduce using rule 46 (expression -> expression DOTMUL expression .)
    [               reduce using rule 46 (expression -> expression DOTMUL expression .)
    INT             reduce using rule 46 (expression -> expression DOTMUL expression .)
    FLOAT           reduce using rule 46 (expression -> expression DOTMUL expression .)
    EYE             reduce using rule 46 (expression -> expression DOTMUL expression .)
    ZEROS           reduce using rule 46 (expression -> expression DOTMUL expression .)
    ONES            reduce using rule 46 (expression -> expression DOTMUL expression .)

  ! ADD             [ shift and go to state 51 ]
  ! MIN             [ shift and go to state 52 ]
  ! MUL             [ shift and go to state 53 ]
  ! DIV             [ shift and go to state 54 ]
  ! DOTADD          [ shift and go to state 55 ]
  ! DOTMIN          [ shift and go to state 56 ]
  ! DOTMUL          [ shift and go to state 57 ]
  ! DOTDIV          [ shift and go to state 58 ]


state 90

    (47) expression -> expression DOTDIV expression .
    (40) expression -> expression . ADD expression
    (41) expression -> expression . MIN expression
    (42) expression -> expression . MUL expression
    (43) expression -> expression . DIV expression
    (44) expression -> expression . DOTADD expression
    (45) expression -> expression . DOTMIN expression
    (46) expression -> expression . DOTMUL expression
    (47) expression -> expression . DOTDIV expression

    ADD             reduce using rule 47 (expression -> expression DOTDIV expression .)
    MIN             reduce using rule 47 (expression -> expression DOTDIV expression .)
    MUL             reduce using rule 47 (expression -> expression DOTDIV expression .)
    DIV             reduce using rule 47 (expression -> expression DOTDIV expression .)
    DOTADD          reduce using rule 47 (expression -> expression DOTDIV expression .)
    DOTMIN          reduce using rule 47 (expression -> expression DOTDIV expression .)
    DOTMUL          reduce using rule 47 (expression -> expression DOTDIV expression .)
    DOTDIV          reduce using rule 47 (expression -> expression DOTDIV expression .)
    ;               reduce using rule 47 (expression -> expression DOTDIV expression .)
    LT              reduce using rule 47 (expression -> expression DOTDIV expression .)
    GT              reduce using rule 47 (expression -> expression DOTDIV expression .)
    LTE             reduce using rule 47 (expression -> expression DOTDIV expression .)
    GTE             reduce using rule 47 (expression -> expression DOTDIV expression .)
    NE              reduce using rule 47 (expression -> expression DOTDIV expression .)
    EQ              reduce using rule 47 (expression -> expression DOTDIV expression .)
    ,               reduce using rule 47 (expression -> expression DOTDIV expression .)
    ]               reduce using rule 47 (expression -> expression DOTDIV expression .)
    )               reduce using rule 47 (expression -> expression DOTDIV expression .)
    :               reduce using rule 47 (expression -> expression DOTDIV expression .)
    {               reduce using rule 47 (expression -> expression DOTDIV expression .)
    IF              reduce using rule 47 (expression -> expression DOTDIV expression .)
    FOR             reduce using rule 47 (expression -> expression DOTDIV expression .)
    WHILE           reduce using rule 47 (expression -> expression DOTDIV expression .)
    BREAK           reduce using rule 47 (expression -> expression DOTDIV expression .)
    CONTINUE        reduce using rule 47 (expression -> expression DOTDIV expression .)
    RETURN          reduce using rule 47 (expression -> expression DOTDIV expression .)
    PRINT           reduce using rule 47 (expression -> expression DOTDIV expression .)
    STR             reduce using rule 47 (expression -> expression DOTDIV expression .)
    ID              reduce using rule 47 (expression -> expression DOTDIV expression .)
    [               reduce using rule 47 (expression -> expression DOTDIV expression .)
    INT             reduce using rule 47 (expression -> expression DOTDIV expression .)
    FLOAT           reduce using rule 47 (expression -> expression DOTDIV expression .)
    EYE             reduce using rule 47 (expression -> expression DOTDIV expression .)
    ZEROS           reduce using rule 47 (expression -> expression DOTDIV expression .)
    ONES            reduce using rule 47 (expression -> expression DOTDIV expression .)

  ! ADD             [ shift and go to state 51 ]
  ! MIN             [ shift and go to state 52 ]
  ! MUL             [ shift and go to state 53 ]
  ! DIV             [ shift and go to state 54 ]
  ! DOTADD          [ shift and go to state 55 ]
  ! DOTMIN          [ shift and go to state 56 ]
  ! DOTMUL          [ shift and go to state 57 ]
  ! DOTDIV          [ shift and go to state 58 ]


state 91

    (18) while -> WHILE ( condition . ) instruction

    )               shift and go to state 112


state 92

    (34) condition -> expression LT . expression
    (40) expression -> . expression ADD expression
    (41) expression -> . expression MIN expression
    (42) expression -> . expression MUL expression
    (43) expression -> . expression DIV expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTMIN expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . MIN expression
    (49) expression -> . matrix_obj TRANSPOSE
    (50) expression -> . variable TRANSPOSE
    (51) expression -> . STR
    (52) expression -> . matrix_obj
    (53) expression -> . vector
    (54) expression -> . assignable
    (55) expression -> . number
    (56) matrix_obj -> . matrix
    (57) matrix_obj -> . matrix_function
    (71) variable -> . ID
    (62) vector -> . [ parameters ]
    (32) assignable -> . variable
    (33) assignable -> . reference
    (69) number -> . INT
    (70) number -> . FLOAT
    (58) matrix -> . [ rows ; ]
    (63) matrix_function -> . EYE ( parameters )
    (64) matrix_function -> . ZEROS ( parameters )
    (65) matrix_function -> . ONES ( parameters )
    (68) reference -> . variable [ parameters ]

    MIN             shift and go to state 25
    STR             shift and go to state 27
    ID              shift and go to state 33
    [               shift and go to state 34
    INT             shift and go to state 35
    FLOAT           shift and go to state 36
    EYE             shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39

    expression                     shift and go to state 113
    matrix_obj                     shift and go to state 26
    variable                       shift and go to state 16
    vector                         shift and go to state 28
    assignable                     shift and go to state 62
    number                         shift and go to state 29
    matrix                         shift and go to state 31
    matrix_function                shift and go to state 32
    reference                      shift and go to state 30

state 93

    (35) condition -> expression GT . expression
    (40) expression -> . expression ADD expression
    (41) expression -> . expression MIN expression
    (42) expression -> . expression MUL expression
    (43) expression -> . expression DIV expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTMIN expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . MIN expression
    (49) expression -> . matrix_obj TRANSPOSE
    (50) expression -> . variable TRANSPOSE
    (51) expression -> . STR
    (52) expression -> . matrix_obj
    (53) expression -> . vector
    (54) expression -> . assignable
    (55) expression -> . number
    (56) matrix_obj -> . matrix
    (57) matrix_obj -> . matrix_function
    (71) variable -> . ID
    (62) vector -> . [ parameters ]
    (32) assignable -> . variable
    (33) assignable -> . reference
    (69) number -> . INT
    (70) number -> . FLOAT
    (58) matrix -> . [ rows ; ]
    (63) matrix_function -> . EYE ( parameters )
    (64) matrix_function -> . ZEROS ( parameters )
    (65) matrix_function -> . ONES ( parameters )
    (68) reference -> . variable [ parameters ]

    MIN             shift and go to state 25
    STR             shift and go to state 27
    ID              shift and go to state 33
    [               shift and go to state 34
    INT             shift and go to state 35
    FLOAT           shift and go to state 36
    EYE             shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39

    expression                     shift and go to state 114
    matrix_obj                     shift and go to state 26
    variable                       shift and go to state 16
    vector                         shift and go to state 28
    assignable                     shift and go to state 62
    number                         shift and go to state 29
    matrix                         shift and go to state 31
    matrix_function                shift and go to state 32
    reference                      shift and go to state 30

state 94

    (36) condition -> expression LTE . expression
    (40) expression -> . expression ADD expression
    (41) expression -> . expression MIN expression
    (42) expression -> . expression MUL expression
    (43) expression -> . expression DIV expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTMIN expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . MIN expression
    (49) expression -> . matrix_obj TRANSPOSE
    (50) expression -> . variable TRANSPOSE
    (51) expression -> . STR
    (52) expression -> . matrix_obj
    (53) expression -> . vector
    (54) expression -> . assignable
    (55) expression -> . number
    (56) matrix_obj -> . matrix
    (57) matrix_obj -> . matrix_function
    (71) variable -> . ID
    (62) vector -> . [ parameters ]
    (32) assignable -> . variable
    (33) assignable -> . reference
    (69) number -> . INT
    (70) number -> . FLOAT
    (58) matrix -> . [ rows ; ]
    (63) matrix_function -> . EYE ( parameters )
    (64) matrix_function -> . ZEROS ( parameters )
    (65) matrix_function -> . ONES ( parameters )
    (68) reference -> . variable [ parameters ]

    MIN             shift and go to state 25
    STR             shift and go to state 27
    ID              shift and go to state 33
    [               shift and go to state 34
    INT             shift and go to state 35
    FLOAT           shift and go to state 36
    EYE             shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39

    expression                     shift and go to state 115
    matrix_obj                     shift and go to state 26
    variable                       shift and go to state 16
    vector                         shift and go to state 28
    assignable                     shift and go to state 62
    number                         shift and go to state 29
    matrix                         shift and go to state 31
    matrix_function                shift and go to state 32
    reference                      shift and go to state 30

state 95

    (37) condition -> expression GTE . expression
    (40) expression -> . expression ADD expression
    (41) expression -> . expression MIN expression
    (42) expression -> . expression MUL expression
    (43) expression -> . expression DIV expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTMIN expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . MIN expression
    (49) expression -> . matrix_obj TRANSPOSE
    (50) expression -> . variable TRANSPOSE
    (51) expression -> . STR
    (52) expression -> . matrix_obj
    (53) expression -> . vector
    (54) expression -> . assignable
    (55) expression -> . number
    (56) matrix_obj -> . matrix
    (57) matrix_obj -> . matrix_function
    (71) variable -> . ID
    (62) vector -> . [ parameters ]
    (32) assignable -> . variable
    (33) assignable -> . reference
    (69) number -> . INT
    (70) number -> . FLOAT
    (58) matrix -> . [ rows ; ]
    (63) matrix_function -> . EYE ( parameters )
    (64) matrix_function -> . ZEROS ( parameters )
    (65) matrix_function -> . ONES ( parameters )
    (68) reference -> . variable [ parameters ]

    MIN             shift and go to state 25
    STR             shift and go to state 27
    ID              shift and go to state 33
    [               shift and go to state 34
    INT             shift and go to state 35
    FLOAT           shift and go to state 36
    EYE             shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39

    expression                     shift and go to state 116
    matrix_obj                     shift and go to state 26
    variable                       shift and go to state 16
    vector                         shift and go to state 28
    assignable                     shift and go to state 62
    number                         shift and go to state 29
    matrix                         shift and go to state 31
    matrix_function                shift and go to state 32
    reference                      shift and go to state 30

state 96

    (38) condition -> expression NE . expression
    (40) expression -> . expression ADD expression
    (41) expression -> . expression MIN expression
    (42) expression -> . expression MUL expression
    (43) expression -> . expression DIV expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTMIN expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . MIN expression
    (49) expression -> . matrix_obj TRANSPOSE
    (50) expression -> . variable TRANSPOSE
    (51) expression -> . STR
    (52) expression -> . matrix_obj
    (53) expression -> . vector
    (54) expression -> . assignable
    (55) expression -> . number
    (56) matrix_obj -> . matrix
    (57) matrix_obj -> . matrix_function
    (71) variable -> . ID
    (62) vector -> . [ parameters ]
    (32) assignable -> . variable
    (33) assignable -> . reference
    (69) number -> . INT
    (70) number -> . FLOAT
    (58) matrix -> . [ rows ; ]
    (63) matrix_function -> . EYE ( parameters )
    (64) matrix_function -> . ZEROS ( parameters )
    (65) matrix_function -> . ONES ( parameters )
    (68) reference -> . variable [ parameters ]

    MIN             shift and go to state 25
    STR             shift and go to state 27
    ID              shift and go to state 33
    [               shift and go to state 34
    INT             shift and go to state 35
    FLOAT           shift and go to state 36
    EYE             shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39

    expression                     shift and go to state 117
    matrix_obj                     shift and go to state 26
    variable                       shift and go to state 16
    vector                         shift and go to state 28
    assignable                     shift and go to state 62
    number                         shift and go to state 29
    matrix                         shift and go to state 31
    matrix_function                shift and go to state 32
    reference                      shift and go to state 30

state 97

    (39) condition -> expression EQ . expression
    (40) expression -> . expression ADD expression
    (41) expression -> . expression MIN expression
    (42) expression -> . expression MUL expression
    (43) expression -> . expression DIV expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTMIN expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . MIN expression
    (49) expression -> . matrix_obj TRANSPOSE
    (50) expression -> . variable TRANSPOSE
    (51) expression -> . STR
    (52) expression -> . matrix_obj
    (53) expression -> . vector
    (54) expression -> . assignable
    (55) expression -> . number
    (56) matrix_obj -> . matrix
    (57) matrix_obj -> . matrix_function
    (71) variable -> . ID
    (62) vector -> . [ parameters ]
    (32) assignable -> . variable
    (33) assignable -> . reference
    (69) number -> . INT
    (70) number -> . FLOAT
    (58) matrix -> . [ rows ; ]
    (63) matrix_function -> . EYE ( parameters )
    (64) matrix_function -> . ZEROS ( parameters )
    (65) matrix_function -> . ONES ( parameters )
    (68) reference -> . variable [ parameters ]

    MIN             shift and go to state 25
    STR             shift and go to state 27
    ID              shift and go to state 33
    [               shift and go to state 34
    INT             shift and go to state 35
    FLOAT           shift and go to state 36
    EYE             shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39

    expression                     shift and go to state 118
    matrix_obj                     shift and go to state 26
    variable                       shift and go to state 16
    vector                         shift and go to state 28
    assignable                     shift and go to state 62
    number                         shift and go to state 29
    matrix                         shift and go to state 31
    matrix_function                shift and go to state 32
    reference                      shift and go to state 30

state 98

    (66) parameters -> parameters , . expression
    (40) expression -> . expression ADD expression
    (41) expression -> . expression MIN expression
    (42) expression -> . expression MUL expression
    (43) expression -> . expression DIV expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTMIN expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . MIN expression
    (49) expression -> . matrix_obj TRANSPOSE
    (50) expression -> . variable TRANSPOSE
    (51) expression -> . STR
    (52) expression -> . matrix_obj
    (53) expression -> . vector
    (54) expression -> . assignable
    (55) expression -> . number
    (56) matrix_obj -> . matrix
    (57) matrix_obj -> . matrix_function
    (71) variable -> . ID
    (62) vector -> . [ parameters ]
    (32) assignable -> . variable
    (33) assignable -> . reference
    (69) number -> . INT
    (70) number -> . FLOAT
    (58) matrix -> . [ rows ; ]
    (63) matrix_function -> . EYE ( parameters )
    (64) matrix_function -> . ZEROS ( parameters )
    (65) matrix_function -> . ONES ( parameters )
    (68) reference -> . variable [ parameters ]

    MIN             shift and go to state 25
    STR             shift and go to state 27
    ID              shift and go to state 33
    [               shift and go to state 34
    INT             shift and go to state 35
    FLOAT           shift and go to state 36
    EYE             shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39

    expression                     shift and go to state 119
    matrix_obj                     shift and go to state 26
    variable                       shift and go to state 16
    vector                         shift and go to state 28
    assignable                     shift and go to state 62
    number                         shift and go to state 29
    matrix                         shift and go to state 31
    matrix_function                shift and go to state 32
    reference                      shift and go to state 30

state 99

    (27) assign -> assignable ASSIGN expression .
    (40) expression -> expression . ADD expression
    (41) expression -> expression . MIN expression
    (42) expression -> expression . MUL expression
    (43) expression -> expression . DIV expression
    (44) expression -> expression . DOTADD expression
    (45) expression -> expression . DOTMIN expression
    (46) expression -> expression . DOTMUL expression
    (47) expression -> expression . DOTDIV expression

    ;               reduce using rule 27 (assign -> assignable ASSIGN expression .)
    ADD             shift and go to state 51
    MIN             shift and go to state 52
    MUL             shift and go to state 53
    DIV             shift and go to state 54
    DOTADD          shift and go to state 55
    DOTMIN          shift and go to state 56
    DOTMUL          shift and go to state 57
    DOTDIV          shift and go to state 58


state 100

    (28) assign -> assignable ADDASSIGN expression .
    (40) expression -> expression . ADD expression
    (41) expression -> expression . MIN expression
    (42) expression -> expression . MUL expression
    (43) expression -> expression . DIV expression
    (44) expression -> expression . DOTADD expression
    (45) expression -> expression . DOTMIN expression
    (46) expression -> expression . DOTMUL expression
    (47) expression -> expression . DOTDIV expression

    ;               reduce using rule 28 (assign -> assignable ADDASSIGN expression .)
    ADD             shift and go to state 51
    MIN             shift and go to state 52
    MUL             shift and go to state 53
    DIV             shift and go to state 54
    DOTADD          shift and go to state 55
    DOTMIN          shift and go to state 56
    DOTMUL          shift and go to state 57
    DOTDIV          shift and go to state 58


state 101

    (29) assign -> assignable MINASSIGN expression .
    (40) expression -> expression . ADD expression
    (41) expression -> expression . MIN expression
    (42) expression -> expression . MUL expression
    (43) expression -> expression . DIV expression
    (44) expression -> expression . DOTADD expression
    (45) expression -> expression . DOTMIN expression
    (46) expression -> expression . DOTMUL expression
    (47) expression -> expression . DOTDIV expression

    ;               reduce using rule 29 (assign -> assignable MINASSIGN expression .)
    ADD             shift and go to state 51
    MIN             shift and go to state 52
    MUL             shift and go to state 53
    DIV             shift and go to state 54
    DOTADD          shift and go to state 55
    DOTMIN          shift and go to state 56
    DOTMUL          shift and go to state 57
    DOTDIV          shift and go to state 58


state 102

    (30) assign -> assignable MULASSIGN expression .
    (40) expression -> expression . ADD expression
    (41) expression -> expression . MIN expression
    (42) expression -> expression . MUL expression
    (43) expression -> expression . DIV expression
    (44) expression -> expression . DOTADD expression
    (45) expression -> expression . DOTMIN expression
    (46) expression -> expression . DOTMUL expression
    (47) expression -> expression . DOTDIV expression

    ;               reduce using rule 30 (assign -> assignable MULASSIGN expression .)
    ADD             shift and go to state 51
    MIN             shift and go to state 52
    MUL             shift and go to state 53
    DIV             shift and go to state 54
    DOTADD          shift and go to state 55
    DOTMIN          shift and go to state 56
    DOTMUL          shift and go to state 57
    DOTDIV          shift and go to state 58


state 103

    (31) assign -> assignable DIVASSIGN expression .
    (40) expression -> expression . ADD expression
    (41) expression -> expression . MIN expression
    (42) expression -> expression . MUL expression
    (43) expression -> expression . DIV expression
    (44) expression -> expression . DOTADD expression
    (45) expression -> expression . DOTMIN expression
    (46) expression -> expression . DOTMUL expression
    (47) expression -> expression . DOTDIV expression

    ;               reduce using rule 31 (assign -> assignable DIVASSIGN expression .)
    ADD             shift and go to state 51
    MIN             shift and go to state 52
    MUL             shift and go to state 53
    DIV             shift and go to state 54
    DOTADD          shift and go to state 55
    DOTMIN          shift and go to state 56
    DOTMUL          shift and go to state 57
    DOTDIV          shift and go to state 58


state 104

    (62) vector -> [ parameters ] .

    ADD             reduce using rule 62 (vector -> [ parameters ] .)
    MIN             reduce using rule 62 (vector -> [ parameters ] .)
    MUL             reduce using rule 62 (vector -> [ parameters ] .)
    DIV             reduce using rule 62 (vector -> [ parameters ] .)
    DOTADD          reduce using rule 62 (vector -> [ parameters ] .)
    DOTMIN          reduce using rule 62 (vector -> [ parameters ] .)
    DOTMUL          reduce using rule 62 (vector -> [ parameters ] .)
    DOTDIV          reduce using rule 62 (vector -> [ parameters ] .)
    ;               reduce using rule 62 (vector -> [ parameters ] .)
    LT              reduce using rule 62 (vector -> [ parameters ] .)
    GT              reduce using rule 62 (vector -> [ parameters ] .)
    LTE             reduce using rule 62 (vector -> [ parameters ] .)
    GTE             reduce using rule 62 (vector -> [ parameters ] .)
    NE              reduce using rule 62 (vector -> [ parameters ] .)
    EQ              reduce using rule 62 (vector -> [ parameters ] .)
    ,               reduce using rule 62 (vector -> [ parameters ] .)
    ]               reduce using rule 62 (vector -> [ parameters ] .)
    )               reduce using rule 62 (vector -> [ parameters ] .)
    :               reduce using rule 62 (vector -> [ parameters ] .)
    {               reduce using rule 62 (vector -> [ parameters ] .)
    IF              reduce using rule 62 (vector -> [ parameters ] .)
    FOR             reduce using rule 62 (vector -> [ parameters ] .)
    WHILE           reduce using rule 62 (vector -> [ parameters ] .)
    BREAK           reduce using rule 62 (vector -> [ parameters ] .)
    CONTINUE        reduce using rule 62 (vector -> [ parameters ] .)
    RETURN          reduce using rule 62 (vector -> [ parameters ] .)
    PRINT           reduce using rule 62 (vector -> [ parameters ] .)
    STR             reduce using rule 62 (vector -> [ parameters ] .)
    ID              reduce using rule 62 (vector -> [ parameters ] .)
    [               reduce using rule 62 (vector -> [ parameters ] .)
    INT             reduce using rule 62 (vector -> [ parameters ] .)
    FLOAT           reduce using rule 62 (vector -> [ parameters ] .)
    EYE             reduce using rule 62 (vector -> [ parameters ] .)
    ZEROS           reduce using rule 62 (vector -> [ parameters ] .)
    ONES            reduce using rule 62 (vector -> [ parameters ] .)


state 105

    (58) matrix -> [ rows ; . ]
    (59) rows -> rows ; . row
    (61) row -> . parameters
    (66) parameters -> . parameters , expression
    (67) parameters -> . expression
    (40) expression -> . expression ADD expression
    (41) expression -> . expression MIN expression
    (42) expression -> . expression MUL expression
    (43) expression -> . expression DIV expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTMIN expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . MIN expression
    (49) expression -> . matrix_obj TRANSPOSE
    (50) expression -> . variable TRANSPOSE
    (51) expression -> . STR
    (52) expression -> . matrix_obj
    (53) expression -> . vector
    (54) expression -> . assignable
    (55) expression -> . number
    (56) matrix_obj -> . matrix
    (57) matrix_obj -> . matrix_function
    (71) variable -> . ID
    (62) vector -> . [ parameters ]
    (32) assignable -> . variable
    (33) assignable -> . reference
    (69) number -> . INT
    (70) number -> . FLOAT
    (58) matrix -> . [ rows ; ]
    (63) matrix_function -> . EYE ( parameters )
    (64) matrix_function -> . ZEROS ( parameters )
    (65) matrix_function -> . ONES ( parameters )
    (68) reference -> . variable [ parameters ]

    ]               shift and go to state 120
    MIN             shift and go to state 25
    STR             shift and go to state 27
    ID              shift and go to state 33
    [               shift and go to state 34
    INT             shift and go to state 35
    FLOAT           shift and go to state 36
    EYE             shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39

    row                            shift and go to state 121
    parameters                     shift and go to state 122
    expression                     shift and go to state 64
    matrix_obj                     shift and go to state 26
    variable                       shift and go to state 16
    vector                         shift and go to state 28
    assignable                     shift and go to state 62
    number                         shift and go to state 29
    matrix                         shift and go to state 31
    matrix_function                shift and go to state 32
    reference                      shift and go to state 30

state 106

    (63) matrix_function -> EYE ( parameters . )
    (66) parameters -> parameters . , expression

    )               shift and go to state 123
    ,               shift and go to state 98


state 107

    (64) matrix_function -> ZEROS ( parameters . )
    (66) parameters -> parameters . , expression

    )               shift and go to state 124
    ,               shift and go to state 98


state 108

    (65) matrix_function -> ONES ( parameters . )
    (66) parameters -> parameters . , expression

    )               shift and go to state 125
    ,               shift and go to state 98


state 109

    (15) if -> IF ( condition ) . instruction
    (16) if -> IF ( condition ) . instruction ELSE instruction
    (5) instruction -> . block
    (6) instruction -> . if
    (7) instruction -> . for
    (8) instruction -> . while
    (9) instruction -> . break ;
    (10) instruction -> . continue ;
    (11) instruction -> . return ;
    (12) instruction -> . print ;
    (13) instruction -> . statement ;
    (14) block -> . { instructions }
    (15) if -> . IF ( condition ) instruction
    (16) if -> . IF ( condition ) instruction ELSE instruction
    (17) for -> . FOR variable ASSIGN expression : expression instruction
    (18) while -> . WHILE ( condition ) instruction
    (19) break -> . BREAK
    (20) continue -> . CONTINUE
    (21) return -> . RETURN
    (22) return -> . RETURN expression
    (23) return -> . RETURN condition
    (24) print -> . PRINT parameters
    (25) statement -> . assign
    (26) statement -> . expression
    (27) assign -> . assignable ASSIGN expression
    (28) assign -> . assignable ADDASSIGN expression
    (29) assign -> . assignable MINASSIGN expression
    (30) assign -> . assignable MULASSIGN expression
    (31) assign -> . assignable DIVASSIGN expression
    (40) expression -> . expression ADD expression
    (41) expression -> . expression MIN expression
    (42) expression -> . expression MUL expression
    (43) expression -> . expression DIV expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTMIN expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . MIN expression
    (49) expression -> . matrix_obj TRANSPOSE
    (50) expression -> . variable TRANSPOSE
    (51) expression -> . STR
    (52) expression -> . matrix_obj
    (53) expression -> . vector
    (54) expression -> . assignable
    (55) expression -> . number
    (32) assignable -> . variable
    (33) assignable -> . reference
    (56) matrix_obj -> . matrix
    (57) matrix_obj -> . matrix_function
    (71) variable -> . ID
    (62) vector -> . [ parameters ]
    (69) number -> . INT
    (70) number -> . FLOAT
    (68) reference -> . variable [ parameters ]
    (58) matrix -> . [ rows ; ]
    (63) matrix_function -> . EYE ( parameters )
    (64) matrix_function -> . ZEROS ( parameters )
    (65) matrix_function -> . ONES ( parameters )

    {               shift and go to state 13
    IF              shift and go to state 14
    FOR             shift and go to state 15
    WHILE           shift and go to state 18
    BREAK           shift and go to state 19
    CONTINUE        shift and go to state 20
    RETURN          shift and go to state 21
    PRINT           shift and go to state 22
    MIN             shift and go to state 25
    STR             shift and go to state 27
    ID              shift and go to state 33
    [               shift and go to state 34
    INT             shift and go to state 35
    FLOAT           shift and go to state 36
    EYE             shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39

    instruction                    shift and go to state 126
    block                          shift and go to state 4
    if                             shift and go to state 5
    for                            shift and go to state 6
    while                          shift and go to state 7
    break                          shift and go to state 8
    continue                       shift and go to state 9
    return                         shift and go to state 10
    print                          shift and go to state 11
    statement                      shift and go to state 12
    variable                       shift and go to state 16
    expression                     shift and go to state 17
    assign                         shift and go to state 23
    assignable                     shift and go to state 24
    matrix_obj                     shift and go to state 26
    vector                         shift and go to state 28
    number                         shift and go to state 29
    reference                      shift and go to state 30
    matrix                         shift and go to state 31
    matrix_function                shift and go to state 32

state 110

    (17) for -> FOR variable ASSIGN expression . : expression instruction
    (40) expression -> expression . ADD expression
    (41) expression -> expression . MIN expression
    (42) expression -> expression . MUL expression
    (43) expression -> expression . DIV expression
    (44) expression -> expression . DOTADD expression
    (45) expression -> expression . DOTMIN expression
    (46) expression -> expression . DOTMUL expression
    (47) expression -> expression . DOTDIV expression

    :               shift and go to state 127
    ADD             shift and go to state 51
    MIN             shift and go to state 52
    MUL             shift and go to state 53
    DIV             shift and go to state 54
    DOTADD          shift and go to state 55
    DOTMIN          shift and go to state 56
    DOTMUL          shift and go to state 57
    DOTDIV          shift and go to state 58


state 111

    (68) reference -> variable [ parameters ] .

    ASSIGN          reduce using rule 68 (reference -> variable [ parameters ] .)
    ADDASSIGN       reduce using rule 68 (reference -> variable [ parameters ] .)
    MINASSIGN       reduce using rule 68 (reference -> variable [ parameters ] .)
    MULASSIGN       reduce using rule 68 (reference -> variable [ parameters ] .)
    DIVASSIGN       reduce using rule 68 (reference -> variable [ parameters ] .)
    ADD             reduce using rule 68 (reference -> variable [ parameters ] .)
    MIN             reduce using rule 68 (reference -> variable [ parameters ] .)
    MUL             reduce using rule 68 (reference -> variable [ parameters ] .)
    DIV             reduce using rule 68 (reference -> variable [ parameters ] .)
    DOTADD          reduce using rule 68 (reference -> variable [ parameters ] .)
    DOTMIN          reduce using rule 68 (reference -> variable [ parameters ] .)
    DOTMUL          reduce using rule 68 (reference -> variable [ parameters ] .)
    DOTDIV          reduce using rule 68 (reference -> variable [ parameters ] .)
    ;               reduce using rule 68 (reference -> variable [ parameters ] .)
    LT              reduce using rule 68 (reference -> variable [ parameters ] .)
    GT              reduce using rule 68 (reference -> variable [ parameters ] .)
    LTE             reduce using rule 68 (reference -> variable [ parameters ] .)
    GTE             reduce using rule 68 (reference -> variable [ parameters ] .)
    NE              reduce using rule 68 (reference -> variable [ parameters ] .)
    EQ              reduce using rule 68 (reference -> variable [ parameters ] .)
    ,               reduce using rule 68 (reference -> variable [ parameters ] .)
    ]               reduce using rule 68 (reference -> variable [ parameters ] .)
    )               reduce using rule 68 (reference -> variable [ parameters ] .)
    :               reduce using rule 68 (reference -> variable [ parameters ] .)
    {               reduce using rule 68 (reference -> variable [ parameters ] .)
    IF              reduce using rule 68 (reference -> variable [ parameters ] .)
    FOR             reduce using rule 68 (reference -> variable [ parameters ] .)
    WHILE           reduce using rule 68 (reference -> variable [ parameters ] .)
    BREAK           reduce using rule 68 (reference -> variable [ parameters ] .)
    CONTINUE        reduce using rule 68 (reference -> variable [ parameters ] .)
    RETURN          reduce using rule 68 (reference -> variable [ parameters ] .)
    PRINT           reduce using rule 68 (reference -> variable [ parameters ] .)
    STR             reduce using rule 68 (reference -> variable [ parameters ] .)
    ID              reduce using rule 68 (reference -> variable [ parameters ] .)
    [               reduce using rule 68 (reference -> variable [ parameters ] .)
    INT             reduce using rule 68 (reference -> variable [ parameters ] .)
    FLOAT           reduce using rule 68 (reference -> variable [ parameters ] .)
    EYE             reduce using rule 68 (reference -> variable [ parameters ] .)
    ZEROS           reduce using rule 68 (reference -> variable [ parameters ] .)
    ONES            reduce using rule 68 (reference -> variable [ parameters ] .)


state 112

    (18) while -> WHILE ( condition ) . instruction
    (5) instruction -> . block
    (6) instruction -> . if
    (7) instruction -> . for
    (8) instruction -> . while
    (9) instruction -> . break ;
    (10) instruction -> . continue ;
    (11) instruction -> . return ;
    (12) instruction -> . print ;
    (13) instruction -> . statement ;
    (14) block -> . { instructions }
    (15) if -> . IF ( condition ) instruction
    (16) if -> . IF ( condition ) instruction ELSE instruction
    (17) for -> . FOR variable ASSIGN expression : expression instruction
    (18) while -> . WHILE ( condition ) instruction
    (19) break -> . BREAK
    (20) continue -> . CONTINUE
    (21) return -> . RETURN
    (22) return -> . RETURN expression
    (23) return -> . RETURN condition
    (24) print -> . PRINT parameters
    (25) statement -> . assign
    (26) statement -> . expression
    (27) assign -> . assignable ASSIGN expression
    (28) assign -> . assignable ADDASSIGN expression
    (29) assign -> . assignable MINASSIGN expression
    (30) assign -> . assignable MULASSIGN expression
    (31) assign -> . assignable DIVASSIGN expression
    (40) expression -> . expression ADD expression
    (41) expression -> . expression MIN expression
    (42) expression -> . expression MUL expression
    (43) expression -> . expression DIV expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTMIN expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . MIN expression
    (49) expression -> . matrix_obj TRANSPOSE
    (50) expression -> . variable TRANSPOSE
    (51) expression -> . STR
    (52) expression -> . matrix_obj
    (53) expression -> . vector
    (54) expression -> . assignable
    (55) expression -> . number
    (32) assignable -> . variable
    (33) assignable -> . reference
    (56) matrix_obj -> . matrix
    (57) matrix_obj -> . matrix_function
    (71) variable -> . ID
    (62) vector -> . [ parameters ]
    (69) number -> . INT
    (70) number -> . FLOAT
    (68) reference -> . variable [ parameters ]
    (58) matrix -> . [ rows ; ]
    (63) matrix_function -> . EYE ( parameters )
    (64) matrix_function -> . ZEROS ( parameters )
    (65) matrix_function -> . ONES ( parameters )

    {               shift and go to state 13
    IF              shift and go to state 14
    FOR             shift and go to state 15
    WHILE           shift and go to state 18
    BREAK           shift and go to state 19
    CONTINUE        shift and go to state 20
    RETURN          shift and go to state 21
    PRINT           shift and go to state 22
    MIN             shift and go to state 25
    STR             shift and go to state 27
    ID              shift and go to state 33
    [               shift and go to state 34
    INT             shift and go to state 35
    FLOAT           shift and go to state 36
    EYE             shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39

    instruction                    shift and go to state 128
    block                          shift and go to state 4
    if                             shift and go to state 5
    for                            shift and go to state 6
    while                          shift and go to state 7
    break                          shift and go to state 8
    continue                       shift and go to state 9
    return                         shift and go to state 10
    print                          shift and go to state 11
    statement                      shift and go to state 12
    variable                       shift and go to state 16
    expression                     shift and go to state 17
    assign                         shift and go to state 23
    assignable                     shift and go to state 24
    matrix_obj                     shift and go to state 26
    vector                         shift and go to state 28
    number                         shift and go to state 29
    reference                      shift and go to state 30
    matrix                         shift and go to state 31
    matrix_function                shift and go to state 32

state 113

    (34) condition -> expression LT expression .
    (40) expression -> expression . ADD expression
    (41) expression -> expression . MIN expression
    (42) expression -> expression . MUL expression
    (43) expression -> expression . DIV expression
    (44) expression -> expression . DOTADD expression
    (45) expression -> expression . DOTMIN expression
    (46) expression -> expression . DOTMUL expression
    (47) expression -> expression . DOTDIV expression

    ;               reduce using rule 34 (condition -> expression LT expression .)
    )               reduce using rule 34 (condition -> expression LT expression .)
    ADD             shift and go to state 51
    MIN             shift and go to state 52
    MUL             shift and go to state 53
    DIV             shift and go to state 54
    DOTADD          shift and go to state 55
    DOTMIN          shift and go to state 56
    DOTMUL          shift and go to state 57
    DOTDIV          shift and go to state 58


state 114

    (35) condition -> expression GT expression .
    (40) expression -> expression . ADD expression
    (41) expression -> expression . MIN expression
    (42) expression -> expression . MUL expression
    (43) expression -> expression . DIV expression
    (44) expression -> expression . DOTADD expression
    (45) expression -> expression . DOTMIN expression
    (46) expression -> expression . DOTMUL expression
    (47) expression -> expression . DOTDIV expression

    ;               reduce using rule 35 (condition -> expression GT expression .)
    )               reduce using rule 35 (condition -> expression GT expression .)
    ADD             shift and go to state 51
    MIN             shift and go to state 52
    MUL             shift and go to state 53
    DIV             shift and go to state 54
    DOTADD          shift and go to state 55
    DOTMIN          shift and go to state 56
    DOTMUL          shift and go to state 57
    DOTDIV          shift and go to state 58


state 115

    (36) condition -> expression LTE expression .
    (40) expression -> expression . ADD expression
    (41) expression -> expression . MIN expression
    (42) expression -> expression . MUL expression
    (43) expression -> expression . DIV expression
    (44) expression -> expression . DOTADD expression
    (45) expression -> expression . DOTMIN expression
    (46) expression -> expression . DOTMUL expression
    (47) expression -> expression . DOTDIV expression

    ;               reduce using rule 36 (condition -> expression LTE expression .)
    )               reduce using rule 36 (condition -> expression LTE expression .)
    ADD             shift and go to state 51
    MIN             shift and go to state 52
    MUL             shift and go to state 53
    DIV             shift and go to state 54
    DOTADD          shift and go to state 55
    DOTMIN          shift and go to state 56
    DOTMUL          shift and go to state 57
    DOTDIV          shift and go to state 58


state 116

    (37) condition -> expression GTE expression .
    (40) expression -> expression . ADD expression
    (41) expression -> expression . MIN expression
    (42) expression -> expression . MUL expression
    (43) expression -> expression . DIV expression
    (44) expression -> expression . DOTADD expression
    (45) expression -> expression . DOTMIN expression
    (46) expression -> expression . DOTMUL expression
    (47) expression -> expression . DOTDIV expression

    ;               reduce using rule 37 (condition -> expression GTE expression .)
    )               reduce using rule 37 (condition -> expression GTE expression .)
    ADD             shift and go to state 51
    MIN             shift and go to state 52
    MUL             shift and go to state 53
    DIV             shift and go to state 54
    DOTADD          shift and go to state 55
    DOTMIN          shift and go to state 56
    DOTMUL          shift and go to state 57
    DOTDIV          shift and go to state 58


state 117

    (38) condition -> expression NE expression .
    (40) expression -> expression . ADD expression
    (41) expression -> expression . MIN expression
    (42) expression -> expression . MUL expression
    (43) expression -> expression . DIV expression
    (44) expression -> expression . DOTADD expression
    (45) expression -> expression . DOTMIN expression
    (46) expression -> expression . DOTMUL expression
    (47) expression -> expression . DOTDIV expression

    ;               reduce using rule 38 (condition -> expression NE expression .)
    )               reduce using rule 38 (condition -> expression NE expression .)
    ADD             shift and go to state 51
    MIN             shift and go to state 52
    MUL             shift and go to state 53
    DIV             shift and go to state 54
    DOTADD          shift and go to state 55
    DOTMIN          shift and go to state 56
    DOTMUL          shift and go to state 57
    DOTDIV          shift and go to state 58


state 118

    (39) condition -> expression EQ expression .
    (40) expression -> expression . ADD expression
    (41) expression -> expression . MIN expression
    (42) expression -> expression . MUL expression
    (43) expression -> expression . DIV expression
    (44) expression -> expression . DOTADD expression
    (45) expression -> expression . DOTMIN expression
    (46) expression -> expression . DOTMUL expression
    (47) expression -> expression . DOTDIV expression

    ;               reduce using rule 39 (condition -> expression EQ expression .)
    )               reduce using rule 39 (condition -> expression EQ expression .)
    ADD             shift and go to state 51
    MIN             shift and go to state 52
    MUL             shift and go to state 53
    DIV             shift and go to state 54
    DOTADD          shift and go to state 55
    DOTMIN          shift and go to state 56
    DOTMUL          shift and go to state 57
    DOTDIV          shift and go to state 58


state 119

    (66) parameters -> parameters , expression .
    (40) expression -> expression . ADD expression
    (41) expression -> expression . MIN expression
    (42) expression -> expression . MUL expression
    (43) expression -> expression . DIV expression
    (44) expression -> expression . DOTADD expression
    (45) expression -> expression . DOTMIN expression
    (46) expression -> expression . DOTMUL expression
    (47) expression -> expression . DOTDIV expression

    ,               reduce using rule 66 (parameters -> parameters , expression .)
    ;               reduce using rule 66 (parameters -> parameters , expression .)
    ]               reduce using rule 66 (parameters -> parameters , expression .)
    )               reduce using rule 66 (parameters -> parameters , expression .)
    ADD             shift and go to state 51
    MIN             shift and go to state 52
    MUL             shift and go to state 53
    DIV             shift and go to state 54
    DOTADD          shift and go to state 55
    DOTMIN          shift and go to state 56
    DOTMUL          shift and go to state 57
    DOTDIV          shift and go to state 58


state 120

    (58) matrix -> [ rows ; ] .

    TRANSPOSE       reduce using rule 58 (matrix -> [ rows ; ] .)
    ADD             reduce using rule 58 (matrix -> [ rows ; ] .)
    MIN             reduce using rule 58 (matrix -> [ rows ; ] .)
    MUL             reduce using rule 58 (matrix -> [ rows ; ] .)
    DIV             reduce using rule 58 (matrix -> [ rows ; ] .)
    DOTADD          reduce using rule 58 (matrix -> [ rows ; ] .)
    DOTMIN          reduce using rule 58 (matrix -> [ rows ; ] .)
    DOTMUL          reduce using rule 58 (matrix -> [ rows ; ] .)
    DOTDIV          reduce using rule 58 (matrix -> [ rows ; ] .)
    ;               reduce using rule 58 (matrix -> [ rows ; ] .)
    LT              reduce using rule 58 (matrix -> [ rows ; ] .)
    GT              reduce using rule 58 (matrix -> [ rows ; ] .)
    LTE             reduce using rule 58 (matrix -> [ rows ; ] .)
    GTE             reduce using rule 58 (matrix -> [ rows ; ] .)
    NE              reduce using rule 58 (matrix -> [ rows ; ] .)
    EQ              reduce using rule 58 (matrix -> [ rows ; ] .)
    ,               reduce using rule 58 (matrix -> [ rows ; ] .)
    ]               reduce using rule 58 (matrix -> [ rows ; ] .)
    )               reduce using rule 58 (matrix -> [ rows ; ] .)
    :               reduce using rule 58 (matrix -> [ rows ; ] .)
    {               reduce using rule 58 (matrix -> [ rows ; ] .)
    IF              reduce using rule 58 (matrix -> [ rows ; ] .)
    FOR             reduce using rule 58 (matrix -> [ rows ; ] .)
    WHILE           reduce using rule 58 (matrix -> [ rows ; ] .)
    BREAK           reduce using rule 58 (matrix -> [ rows ; ] .)
    CONTINUE        reduce using rule 58 (matrix -> [ rows ; ] .)
    RETURN          reduce using rule 58 (matrix -> [ rows ; ] .)
    PRINT           reduce using rule 58 (matrix -> [ rows ; ] .)
    STR             reduce using rule 58 (matrix -> [ rows ; ] .)
    ID              reduce using rule 58 (matrix -> [ rows ; ] .)
    [               reduce using rule 58 (matrix -> [ rows ; ] .)
    INT             reduce using rule 58 (matrix -> [ rows ; ] .)
    FLOAT           reduce using rule 58 (matrix -> [ rows ; ] .)
    EYE             reduce using rule 58 (matrix -> [ rows ; ] .)
    ZEROS           reduce using rule 58 (matrix -> [ rows ; ] .)
    ONES            reduce using rule 58 (matrix -> [ rows ; ] .)


state 121

    (59) rows -> rows ; row .

    ;               reduce using rule 59 (rows -> rows ; row .)


state 122

    (61) row -> parameters .
    (66) parameters -> parameters . , expression

    ;               reduce using rule 61 (row -> parameters .)
    ,               shift and go to state 98


state 123

    (63) matrix_function -> EYE ( parameters ) .

    TRANSPOSE       reduce using rule 63 (matrix_function -> EYE ( parameters ) .)
    ADD             reduce using rule 63 (matrix_function -> EYE ( parameters ) .)
    MIN             reduce using rule 63 (matrix_function -> EYE ( parameters ) .)
    MUL             reduce using rule 63 (matrix_function -> EYE ( parameters ) .)
    DIV             reduce using rule 63 (matrix_function -> EYE ( parameters ) .)
    DOTADD          reduce using rule 63 (matrix_function -> EYE ( parameters ) .)
    DOTMIN          reduce using rule 63 (matrix_function -> EYE ( parameters ) .)
    DOTMUL          reduce using rule 63 (matrix_function -> EYE ( parameters ) .)
    DOTDIV          reduce using rule 63 (matrix_function -> EYE ( parameters ) .)
    ;               reduce using rule 63 (matrix_function -> EYE ( parameters ) .)
    LT              reduce using rule 63 (matrix_function -> EYE ( parameters ) .)
    GT              reduce using rule 63 (matrix_function -> EYE ( parameters ) .)
    LTE             reduce using rule 63 (matrix_function -> EYE ( parameters ) .)
    GTE             reduce using rule 63 (matrix_function -> EYE ( parameters ) .)
    NE              reduce using rule 63 (matrix_function -> EYE ( parameters ) .)
    EQ              reduce using rule 63 (matrix_function -> EYE ( parameters ) .)
    ,               reduce using rule 63 (matrix_function -> EYE ( parameters ) .)
    ]               reduce using rule 63 (matrix_function -> EYE ( parameters ) .)
    )               reduce using rule 63 (matrix_function -> EYE ( parameters ) .)
    :               reduce using rule 63 (matrix_function -> EYE ( parameters ) .)
    {               reduce using rule 63 (matrix_function -> EYE ( parameters ) .)
    IF              reduce using rule 63 (matrix_function -> EYE ( parameters ) .)
    FOR             reduce using rule 63 (matrix_function -> EYE ( parameters ) .)
    WHILE           reduce using rule 63 (matrix_function -> EYE ( parameters ) .)
    BREAK           reduce using rule 63 (matrix_function -> EYE ( parameters ) .)
    CONTINUE        reduce using rule 63 (matrix_function -> EYE ( parameters ) .)
    RETURN          reduce using rule 63 (matrix_function -> EYE ( parameters ) .)
    PRINT           reduce using rule 63 (matrix_function -> EYE ( parameters ) .)
    STR             reduce using rule 63 (matrix_function -> EYE ( parameters ) .)
    ID              reduce using rule 63 (matrix_function -> EYE ( parameters ) .)
    [               reduce using rule 63 (matrix_function -> EYE ( parameters ) .)
    INT             reduce using rule 63 (matrix_function -> EYE ( parameters ) .)
    FLOAT           reduce using rule 63 (matrix_function -> EYE ( parameters ) .)
    EYE             reduce using rule 63 (matrix_function -> EYE ( parameters ) .)
    ZEROS           reduce using rule 63 (matrix_function -> EYE ( parameters ) .)
    ONES            reduce using rule 63 (matrix_function -> EYE ( parameters ) .)


state 124

    (64) matrix_function -> ZEROS ( parameters ) .

    TRANSPOSE       reduce using rule 64 (matrix_function -> ZEROS ( parameters ) .)
    ADD             reduce using rule 64 (matrix_function -> ZEROS ( parameters ) .)
    MIN             reduce using rule 64 (matrix_function -> ZEROS ( parameters ) .)
    MUL             reduce using rule 64 (matrix_function -> ZEROS ( parameters ) .)
    DIV             reduce using rule 64 (matrix_function -> ZEROS ( parameters ) .)
    DOTADD          reduce using rule 64 (matrix_function -> ZEROS ( parameters ) .)
    DOTMIN          reduce using rule 64 (matrix_function -> ZEROS ( parameters ) .)
    DOTMUL          reduce using rule 64 (matrix_function -> ZEROS ( parameters ) .)
    DOTDIV          reduce using rule 64 (matrix_function -> ZEROS ( parameters ) .)
    ;               reduce using rule 64 (matrix_function -> ZEROS ( parameters ) .)
    LT              reduce using rule 64 (matrix_function -> ZEROS ( parameters ) .)
    GT              reduce using rule 64 (matrix_function -> ZEROS ( parameters ) .)
    LTE             reduce using rule 64 (matrix_function -> ZEROS ( parameters ) .)
    GTE             reduce using rule 64 (matrix_function -> ZEROS ( parameters ) .)
    NE              reduce using rule 64 (matrix_function -> ZEROS ( parameters ) .)
    EQ              reduce using rule 64 (matrix_function -> ZEROS ( parameters ) .)
    ,               reduce using rule 64 (matrix_function -> ZEROS ( parameters ) .)
    ]               reduce using rule 64 (matrix_function -> ZEROS ( parameters ) .)
    )               reduce using rule 64 (matrix_function -> ZEROS ( parameters ) .)
    :               reduce using rule 64 (matrix_function -> ZEROS ( parameters ) .)
    {               reduce using rule 64 (matrix_function -> ZEROS ( parameters ) .)
    IF              reduce using rule 64 (matrix_function -> ZEROS ( parameters ) .)
    FOR             reduce using rule 64 (matrix_function -> ZEROS ( parameters ) .)
    WHILE           reduce using rule 64 (matrix_function -> ZEROS ( parameters ) .)
    BREAK           reduce using rule 64 (matrix_function -> ZEROS ( parameters ) .)
    CONTINUE        reduce using rule 64 (matrix_function -> ZEROS ( parameters ) .)
    RETURN          reduce using rule 64 (matrix_function -> ZEROS ( parameters ) .)
    PRINT           reduce using rule 64 (matrix_function -> ZEROS ( parameters ) .)
    STR             reduce using rule 64 (matrix_function -> ZEROS ( parameters ) .)
    ID              reduce using rule 64 (matrix_function -> ZEROS ( parameters ) .)
    [               reduce using rule 64 (matrix_function -> ZEROS ( parameters ) .)
    INT             reduce using rule 64 (matrix_function -> ZEROS ( parameters ) .)
    FLOAT           reduce using rule 64 (matrix_function -> ZEROS ( parameters ) .)
    EYE             reduce using rule 64 (matrix_function -> ZEROS ( parameters ) .)
    ZEROS           reduce using rule 64 (matrix_function -> ZEROS ( parameters ) .)
    ONES            reduce using rule 64 (matrix_function -> ZEROS ( parameters ) .)


state 125

    (65) matrix_function -> ONES ( parameters ) .

    TRANSPOSE       reduce using rule 65 (matrix_function -> ONES ( parameters ) .)
    ADD             reduce using rule 65 (matrix_function -> ONES ( parameters ) .)
    MIN             reduce using rule 65 (matrix_function -> ONES ( parameters ) .)
    MUL             reduce using rule 65 (matrix_function -> ONES ( parameters ) .)
    DIV             reduce using rule 65 (matrix_function -> ONES ( parameters ) .)
    DOTADD          reduce using rule 65 (matrix_function -> ONES ( parameters ) .)
    DOTMIN          reduce using rule 65 (matrix_function -> ONES ( parameters ) .)
    DOTMUL          reduce using rule 65 (matrix_function -> ONES ( parameters ) .)
    DOTDIV          reduce using rule 65 (matrix_function -> ONES ( parameters ) .)
    ;               reduce using rule 65 (matrix_function -> ONES ( parameters ) .)
    LT              reduce using rule 65 (matrix_function -> ONES ( parameters ) .)
    GT              reduce using rule 65 (matrix_function -> ONES ( parameters ) .)
    LTE             reduce using rule 65 (matrix_function -> ONES ( parameters ) .)
    GTE             reduce using rule 65 (matrix_function -> ONES ( parameters ) .)
    NE              reduce using rule 65 (matrix_function -> ONES ( parameters ) .)
    EQ              reduce using rule 65 (matrix_function -> ONES ( parameters ) .)
    ,               reduce using rule 65 (matrix_function -> ONES ( parameters ) .)
    ]               reduce using rule 65 (matrix_function -> ONES ( parameters ) .)
    )               reduce using rule 65 (matrix_function -> ONES ( parameters ) .)
    :               reduce using rule 65 (matrix_function -> ONES ( parameters ) .)
    {               reduce using rule 65 (matrix_function -> ONES ( parameters ) .)
    IF              reduce using rule 65 (matrix_function -> ONES ( parameters ) .)
    FOR             reduce using rule 65 (matrix_function -> ONES ( parameters ) .)
    WHILE           reduce using rule 65 (matrix_function -> ONES ( parameters ) .)
    BREAK           reduce using rule 65 (matrix_function -> ONES ( parameters ) .)
    CONTINUE        reduce using rule 65 (matrix_function -> ONES ( parameters ) .)
    RETURN          reduce using rule 65 (matrix_function -> ONES ( parameters ) .)
    PRINT           reduce using rule 65 (matrix_function -> ONES ( parameters ) .)
    STR             reduce using rule 65 (matrix_function -> ONES ( parameters ) .)
    ID              reduce using rule 65 (matrix_function -> ONES ( parameters ) .)
    [               reduce using rule 65 (matrix_function -> ONES ( parameters ) .)
    INT             reduce using rule 65 (matrix_function -> ONES ( parameters ) .)
    FLOAT           reduce using rule 65 (matrix_function -> ONES ( parameters ) .)
    EYE             reduce using rule 65 (matrix_function -> ONES ( parameters ) .)
    ZEROS           reduce using rule 65 (matrix_function -> ONES ( parameters ) .)
    ONES            reduce using rule 65 (matrix_function -> ONES ( parameters ) .)


state 126

    (15) if -> IF ( condition ) instruction .
    (16) if -> IF ( condition ) instruction . ELSE instruction

    {               reduce using rule 15 (if -> IF ( condition ) instruction .)
    IF              reduce using rule 15 (if -> IF ( condition ) instruction .)
    FOR             reduce using rule 15 (if -> IF ( condition ) instruction .)
    WHILE           reduce using rule 15 (if -> IF ( condition ) instruction .)
    BREAK           reduce using rule 15 (if -> IF ( condition ) instruction .)
    CONTINUE        reduce using rule 15 (if -> IF ( condition ) instruction .)
    RETURN          reduce using rule 15 (if -> IF ( condition ) instruction .)
    PRINT           reduce using rule 15 (if -> IF ( condition ) instruction .)
    MIN             reduce using rule 15 (if -> IF ( condition ) instruction .)
    STR             reduce using rule 15 (if -> IF ( condition ) instruction .)
    ID              reduce using rule 15 (if -> IF ( condition ) instruction .)
    [               reduce using rule 15 (if -> IF ( condition ) instruction .)
    INT             reduce using rule 15 (if -> IF ( condition ) instruction .)
    FLOAT           reduce using rule 15 (if -> IF ( condition ) instruction .)
    EYE             reduce using rule 15 (if -> IF ( condition ) instruction .)
    ZEROS           reduce using rule 15 (if -> IF ( condition ) instruction .)
    ONES            reduce using rule 15 (if -> IF ( condition ) instruction .)
    $end            reduce using rule 15 (if -> IF ( condition ) instruction .)
    }               reduce using rule 15 (if -> IF ( condition ) instruction .)
    ELSE            shift and go to state 129

  ! ELSE            [ reduce using rule 15 (if -> IF ( condition ) instruction .) ]


state 127

    (17) for -> FOR variable ASSIGN expression : . expression instruction
    (40) expression -> . expression ADD expression
    (41) expression -> . expression MIN expression
    (42) expression -> . expression MUL expression
    (43) expression -> . expression DIV expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTMIN expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . MIN expression
    (49) expression -> . matrix_obj TRANSPOSE
    (50) expression -> . variable TRANSPOSE
    (51) expression -> . STR
    (52) expression -> . matrix_obj
    (53) expression -> . vector
    (54) expression -> . assignable
    (55) expression -> . number
    (56) matrix_obj -> . matrix
    (57) matrix_obj -> . matrix_function
    (71) variable -> . ID
    (62) vector -> . [ parameters ]
    (32) assignable -> . variable
    (33) assignable -> . reference
    (69) number -> . INT
    (70) number -> . FLOAT
    (58) matrix -> . [ rows ; ]
    (63) matrix_function -> . EYE ( parameters )
    (64) matrix_function -> . ZEROS ( parameters )
    (65) matrix_function -> . ONES ( parameters )
    (68) reference -> . variable [ parameters ]

    MIN             shift and go to state 25
    STR             shift and go to state 27
    ID              shift and go to state 33
    [               shift and go to state 34
    INT             shift and go to state 35
    FLOAT           shift and go to state 36
    EYE             shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39

    variable                       shift and go to state 16
    expression                     shift and go to state 130
    matrix_obj                     shift and go to state 26
    vector                         shift and go to state 28
    assignable                     shift and go to state 62
    number                         shift and go to state 29
    matrix                         shift and go to state 31
    matrix_function                shift and go to state 32
    reference                      shift and go to state 30

state 128

    (18) while -> WHILE ( condition ) instruction .

    {               reduce using rule 18 (while -> WHILE ( condition ) instruction .)
    IF              reduce using rule 18 (while -> WHILE ( condition ) instruction .)
    FOR             reduce using rule 18 (while -> WHILE ( condition ) instruction .)
    WHILE           reduce using rule 18 (while -> WHILE ( condition ) instruction .)
    BREAK           reduce using rule 18 (while -> WHILE ( condition ) instruction .)
    CONTINUE        reduce using rule 18 (while -> WHILE ( condition ) instruction .)
    RETURN          reduce using rule 18 (while -> WHILE ( condition ) instruction .)
    PRINT           reduce using rule 18 (while -> WHILE ( condition ) instruction .)
    MIN             reduce using rule 18 (while -> WHILE ( condition ) instruction .)
    STR             reduce using rule 18 (while -> WHILE ( condition ) instruction .)
    ID              reduce using rule 18 (while -> WHILE ( condition ) instruction .)
    [               reduce using rule 18 (while -> WHILE ( condition ) instruction .)
    INT             reduce using rule 18 (while -> WHILE ( condition ) instruction .)
    FLOAT           reduce using rule 18 (while -> WHILE ( condition ) instruction .)
    EYE             reduce using rule 18 (while -> WHILE ( condition ) instruction .)
    ZEROS           reduce using rule 18 (while -> WHILE ( condition ) instruction .)
    ONES            reduce using rule 18 (while -> WHILE ( condition ) instruction .)
    $end            reduce using rule 18 (while -> WHILE ( condition ) instruction .)
    }               reduce using rule 18 (while -> WHILE ( condition ) instruction .)
    ELSE            reduce using rule 18 (while -> WHILE ( condition ) instruction .)


state 129

    (16) if -> IF ( condition ) instruction ELSE . instruction
    (5) instruction -> . block
    (6) instruction -> . if
    (7) instruction -> . for
    (8) instruction -> . while
    (9) instruction -> . break ;
    (10) instruction -> . continue ;
    (11) instruction -> . return ;
    (12) instruction -> . print ;
    (13) instruction -> . statement ;
    (14) block -> . { instructions }
    (15) if -> . IF ( condition ) instruction
    (16) if -> . IF ( condition ) instruction ELSE instruction
    (17) for -> . FOR variable ASSIGN expression : expression instruction
    (18) while -> . WHILE ( condition ) instruction
    (19) break -> . BREAK
    (20) continue -> . CONTINUE
    (21) return -> . RETURN
    (22) return -> . RETURN expression
    (23) return -> . RETURN condition
    (24) print -> . PRINT parameters
    (25) statement -> . assign
    (26) statement -> . expression
    (27) assign -> . assignable ASSIGN expression
    (28) assign -> . assignable ADDASSIGN expression
    (29) assign -> . assignable MINASSIGN expression
    (30) assign -> . assignable MULASSIGN expression
    (31) assign -> . assignable DIVASSIGN expression
    (40) expression -> . expression ADD expression
    (41) expression -> . expression MIN expression
    (42) expression -> . expression MUL expression
    (43) expression -> . expression DIV expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTMIN expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . MIN expression
    (49) expression -> . matrix_obj TRANSPOSE
    (50) expression -> . variable TRANSPOSE
    (51) expression -> . STR
    (52) expression -> . matrix_obj
    (53) expression -> . vector
    (54) expression -> . assignable
    (55) expression -> . number
    (32) assignable -> . variable
    (33) assignable -> . reference
    (56) matrix_obj -> . matrix
    (57) matrix_obj -> . matrix_function
    (71) variable -> . ID
    (62) vector -> . [ parameters ]
    (69) number -> . INT
    (70) number -> . FLOAT
    (68) reference -> . variable [ parameters ]
    (58) matrix -> . [ rows ; ]
    (63) matrix_function -> . EYE ( parameters )
    (64) matrix_function -> . ZEROS ( parameters )
    (65) matrix_function -> . ONES ( parameters )

    {               shift and go to state 13
    IF              shift and go to state 14
    FOR             shift and go to state 15
    WHILE           shift and go to state 18
    BREAK           shift and go to state 19
    CONTINUE        shift and go to state 20
    RETURN          shift and go to state 21
    PRINT           shift and go to state 22
    MIN             shift and go to state 25
    STR             shift and go to state 27
    ID              shift and go to state 33
    [               shift and go to state 34
    INT             shift and go to state 35
    FLOAT           shift and go to state 36
    EYE             shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39

    instruction                    shift and go to state 131
    block                          shift and go to state 4
    if                             shift and go to state 5
    for                            shift and go to state 6
    while                          shift and go to state 7
    break                          shift and go to state 8
    continue                       shift and go to state 9
    return                         shift and go to state 10
    print                          shift and go to state 11
    statement                      shift and go to state 12
    variable                       shift and go to state 16
    expression                     shift and go to state 17
    assign                         shift and go to state 23
    assignable                     shift and go to state 24
    matrix_obj                     shift and go to state 26
    vector                         shift and go to state 28
    number                         shift and go to state 29
    reference                      shift and go to state 30
    matrix                         shift and go to state 31
    matrix_function                shift and go to state 32

state 130

    (17) for -> FOR variable ASSIGN expression : expression . instruction
    (40) expression -> expression . ADD expression
    (41) expression -> expression . MIN expression
    (42) expression -> expression . MUL expression
    (43) expression -> expression . DIV expression
    (44) expression -> expression . DOTADD expression
    (45) expression -> expression . DOTMIN expression
    (46) expression -> expression . DOTMUL expression
    (47) expression -> expression . DOTDIV expression
    (5) instruction -> . block
    (6) instruction -> . if
    (7) instruction -> . for
    (8) instruction -> . while
    (9) instruction -> . break ;
    (10) instruction -> . continue ;
    (11) instruction -> . return ;
    (12) instruction -> . print ;
    (13) instruction -> . statement ;
    (14) block -> . { instructions }
    (15) if -> . IF ( condition ) instruction
    (16) if -> . IF ( condition ) instruction ELSE instruction
    (17) for -> . FOR variable ASSIGN expression : expression instruction
    (18) while -> . WHILE ( condition ) instruction
    (19) break -> . BREAK
    (20) continue -> . CONTINUE
    (21) return -> . RETURN
    (22) return -> . RETURN expression
    (23) return -> . RETURN condition
    (24) print -> . PRINT parameters
    (25) statement -> . assign
    (26) statement -> . expression
    (27) assign -> . assignable ASSIGN expression
    (28) assign -> . assignable ADDASSIGN expression
    (29) assign -> . assignable MINASSIGN expression
    (30) assign -> . assignable MULASSIGN expression
    (31) assign -> . assignable DIVASSIGN expression
    (40) expression -> . expression ADD expression
    (41) expression -> . expression MIN expression
    (42) expression -> . expression MUL expression
    (43) expression -> . expression DIV expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTMIN expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . MIN expression
    (49) expression -> . matrix_obj TRANSPOSE
    (50) expression -> . variable TRANSPOSE
    (51) expression -> . STR
    (52) expression -> . matrix_obj
    (53) expression -> . vector
    (54) expression -> . assignable
    (55) expression -> . number
    (32) assignable -> . variable
    (33) assignable -> . reference
    (56) matrix_obj -> . matrix
    (57) matrix_obj -> . matrix_function
    (71) variable -> . ID
    (62) vector -> . [ parameters ]
    (69) number -> . INT
    (70) number -> . FLOAT
    (68) reference -> . variable [ parameters ]
    (58) matrix -> . [ rows ; ]
    (63) matrix_function -> . EYE ( parameters )
    (64) matrix_function -> . ZEROS ( parameters )
    (65) matrix_function -> . ONES ( parameters )

    ADD             shift and go to state 51
    MIN             shift and go to state 133
    MUL             shift and go to state 53
    DIV             shift and go to state 54
    DOTADD          shift and go to state 55
    DOTMIN          shift and go to state 56
    DOTMUL          shift and go to state 57
    DOTDIV          shift and go to state 58
    {               shift and go to state 13
    IF              shift and go to state 14
    FOR             shift and go to state 15
    WHILE           shift and go to state 18
    BREAK           shift and go to state 19
    CONTINUE        shift and go to state 20
    RETURN          shift and go to state 21
    PRINT           shift and go to state 22
    STR             shift and go to state 27
    ID              shift and go to state 33
    [               shift and go to state 34
    INT             shift and go to state 35
    FLOAT           shift and go to state 36
    EYE             shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39

    variable                       shift and go to state 16
    expression                     shift and go to state 17
    instruction                    shift and go to state 132
    block                          shift and go to state 4
    if                             shift and go to state 5
    for                            shift and go to state 6
    while                          shift and go to state 7
    break                          shift and go to state 8
    continue                       shift and go to state 9
    return                         shift and go to state 10
    print                          shift and go to state 11
    statement                      shift and go to state 12
    assign                         shift and go to state 23
    assignable                     shift and go to state 24
    matrix_obj                     shift and go to state 26
    vector                         shift and go to state 28
    number                         shift and go to state 29
    reference                      shift and go to state 30
    matrix                         shift and go to state 31
    matrix_function                shift and go to state 32

state 131

    (16) if -> IF ( condition ) instruction ELSE instruction .

    {               reduce using rule 16 (if -> IF ( condition ) instruction ELSE instruction .)
    IF              reduce using rule 16 (if -> IF ( condition ) instruction ELSE instruction .)
    FOR             reduce using rule 16 (if -> IF ( condition ) instruction ELSE instruction .)
    WHILE           reduce using rule 16 (if -> IF ( condition ) instruction ELSE instruction .)
    BREAK           reduce using rule 16 (if -> IF ( condition ) instruction ELSE instruction .)
    CONTINUE        reduce using rule 16 (if -> IF ( condition ) instruction ELSE instruction .)
    RETURN          reduce using rule 16 (if -> IF ( condition ) instruction ELSE instruction .)
    PRINT           reduce using rule 16 (if -> IF ( condition ) instruction ELSE instruction .)
    MIN             reduce using rule 16 (if -> IF ( condition ) instruction ELSE instruction .)
    STR             reduce using rule 16 (if -> IF ( condition ) instruction ELSE instruction .)
    ID              reduce using rule 16 (if -> IF ( condition ) instruction ELSE instruction .)
    [               reduce using rule 16 (if -> IF ( condition ) instruction ELSE instruction .)
    INT             reduce using rule 16 (if -> IF ( condition ) instruction ELSE instruction .)
    FLOAT           reduce using rule 16 (if -> IF ( condition ) instruction ELSE instruction .)
    EYE             reduce using rule 16 (if -> IF ( condition ) instruction ELSE instruction .)
    ZEROS           reduce using rule 16 (if -> IF ( condition ) instruction ELSE instruction .)
    ONES            reduce using rule 16 (if -> IF ( condition ) instruction ELSE instruction .)
    $end            reduce using rule 16 (if -> IF ( condition ) instruction ELSE instruction .)
    }               reduce using rule 16 (if -> IF ( condition ) instruction ELSE instruction .)
    ELSE            reduce using rule 16 (if -> IF ( condition ) instruction ELSE instruction .)


state 132

    (17) for -> FOR variable ASSIGN expression : expression instruction .

    {               reduce using rule 17 (for -> FOR variable ASSIGN expression : expression instruction .)
    IF              reduce using rule 17 (for -> FOR variable ASSIGN expression : expression instruction .)
    FOR             reduce using rule 17 (for -> FOR variable ASSIGN expression : expression instruction .)
    WHILE           reduce using rule 17 (for -> FOR variable ASSIGN expression : expression instruction .)
    BREAK           reduce using rule 17 (for -> FOR variable ASSIGN expression : expression instruction .)
    CONTINUE        reduce using rule 17 (for -> FOR variable ASSIGN expression : expression instruction .)
    RETURN          reduce using rule 17 (for -> FOR variable ASSIGN expression : expression instruction .)
    PRINT           reduce using rule 17 (for -> FOR variable ASSIGN expression : expression instruction .)
    MIN             reduce using rule 17 (for -> FOR variable ASSIGN expression : expression instruction .)
    STR             reduce using rule 17 (for -> FOR variable ASSIGN expression : expression instruction .)
    ID              reduce using rule 17 (for -> FOR variable ASSIGN expression : expression instruction .)
    [               reduce using rule 17 (for -> FOR variable ASSIGN expression : expression instruction .)
    INT             reduce using rule 17 (for -> FOR variable ASSIGN expression : expression instruction .)
    FLOAT           reduce using rule 17 (for -> FOR variable ASSIGN expression : expression instruction .)
    EYE             reduce using rule 17 (for -> FOR variable ASSIGN expression : expression instruction .)
    ZEROS           reduce using rule 17 (for -> FOR variable ASSIGN expression : expression instruction .)
    ONES            reduce using rule 17 (for -> FOR variable ASSIGN expression : expression instruction .)
    $end            reduce using rule 17 (for -> FOR variable ASSIGN expression : expression instruction .)
    }               reduce using rule 17 (for -> FOR variable ASSIGN expression : expression instruction .)
    ELSE            reduce using rule 17 (for -> FOR variable ASSIGN expression : expression instruction .)


state 133

    (41) expression -> expression MIN . expression
    (48) expression -> MIN . expression
    (40) expression -> . expression ADD expression
    (41) expression -> . expression MIN expression
    (42) expression -> . expression MUL expression
    (43) expression -> . expression DIV expression
    (44) expression -> . expression DOTADD expression
    (45) expression -> . expression DOTMIN expression
    (46) expression -> . expression DOTMUL expression
    (47) expression -> . expression DOTDIV expression
    (48) expression -> . MIN expression
    (49) expression -> . matrix_obj TRANSPOSE
    (50) expression -> . variable TRANSPOSE
    (51) expression -> . STR
    (52) expression -> . matrix_obj
    (53) expression -> . vector
    (54) expression -> . assignable
    (55) expression -> . number
    (56) matrix_obj -> . matrix
    (57) matrix_obj -> . matrix_function
    (71) variable -> . ID
    (62) vector -> . [ parameters ]
    (32) assignable -> . variable
    (33) assignable -> . reference
    (69) number -> . INT
    (70) number -> . FLOAT
    (58) matrix -> . [ rows ; ]
    (63) matrix_function -> . EYE ( parameters )
    (64) matrix_function -> . ZEROS ( parameters )
    (65) matrix_function -> . ONES ( parameters )
    (68) reference -> . variable [ parameters ]

    MIN             shift and go to state 25
    STR             shift and go to state 27
    ID              shift and go to state 33
    [               shift and go to state 34
    INT             shift and go to state 35
    FLOAT           shift and go to state 36
    EYE             shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39

    expression                     shift and go to state 134
    matrix_obj                     shift and go to state 26
    variable                       shift and go to state 16
    vector                         shift and go to state 28
    assignable                     shift and go to state 62
    number                         shift and go to state 29
    matrix                         shift and go to state 31
    matrix_function                shift and go to state 32
    reference                      shift and go to state 30

state 134

    (41) expression -> expression MIN expression .
    (48) expression -> MIN expression .
    (40) expression -> expression . ADD expression
    (41) expression -> expression . MIN expression
    (42) expression -> expression . MUL expression
    (43) expression -> expression . DIV expression
    (44) expression -> expression . DOTADD expression
    (45) expression -> expression . DOTMIN expression
    (46) expression -> expression . DOTMUL expression
    (47) expression -> expression . DOTDIV expression

  ! reduce/reduce conflict for ADD resolved using rule 41 (expression -> expression MIN expression .)
  ! reduce/reduce conflict for MIN resolved using rule 41 (expression -> expression MIN expression .)
  ! reduce/reduce conflict for MUL resolved using rule 41 (expression -> expression MIN expression .)
  ! reduce/reduce conflict for DIV resolved using rule 41 (expression -> expression MIN expression .)
  ! reduce/reduce conflict for DOTADD resolved using rule 41 (expression -> expression MIN expression .)
  ! reduce/reduce conflict for DOTMIN resolved using rule 41 (expression -> expression MIN expression .)
  ! reduce/reduce conflict for DOTMUL resolved using rule 41 (expression -> expression MIN expression .)
  ! reduce/reduce conflict for DOTDIV resolved using rule 41 (expression -> expression MIN expression .)
    ADD             reduce using rule 41 (expression -> expression MIN expression .)
    MIN             reduce using rule 41 (expression -> expression MIN expression .)
    DOTADD          reduce using rule 41 (expression -> expression MIN expression .)
    DOTMIN          reduce using rule 41 (expression -> expression MIN expression .)
    {               reduce using rule 41 (expression -> expression MIN expression .)
    IF              reduce using rule 41 (expression -> expression MIN expression .)
    FOR             reduce using rule 41 (expression -> expression MIN expression .)
    WHILE           reduce using rule 41 (expression -> expression MIN expression .)
    BREAK           reduce using rule 41 (expression -> expression MIN expression .)
    CONTINUE        reduce using rule 41 (expression -> expression MIN expression .)
    RETURN          reduce using rule 41 (expression -> expression MIN expression .)
    PRINT           reduce using rule 41 (expression -> expression MIN expression .)
    STR             reduce using rule 41 (expression -> expression MIN expression .)
    ID              reduce using rule 41 (expression -> expression MIN expression .)
    [               reduce using rule 41 (expression -> expression MIN expression .)
    INT             reduce using rule 41 (expression -> expression MIN expression .)
    FLOAT           reduce using rule 41 (expression -> expression MIN expression .)
    EYE             reduce using rule 41 (expression -> expression MIN expression .)
    ZEROS           reduce using rule 41 (expression -> expression MIN expression .)
    ONES            reduce using rule 41 (expression -> expression MIN expression .)
    ;               reduce using rule 48 (expression -> MIN expression .)
    MUL             shift and go to state 53
    DIV             shift and go to state 54
    DOTMUL          shift and go to state 57
    DOTDIV          shift and go to state 58

  ! MUL             [ reduce using rule 41 (expression -> expression MIN expression .) ]
  ! DIV             [ reduce using rule 41 (expression -> expression MIN expression .) ]
  ! DOTMUL          [ reduce using rule 41 (expression -> expression MIN expression .) ]
  ! DOTDIV          [ reduce using rule 41 (expression -> expression MIN expression .) ]
  ! ADD             [ reduce using rule 48 (expression -> MIN expression .) ]
  ! MIN             [ reduce using rule 48 (expression -> MIN expression .) ]
  ! MUL             [ reduce using rule 48 (expression -> MIN expression .) ]
  ! DIV             [ reduce using rule 48 (expression -> MIN expression .) ]
  ! DOTADD          [ reduce using rule 48 (expression -> MIN expression .) ]
  ! DOTMIN          [ reduce using rule 48 (expression -> MIN expression .) ]
  ! DOTMUL          [ reduce using rule 48 (expression -> MIN expression .) ]
  ! DOTDIV          [ reduce using rule 48 (expression -> MIN expression .) ]
  ! ADD             [ shift and go to state 51 ]
  ! MIN             [ shift and go to state 52 ]
  ! DOTADD          [ shift and go to state 55 ]
  ! DOTMIN          [ shift and go to state 56 ]

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for [ in state 16 resolved as shift
WARNING: reduce/reduce conflict in state 134 resolved using rule (expression -> expression MIN expression)
WARNING: rejected rule (expression -> MIN expression) in state 134
